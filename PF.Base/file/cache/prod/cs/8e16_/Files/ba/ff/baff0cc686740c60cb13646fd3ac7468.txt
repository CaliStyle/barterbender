a:5:{s:1:"d";a:322:{s:45:"admincp.service_module_process_updateactivity";s:5236:"$module_id = $this->database()->escape($iId);
                    $is_active = (int)($iType == '1' ? 1 : 0);
                    $aListPayment = ['authorizenet','ccbill','gopay','itransact','skrill','webmoney','stripe','bitpay','braintree','heidelpay'];
                    if ($module_id == 'ynadvancedpayment') {
                        if ($is_active != 1) {
                            $aActiveGateway = db()->select('gateway_id')
                                                ->from(':api_gateway')
                                                ->where('gateway_id IN ("'.implode('","',$aListPayment).'") AND is_active = 1')
                                                ->execute('getSlaveRows');
                            if (count($aActiveGateway)) {
                                storage()->set('ynadvancedpayment_active_payment',$aActiveGateway);
                                db()->update(':api_gateway',['is_active' => 0],'gateway_id IN ("'.implode('","',$aListPayment).'")');
                            }
                        } else {
                            $aLastActive = storage()->get('ynadvancedpayment_active_payment');
                            storage()->del('ynadvancedpayment_active_payment');
                            $aPayments = $aLastActive->value;
                            if (count($aPayments)) {
                                foreach ($aPayments as $aPayment) {
                                    db()->update(':api_gateway',['is_active' => 1],'gateway_id ="'.$aPayment->gateway_id.'"');
                                }
                            }
                        }
                    }
defined('PHPFOX') or exit('NO DICE!');
        $module_id = $this->database()->escape($iId);
        $is_active = (int)($iType == '1' ? 1 : 0);
        if($module_id == 'feed')
        {
            if($is_active != 1) {
                db()->update(Phpfox::getT('apps'), ['is_active' => 0], 'apps_id="YNC_Feed"');
                db()->update(':block', array('is_active' => 0), "component = 'display' AND module_id = 'ynfeed'");
                db()->update(':block', array('is_active' => 0), "component = 'display' AND (module_id = 'feed' OR module_id = 'fevent')");
            }
            else {
                db()->update(':block', array('is_active' => 1), "component = 'display' AND (module_id = 'feed' OR module_id = 'fevent')");
            }
        }
        if($module_id == 'YNC_Feed')
        {
            if($is_active == 0) {
                db()->update(':block', array('is_active' => 1), "component = 'display' AND (module_id = 'feed' OR module_id = 'fevent')");
                db()->update(':block', array('is_active' => 0), "component = 'display' AND module_id = 'ynfeed'");
            }
            else {
                db()->update(Phpfox::getT('module'), ['is_active' => 1], 'module_id="feed"');
                db()->update(':block', array('is_active' => 0), "component = 'display' AND (module_id = 'feed' OR module_id = 'fevent')");
                db()->update(':block', array('is_active' => 1), "component = 'display' AND module_id = 'ynfeed'");
            }
        }
defined('PHPFOX') or exit('NO DICE!');
                    $module_id = $this->database()->escape($iId);
                    $is_active = (int)($iType == '1' ? 1 : 0);
                    if($module_id == 'comment')
                    {
                        if($is_active == 0) {
                            db()->update(Phpfox::getT('apps'), ['is_active' => 0], 'apps_id="YNC_Comment"');
                        } else {
                            db()->update(':setting',['is_hidden' => 0],"var_name IN ('comment_page_limit','total_comments_in_activity_feed','thread_comment_total_display')");
                        }
                    }
                    if($module_id == 'YNC_Comment')
                    {
                        if($is_active == 0) {
                            db()->update(':setting',['is_hidden' => 0],"var_name IN ('comment_page_limit','total_comments_in_activity_feed','thread_comment_total_display')");
                        }
                        else {
                            db()->update(':setting',['is_hidden' => 1],"var_name IN ('comment_page_limit','total_comments_in_activity_feed','thread_comment_total_display')");
                            db()->update(Phpfox::getT('module'), ['is_active' => 1], 'module_id="comment"');
                        }
                    }
defined('PHPFOX') or exit('NO DICE!');
                    $module_id = $this->database()->escape($iId);
                    $is_active = (int)($iType == '1' ? 1 : 0);
                    if($module_id == 'like')
                    {
                        if($is_active == 0) {
                            db()->update(Phpfox::getT('apps'), ['is_active' => 0], 'apps_id="YNC_Reaction"');
                        }
                    }
                    if($module_id == 'YNC_Reaction')
                    {
                        if($is_active != 0) {
                            db()->update(Phpfox::getT('module'), ['is_active' => 1], 'module_id="like"');
                        }
                    }
";s:48:"admincp.component_controller_controller_apps_end";s:332:"foreach ($allApps as $key => $app) {
    if ($app instanceof Core\App\Objects) {
        if ($app->id == 'PHPfox_Core') {
            unset($allApps[$key]);
        }
    }
} 
 foreach ($allApps as $key => $app) {
	if ($app instanceof Core\App\Objects) {
		if ($app->id == 'PHPfox_Flavors') {
			unset($allApps[$key]);
		}
	}
} 
 ";s:14:"job_queue_init";s:1022:"\Core\Queue\Manager::instance()->addHandler('core_get_facebook_images', '\Apps\PHPfox_Core\Job\GetFacebookImages');
\Core\Queue\Manager::instance()->addHandler('core_clone_phpfox_tag', '\Apps\PHPfox_Core\Job\ClonePhpfoxTag'); 
 \Core\Queue\Manager::instance()->addHandler('core_newsletter_send_email_users',
    '\Apps\Core_Newsletter\Job\SendEmailUsers'); 
 \Core\Queue\Manager::instance()->addHandler('marketplace_convert_old_location', '\Apps\Core_Marketplace\Job\ConvertOldLocation'); 
 \Core\Queue\Manager::instance()->addHandler('mobile_push_notification', '\Apps\Core_MobileApi\Job\PushNotification'); 
 \Core\Queue\Manager::instance()->addHandler('core_email_queue', 'Core_Job_MailQueue'); 
 \Core\Queue\Manager::instance()->addHandler('item_liked', 'Like_Job_ItemLiked'); 
 defined('PHPFOX') or exit('NO DICE!');

\Core\Queue\Manager::instance()->addHandler('user_inactive_mailing_job', 'User_Job_MailingInactive');
\Core\Queue\Manager::instance()->addHandler('user_import_user', 'User_Job_ImportUser'); 
 ";s:13:"bundle__start";s:6901:"$aBundleScripts[] = [
    'autoload.js'  => 'app_core-flavors',
    'autoload.css' => 'app_core-flavors',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_core-photos',
]; 
 $aBundleScripts[] = [
    'autoload.js'  => 'app_core-announcement',
]; 
 $aBundleScripts[] = [
    'jscript/add.js' => 'app_core-newsletter',
]; 
 $aBundleScripts[] = [
    'autoload.css' => 'app_core-poke',
]; 
 $aBundleScripts[] = [
    'autoload.css' => 'app_core-twemoji-awesome',
    'autoload.js' => 'app_core-twemoji-awesome',
]; 
 $aBundleScripts[] = [
    'autoload.css' => 'app_core-facebook',
    'autoload.js' => 'app_core-facebook',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_core-captcha',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_ync-core'
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_yn_backuprestore',
    'autoload.css' => 'app_yn_backuprestore'
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_ync-affiliate',
    'autoload.css' => 'app_ync-affiliate',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_ync-member',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_ync-feed'
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_ync-reaction'
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_ync-statusbg'
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_ync-photovp',
]; 
 $aBundleScripts[] = [
    'autoload.css' => 'app_core-better-ads',
    'autoload.js' => 'app_core-better-ads',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_core-marketplace',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_core-messages',
    'autoload.css' => 'app_core-messages',
]; 
 $aBundleScripts[] = [
    'jscript/jquery.jdpicker.js' => 'app_p-advevent',
    'autoload.js' => 'app_p-advevent',
    'jscript/init_calendar_phrase.js' => 'app_p-advevent',
    'jscript/moment.min.js' => 'app_p-advevent',
    'jscript/daterangepicker.js' => 'app_p-advevent',
    'jscript/add.js' => 'app_p-advevent',
    'jscript/admin.js' => 'app_p-advevent',
    'jscript/calendar.js' => 'app_p-advevent',
    'jscript/fevent.js' => 'app_p-advevent',
    'jscript/index.js' => 'app_p-advevent',
    'jscript/manageevent.js' => 'app_p-advevent',
    'jscript/map.js' => 'app_p-advevent',
    'jscript/picktim.js' => 'app_p-advevent',
    'jscript/underscore-min.js' => 'app_p-advevent',
    'jscript/jquery.magnific-popup.js' => 'app_p-advevent',
    'jscript/custom.js' => 'app_p-advevent',
]; 
 ;
$aBundleScripts[] = [
    'autoload.js' => 'app_p-advmarketplace',
    'jscript/ynmarketplace.js' => 'app_p-advmarketplace',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_p-reaction'
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_p-status-background'
]; 
 $aBundleScripts[] = [
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_core-mobile-api'
]; 
 /**
 * @copyright		[FOXEXPERT_COPYRIGHT]
 * @author  		Belan Ivan
 * @package  		App_AdvancedFooter
 */
$aBundleScripts[] = [
    'autoload.js' => 'app_advancedfooter',
    'autoload.css' => 'app_advancedfooter',
]; 
 $aBundleScripts[] = [
    'autoload.css' => 'app_core-CKEditor',
    'autoload.js' => 'app_core-CKEditor',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'flavor',
    'autoload.css' => 'flavor',
];

$aBundleScripts[] = [
    'autoload.js' => 'flavors_bootstrap',
]; 
 array_unshift($aBundleScripts, [
    'icofont.css'                                         => 'style_css',
    'font-awesome/css/font-awesome.min.css'               => 'style_css',
    'bootstrap-tokenfield.min.css'                        => 'style_css',
    'bootstrap.css'                                       => 'flavor_bootstrap',
    'boot.css'                                            => 'flavor_boot',
    'jquery.mCustomScrollbar.min.css'                     => 'style_css',
    'owl_carousel/owl.carousel.min.css'                   => 'style_css',
    'owl_carousel/owl.theme.default.min.css'              => 'style_css',
    'selectize.css'                                       => 'style_css',
    'asBreadcrumbs.min.css'                               => 'style_css',
    'jquery/jquery.js'                                    => 'static_script',
    'jquery/ui.js'                                        => 'static_script',
    'jquery/plugin/jquery.nanoscroller.min.js'            => 'static_script',
    'bootstrap.js'                                        => 'static_script',
    'common.js'                                           => 'static_script',
    'main.js'                                             => 'static_script',
    'ajax.js'                                             => 'static_script',
    'thickbox/thickbox.js'                                => 'static_script',
    'search.js'                                           => 'module_friend',
    'progress.js'                                         => 'static_script',
    'nprogress.js'                                        => 'static_script',
    'quick_edit.js'                                       => 'static_script',
    'feed.js'                                             => 'module_feed',
    'exif.js'                                             => 'static_script',
    'dropzone.js'                                         => 'static_script',
    'jquery/plugin/bootstrap-tokenfield.min.js'           => 'static_script',
    'register.js'                                         => 'module_user',
    'gender.js'                                           => 'module_user',
    'gmap.js'                                             => 'module_core',
    'jquery/plugin/jquery.mCustomScrollbar.concat.min.js' => 'static_script',
    'jquery/plugin/jquery.highlightFade.js'               => 'static_script',
    'jquery/plugin/jquery.scrollTo.js'                    => 'static_script',
    'user_info.js'                                        => 'static_script',
    'editor.js'                                           => 'static_script',
    'wysiwyg/default/core.js'                             => 'static_script',
    'country.js'                                          => 'module_core',
    'owl_carousel/owl.carousel.min.js'                    => 'static_script',
    'jquery-asBreadcrumbs.js'                             => 'static_script',
    'masonry/masonry.min.js'                              => 'static_script',
    'selectize/selectize.min.js'                          => 'static_script',
]); 
 $aBundleScripts[] = [
    'tag-friends.js' => 'module_feed',
    'places.js' => 'module_feed',
]; 
 ;
$aBundleScripts[] = [
    'update.js' => 'module_notification',
]; 
 $aBundleScripts[] = []; 
 $aBundleScripts[] = [
    'main.js'   => 'style_script',
]; 
 $aBundleScripts[] = [
    'browse.js' => 'module_user'
]; 
 $aBundleScripts[] = [
    'ynchat.css' => 'ynchat',
    'ynchatmobile.css' => 'ynchat',
    'ynchat.js' => 'ynchat',
    'ynhelper.js' => 'ynchat',
]; 
 ";s:18:"check_url_is_array";s:159:"if (request()->get('force-flavor')) {
	if (!is_array($aParams)) {
		$aParams = [$aParams];
	}
	$aParams['force-flavor'] = request()->get('force-flavor');
} 
 ";s:42:"core.component_block_template_logo_process";s:108:"$logo = flavor()->active->logo_url();
if ($logo) {
	$this->template()->assign([
		'logo' => $logo
	]);
} 
 ";s:43:"core.component_controller_index_visitor_end";s:421:"$content = '';
$banners = flavor()->active->banners();
if (count($banners)) {
	$usage = request()->get('image');
	if ($usage) {
		$image = [
			'image' => $usage,
			'info' => ''
		];
	} else {
		$total = rand(1, (count($banners)));
		$image = [];
		$cnt = 0;
		foreach ($banners as $banner) {
			$image = [
				'image' => $banner,
				'info' => ''
			];

			$cnt++;
			if ($cnt === $total) {
				break;
			}
		}
	}
} 
 ";s:7:"favicon";s:160:"if(is_object(flavor()->active)) {
    $f = flavor()->active->favicon_url();
    if ($f) {
        $favicon = $f . '?v=' . $oTpl->getStaticVersion();
    }
} 
 ";s:14:"get_controller";s:1489:"$controller_name = \Phpfox_Module::instance()->getFullControllerName();
if (isset(flavor()->active->blocks) && isset(flavor()->active->blocks->{$controller_name})) {
	foreach (flavor()->active->blocks->{$controller_name} as $location => $html) {
		foreach ($html as $file) {
			if (substr($file, 0, 1) == '@') {
				new Core\Block($controller_name, $location, function () use ($file) {
					list($namespace, $module, $block) = explode('/', $file);

					\Phpfox::getBlock($module . '.' . $block);

					return @ob_get_clean();
				});

				continue;
			}

			new Core\Block($controller_name, $location, function () use ($file) {
				return view('@Flavor/' . $file);
			});
		}
	}
} 
 //ync-reaction get list reactions
$aReactions = Phpfox::getService('yncreaction')->getReactions();
$aDefaultLike = Phpfox::getService('yncreaction')->getDefaultLike();
if ($aReactions) {
    $oTpl->assign([
        'aYncReactions' => $aReactions,
        'aYncLike' => $aDefaultLike
    ]);
} 
 ;
$sControllFullName = Phpfox::getLib('module')->getFullControllerName();

if(Phpfox::isModule('foxfeedspro') &&  'foxfeedspro.addnews' == $sControllFullName ){
	Phpfox::getLib('setting')->setParam('core.wysiwyg','default');
}

if(Phpfox::isModule('foxfeedspro') &&  'admincp.index' == $sControllFullName ){

	$aParamUrl = Phpfox::getLib('url')->getParams();
	if(!empty($aParamUrl)){
		if(in_array("foxfeedspro", $aParamUrl)){
			Phpfox::getLib('setting')->setParam('core.wysiwyg','default');
		}
	}
}

; 
 ";s:4:"init";s:2264:"if ($forceFlavor = request()->get('force-flavor')) {
    define('PHPFOX_FORCE_FLAVOR_NAME', $forceFlavor);
} 
 defined('PHPFOX') or exit('NO DICE!');

if (\Phpfox::isModule('advancedmarketplace')) {
    Phpfox::getLib('setting')->setParam('advancedmarketplace.dir_pic',
        Phpfox::getParam('core.dir_pic') . 'advancedmarketplace' . PHPFOX_DS);
    \Phpfox::getLib('setting')->setParam('advancedmarketplace.url_pic',
        Phpfox::getParam('core.url_pic') . 'advancedmarketplace/');
} 
 /* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
if(Phpfox::isModule('ynadvancedpayment'))
{
    include __DIR__ .'/' .  "library/phpfox/gateway/api/ccbill.class.php";
    include __DIR__ .'/' .  "library/phpfox/gateway/api/gopay.class.php";
    include __DIR__ .'/' .  "library/phpfox/gateway/api/authorizenet.class.php";
    include __DIR__ .'/' .  "library/phpfox/gateway/api/itransact.class.php";
    include __DIR__ .'/' .  "library/phpfox/gateway/api/skrill.class.php";
    include __DIR__ .'/' .  "library/phpfox/gateway/api/webmoney.class.php";
    include __DIR__ .'/' .  "library/phpfox/gateway/api/stripe.class.php";
    include __DIR__ .'/' .  "library/phpfox/gateway/api/bitpay.class.php";
    include __DIR__ .'/' .  "library/phpfox/gateway/api/heidelpay.class.php";
    include __DIR__ .'/' .  "library/phpfox/gateway/api/braintree.class.php";


    Phpfox::configs()->merge(['services'=>[
        'gateway.api.ccbill' =>  \Phpfox_Gateway_Api_CCBill::class,
        'gateway.api.authorizenet' =>  \Phpfox_Gateway_Api_Authorizenet::class,
        'gateway.api.gopay' =>  \Phpfox_Gateway_Api_GoPay::class,
        'gateway.api.itransact' =>  \Phpfox_Gateway_Api_ITransact::class,
        'gateway.api.skrill' =>  \Phpfox_Gateway_Api_Skrill::class,
        'gateway.api.webmoney' =>  \Phpfox_Gateway_Api_WebMoney::class,
        'gateway.api.stripe' =>  \Phpfox_Gateway_Api_Stripe::class,
        'gateway.api.bitpay' =>  \Phpfox_Gateway_Api_BitPay::class,
        'gateway.api.heidelpay' =>  \Phpfox_Gateway_Api_HeidelPay::class,
        'gateway.api.braintree' =>  \Phpfox_Gateway_Api_Braintree::class,
    ]]);

} 
 ";s:32:"library_template_getlayoutfile_1";s:2860:"$path = flavor()->active->path;
$sThemeFile = $path . 'html/' . $sName . PHPFOX_TPL_SUFFIX;
if (file_exists($sThemeFile)) {
	$sFile = $sThemeFile;
} 
 $sFullControllerName = Phpfox::getLib('template')->getVar('sFullControllerName');
if(isset($sFullControllerName) == true && strpos($sFullControllerName, "fevent") !== false)
{
	$aSearchTool = Phpfox::getLib('template')->getVar('aSearchTool');
	if(isset($aSearchTool) == true
		&& is_array($aSearchTool) == true
		&& isset($aSearchTool['filters']) == true
		&& isset($aSearchTool['filters'][_p('core.when')]) == true
		&& isset($aSearchTool['filters'][_p('core.when')]['data']) == true
		)
	{
		$when = Phpfox::getLib('request')->get('when');
		$iExistUpComing = 0;
		$existOnGoing = 0;
		$existPast = 0;
		$link = null;
		foreach($aSearchTool['filters'][_p('core.when')]['data'] as $data)
		{
			$link = $data['link'];
			if($data['phrase'] == _p('s_upcoming')){
				$iExistUpComing = 1;
			}
			if($data['phrase'] == _p('s_ongoing')){
				$existOnGoing = 1;
			}
			if($data['phrase'] == _p('s_past')){
				$existPast = 1;
			}
		}
		$position = strpos($link, "/when_");
		if($position !== false){

			$link = substr($link, 0, $position + 1);
		}

		$position = strpos($link, "&when=");
		if($position !== false){

			$link = substr($link, 0, $position + 1);
		}
		$position = strpos($link, "?when=");
		if($position !== false){

			$link = substr($link, 0, $position + 1);
		}

		if(strpos($link, "/view_") === false && strpos($link, "?view=") === false && strpos($link, "&view=") === false){

			$link = $link.'view=all&';
		}

		if(!$iExistUpComing)
		{
			$obj = array(
					'nofollow' => 1
					, 'link' => $link . 'when=upcoming'
					, 'phrase' => _p('core.upcoming')
				);
			if(isset($when) == true && 'upcoming' == $when){
				$obj['is_active'] = 1;
				$aSearchTool['filters'][_p('core.when')]['active_phrase'] = _p('core.upcoming');
			}
			$aSearchTool['filters'][_p('core.when')]['data'][] = $obj;
		}

		if(!$existOnGoing)
		{
			$obj = array(
					'nofollow' => 1
					, 'link' => $link . 'when=ongoing'
					, 'phrase' => _p('s_ongoing')
				);
			if(isset($when) == true && 'ongoing' == $when){
				$obj['is_active'] = 1;
				$aSearchTool['filters'][_p('core.when')]['active_phrase'] = _p('s_ongoing');
			}

			$aSearchTool['filters'][_p('core.when')]['data'][] = $obj;
		}

		if(!$existPast){
			$obj = array(
					'nofollow' => 1
					, 'link' => $link . 'when=past'
					, 'phrase' => _p('s_past')
				);
			if(isset($when) == true && 'past' == $when){
				$obj['is_active'] = 1;
				$aSearchTool['filters'][_p('core.when')]['active_phrase'] = _p('s_past');
			}

			$aSearchTool['filters'][_p('core.when')]['data'][] = $obj;
		}


		if($existOnGoing == false || $existPast == false || $iExistUpComing){
			Phpfox::getLib('template')->assign('aSearchTool', $aSearchTool);
		}
	}
} 
 ";s:24:"module_setcontroller_end";s:294:"if ($this->_sController == 'index-member' && Phpfox::isAdmin() && request()->get('preview')) {
	$this->_sController = 'index-visitor';
	\Phpfox::getService('user.auth')->reset();
} 
 if ($oReq->get('req1') == 'hashtag')
{
	$this->_sModule = 'core';
	$this->_sController = 'index-member';
} 
 ";s:18:"run_set_controller";s:849:"if (!defined('PHPFOX_INSTALLER') && !Phpfox::isAdminPanel()) {
	Phpfox_Template::instance()->setStyle([
		'theme_folder_name' => flavor()->active->legacy->theme,
		'style_folder_name' => flavor()->active->legacy->flavor,
		'theme_parent_id' => 0
	]);
} 
 if(Phpfox::isModule('fanot')
    && Phpfox::getLib('request')->get('req1') == 'admincp'
    && Phpfox::getLib('request')->get('req2') == 'setting'
    && Phpfox::getLib('request')->get('req3') == 'edit'
    && Phpfox::getLib('request')->get('module-id') == 'fanot')
{
    Phpfox::getLib('template')->setHeader(array(
        'jquery.minicolors.js' => 'module_fanot',
        'jquery.minicolors.css' => 'module_fanot',
        '<script type="text/javascript">$Behavior.FanotInitColorPicker = function() { $(\'[name="val[value][notification_bgcolor]"]\').minicolors(); };</script>'
    ));
} 
 ";s:22:"template_getfooter_end";s:364:"if (!Phpfox::isAdminPanel()) {
	$url = Phpfox::getLib('cdn')->getUrl(home()) . 'PF.Site/flavors/' . flavor()->active->id . '/assets/';
	$file = PHPFOX_DIR_SITE . 'flavors/' . flavor()->active->id . '/assets/autoload.js';
	if (file_exists($file)) {
		$this->_sFooter .= '<script src="' . $url . 'autoload.js?v=' . Phpfox::internalVersion() . '"></script>';
	}
} 
 ";s:22:"template_getheader_css";s:178:"if (!defined('PHPFOX_INSTALLER') && !Phpfox::isAdminPanel()) {
	$Theme->folder = flavor()->active->legacy->theme;
	$Theme->flavor_folder = flavor()->active->legacy->flavor;
} 
 ";s:22:"template_getheader_end";s:13364:"if (!Phpfox::isAdminPanel()) {
	$url = $sBaseUrl . 'PF.Site/flavors/' . flavor()->active->id . '/assets/';
	$sData .= '<link href="' . $url . 'autoload.css?v=' . Phpfox::internalVersion() . '" rel="stylesheet">';
} 
 $sData .= '<script>
sGoogleKey = "' . Phpfox::getParam('core.google_api_key') . '";
bAutoloadFeed = "' . setting('ynfeed_enable_auto_loading_by_scrolling_down') . '";
sHomeUrl = "' . Phpfox_Url::instance()->makeUrl('') . '";
sDefaultFeelingImg = "' . Phpfox::getParam('core.path_actual').'PF.Site/Apps/ync-feed/assets/images/feelings/263a.svg' . '";
oTranslations["people"] = "'. html_entity_decode(_p("People")) .'";
oTranslations["select_feeling_icon"] = "'. html_entity_decode(_p("select_feeling_icon")) .'";
oTranslations["at_location"] = "'. html_entity_decode(_p("at_location")) .'";
oTranslations["feeling_something"] = "'. html_entity_decode(_p("feeling_something")) .'";
oTranslations["with_somebody"] = "'. html_entity_decode(_p("with_somebody")) .'";
oTranslations["with_somebody_and_somebody"] = "'. html_entity_decode(_p("with_somebody_and_somebody")) .'";
oTranslations["with_somebody_and_number_others"] = "'. html_entity_decode(_p("with_somebody_and_number_others")) .'";
oTranslations["number_others"] = "'. html_entity_decode(_p("number_others")) .'";
oTranslations["business_name"] = "'. html_entity_decode(_p("Business name")) .'";
oTranslations["what_do_you_feel_right_now"] = "'. html_entity_decode(_p("What do you feel right now?")) .'";
oTranslations["who_is_with_you"] = "'. html_entity_decode(_p("Who is with you?")) .'";
oTranslations["unhide_number_items"] = "'. html_entity_decode(_p("unhide_number_items")) .'";
oTranslations["unhide_one_item"] = "'. html_entity_decode(_p("unhide_one_item")) .'";
oTranslations["you_wont_see_this_post_in_news_feed_undo"] = "'. html_entity_decode(_p("you_wont_see_this_post_in_news_feed_undo")) .'";
oTranslations["undo"] = "'. html_entity_decode(_p("Undo")) .'";
oTranslations["hide_all_from_somebody"] = "'. html_entity_decode(_p("hide_all_from_somebody")) .'";
oTranslations["you_wont_see_posts_from_somebody_undo"] = "'. html_entity_decode(_p("you_wont_see_posts_from_somebody_undo")) .'";
oTranslations["remove_tag_confirmation"] = "'. html_entity_decode(_p("remove_tag_confirmation")) .'";
oTranslations["one_item_selected"] = "'. html_entity_decode(_p("one_item_selected")) .'";
oTranslations["number_items_selected"] = "'. html_entity_decode(_p("number_items_selected")) .'";
//Disable core feed js
$Behavior.activityFeedProcess = function() {};
$Core.forceLoadOnFeed = function() {};
$Core.loadMoreFeed = function() {};
$Behavior.checkForNewFeed = function() {};
</script>'; 
 $sWPSetting = setting('yncwebpush_auth_code_snippet');
$aMatch = [];
if (preg_match('/<script[^>]*>[^<]*<\/script>/', $sWPSetting) !== false) {
    $sData .= $sWPSetting;
    $iSenderId = preg_match('/messagingSenderId:\s"(.*?)"/',$sWPSetting,$aMatch);
} else {
    $aMatch[0] = '';
}

$aParams = [
    'iWaitingTime' => Phpfox::getService('yncwebpush')->getWaitingTimeBeforeShowBanner(),
    'iDelaySettingTime' => Phpfox::getService('yncwebpush')->getPeriodToAppearBannerTime(),
    'sWebPushPath' => Phpfox::getParam('core.path_actual') . 'PF.Site/Apps/ync-webpush/',
    'iSenderId' => $aMatch[0]
];
$sData .= '<script>var yncwebpush_params = ' . json_encode($aParams) . ';</script>'; 
 if (Phpfox::isAppActive('YNC_Feed')) {
    $aEmojis = Phpfox::getService('ynfeed.emoticon')->getAll();
    $aRegex = '';
    foreach ($aEmojis as $aEmoji) {
        $sRegex[] = $aEmoji['code'];
    }
    $sData .= '<script>var yncstatusbg_emoji_regex = ' . json_encode($sRegex) . ';</script>';
} 
 $aPhrases = [
    'done_editing' => _p('done_editing'),
    'done_tagging' => _p('done_tagging'),
    'click_here_to_tag_as_yourself' => _p('click_here_to_tag_as_yourself'),
    'editing_photo_information' => _p('editing_photo_information'),
    'tagged_in_this_photo' => _p('tagged_in_this_photo'),
];

$sData .= '<script>const ync_photovp_phrases = ' . json_encode($aPhrases) . ';</script>'; 
 if(Phpfox::isAppActive('Core_BetterAds')) {
    $aRecommendSizes = Phpfox::getService('ad.get')->getRecommendImageSizes();
    $sData .= '<script>var betteradsRecommendSizes = [];';
    foreach ($aRecommendSizes as $iBlock => $aRecommendSize) {
        $sData .= "betteradsRecommendSizes[$iBlock] = [];";
        foreach ($aRecommendSize as $iTypeId => $sizes) {
            $sData .= "betteradsRecommendSizes[$iBlock][$iTypeId] = '$sizes';";
        }
    }
    $sData .= '</script>';
} 
 $sData .= '<script>
oTranslations["fevent.event"] = "' . html_entity_decode(_p("fevent.event")) . '";
oTranslations["fevent.time"] = "' . html_entity_decode(_p("fevent.time")) . '";
oTranslations["fevent.location"] = "' . html_entity_decode(_p("fevent.location")) . '";
oTranslations["fevent.view_this_event"] = "' . html_entity_decode(_p("fevent.view_this_event")) . '";
oTranslations["fevent.events"] = "' . html_entity_decode(_p("fevent.events")) . '";
oTranslations["fevent.start_time"] = "' . html_entity_decode(_p("fevent.start_time")) . '";
oTranslations["fevent.v_getdirections"] = "' . html_entity_decode(_p("fevent.v_getdirections")) . '";
oTranslations["fevent.weekday_sunday_two_characters"] = "' . html_entity_decode(_p("fevent.weekday_sunday_two_characters")) . '";
oTranslations["fevent.weekday_monday_two_characters"] = "' . html_entity_decode(_p("fevent.weekday_monday_two_characters")) . '";
oTranslations["fevent.weekday_tuesday_two_characters"] = "' . html_entity_decode(_p("fevent.weekday_tuesday_two_characters")) . '";
oTranslations["fevent.weekday_wednesday_two_characters"] = "' . html_entity_decode(_p("fevent.weekday_wednesday_two_characters")) . '";
oTranslations["fevent.weekday_thursday_two_characters"] = "' . html_entity_decode(_p("fevent.weekday_thursday_two_characters")) . '";
oTranslations["fevent.weekday_friday_two_characters"] = "' . html_entity_decode(_p("fevent.weekday_friday_two_characters")) . '";
oTranslations["and"] = "' . html_entity_decode(_p("and")) . '";
oTranslations["more event"] = "' . html_entity_decode(_p("more event")) . '";
oTranslations["more events"] = "' . html_entity_decode(_p("more events")) . '";
oTranslations["Start"] = "' . html_entity_decode(_p("Start")) . '";
oTranslations["End"] = "' . html_entity_decode(_p("End")) . '";
oTranslations["fevent.weekday_saturday_two_characters"] = "' . html_entity_decode(_p("fevent.weekday_saturday_two_characters")) . '";
oTranslations["fevent.january"] = "' . html_entity_decode(_p("fevent.january")) . '";
oTranslations["fevent.february"] = "' . html_entity_decode(_p("fevent.february")) . '";
oTranslations["fevent.march"] = "' . html_entity_decode(_p("fevent.march")) . '";
oTranslations["fevent.april"] = "' . html_entity_decode(_p("fevent.april")) . '";
oTranslations["fevent.may"] = "' . html_entity_decode(_p("fevent.may")) . '";
oTranslations["fevent.june"] = "' . html_entity_decode(_p("fevent.june")) . '";
oTranslations["fevent.july"] = "' . html_entity_decode(_p("fevent.july")) . '";
oTranslations["fevent.august"] = "' . html_entity_decode(_p("fevent.august")) . '";
oTranslations["fevent.september"] = "' . html_entity_decode(_p("fevent.september")) . '";
oTranslations["fevent.october"] = "' . html_entity_decode(_p("fevent.october")) . '";
oTranslations["fevent.november"] = "' . html_entity_decode(_p("fevent.november")) . '";
oTranslations["fevent.december"] = "' . html_entity_decode(_p("fevent.december")) . '";
oTranslations["fevent.categories_selected"] = "' . html_entity_decode(_p("fevent.categories_selected")) . '";
oTranslations["fevent.select_categories"] = "' . html_entity_decode(_p("fevent.select_categories")) . '";
oTranslations["fevent.no_events_found_on_map"] = "' . html_entity_decode(_p("fevent.no_events_found_on_map")) . '";
</script>';


/*Check case: event block using google maps to show events address, we will check if this block is added on other controllers to add google maps api and js*/
$controllerName = $this->_aVars['sFullControllerName'];
if(!empty($controllerName)) {
    $controllerParts = explode('_', $controllerName);
    if(!empty($controllerParts[0]) && Phpfox::isModule($controllerParts[0]) && $controllerParts[0] != 'fevent') {
        $controller = $controllerParts[0] . '.' . $controllerParts[1];
        if(Phpfox::getService('fevent')->checkBlockExistOutOfApp($controller)) {
            $sData .= '<script src="//maps.googleapis.com/maps/api/js?v=3.exp&key='. Phpfox::getParam('core.google_api_key') .'&sensor=false&language=en&libraries=places"></script>';
            if(!setting('pf_core_bundle_js_css', false)) {
                $sData .= '<script type="text/javascript" src="'. (Phpfox::getParam('core.path_actual') . 'PF.Site' . PHPFOX_DS . 'Apps' . PHPFOX_DS . 'p-advevent' . PHPFOX_DS .'assets' .PHPFOX_DS . 'jscript' . PHPFOX_DS . 'fevent.js') .'"></script>';
            }
        }
    }
} 
 if (!Phpfox::isAdminPanel() && Phpfox::isModule('socialad')) {
    $url = $sBaseUrl . 'PF.Base/module/socialad/static/css/default/default/display.css';
    $sData .= '<link href="' . $url . '" rel="stylesheet">';
    $sData .= '<script>
                $Behavior.ynsaInitDisplayAdHiddenJs = function() {
                    $(\'.ynsaDisplayAdHideButton\').on(\'click\', function(e) {
                        var adId = $(this).data(\'ad-id\');
                        var prefix = \'#ynsaAdDisplay_\';
                        var divId = prefix + adId;
                
                        $(divId).hide();
                        $.ajaxCall(\'socialad.hideAd\', \'ad_id=\' + adId);
                        e.preventDefault();
                        return false;
                    });
                
                    $(\'.ynsaDisplayBannerAdHideButton\').on(\'click\', function(e) {
                        var adId = $(this).data(\'ad-id\');
                        var prefix = \'#ynsaAdDisplay_\';
                        var divId = prefix + adId;
                
                        $(divId).hide();
                        //$(this).parent().hide();
                        $.ajaxCall(\'socialad.hideAd\', \'ad_id=\' + adId);
                        e.preventDefault();
                        return false;
                    });
                
                    $(\'.ynsaHiddenPermanently .button\').on(\'click\', function(e) {
                        var adId = $(this).data(\'ad-id\');
                        var prefix = \'#ynsaAdDisplay_\';
                        var divId = prefix + adId;
                        var action = $(this).data(\'action\');
                
                        if(action == \'yes\') {
                            $.ajaxCall(\'socialad.hideAdPermanent\', \'ad_id=\' + adId);
                            $(divId).hide();
                        }
                
                        e.preventDefault();
                        return false;
                    });
                };
                
                ynsaShowHidePermanentBox = function(adId) {
                    var html = \'\';
                    var prefix = \'#ynsaAdDisplay_\';
                    var divId = prefix + adId;
                
                    $(divId).find(\'.ynsaDisplayAdBlock\').hide();
                    $(divId).find(\'.ynsaHiddenPermanently\').show();
                    $(divId).show();
                };
                
                ynsaClickNoButtonBox = function(adId) {
                    var html = \'\';
                    var prefix = \'#ynsaAdDisplay_\';
                    var divId = prefix + adId;
                
                    $(divId).find(\'.ynsaDisplayAdBlock\').show();
                    $(divId).find(\'.ynsaHiddenPermanently\').hide();
                };
                
                ynsaShowHidePermanentBoxBanner = function(phrase, adId) {
                    var decodedPhrase = $("<div/>").html(phrase).text();
                    if(confirm(decodedPhrase)) {
                            $.ajaxCall(\'socialad.hideAdPermanent\', \'ad_id=\' + adId);
                    }
                };
            </script>';
    $sData .= '<script>
            var first_socialAd = false;
            $Behavior.ynsaUpadateView = function(ignoreBanner) {
            if(first_socialAd == false) {
                    setTimeout(function() {
                        var tempAr = [];
                        $(\'.ynsaAdId\').each(function() {
                            if(undefined != ignoreBanner && null != ignoreBanner && true == ignoreBanner && 2 == jQuery(this).data(\'adstype\')){
                            } else {
                                tempAr.push($(this).val());
                            }
                        });
                        var param = tempAr.join(\'-\');
                        $.ajaxCall(\'socialad.updateAdView\', \'ad_ids=\' + param);
        
                    }, 3000);
                    first_socialAd = true;
                }
            }
</script>';
} 
 $aYnTourPosition = storage()->get('yntour_position');
$sData .= '<script> 
yntourPositionRight = "' . (isset($aYnTourPosition->value->right) ? $aYnTourPosition->value->right : '0.04') . '";
yntourPositionTop = "' . (isset($aYnTourPosition->value->top) ? $aYnTourPosition->value->top : '0.06') . '";
</script>'; 
 ";s:25:"template_gettemplate_pass";s:300:"$path = flavor()->active->path;
$template = $path . 'html/' . $sTemplate . '.html';
if (file_exists($template)) {
	$vars = $this->getVar();
	$content = view('@Flavor/' . $sTemplate . '.html', $vars);
	echo $content;

	$skip_layout = true;

	Phpfox_Template::instance()->clean([
		'sHeader'
	]);
} 
 ";s:24:"template_gettemplatefile";s:5298:"$path = flavor()->active->path;
$sThemeFile = $path . 'html/' . $sTemplate . PHPFOX_TPL_SUFFIX;
if (file_exists($sThemeFile)) {
	$sFile = $sThemeFile;
} 
 if($sTemplate == 'core.block.upload-form' && $this->_aVars['isEditedFeedPhoto']) {
    $feedId = $this->_aVars['iFeedId'];
    $callback = $this->_aVars['aFeedCallback'];

    $feed = Phpfox::getService('feed')->callback($callback)->getFeed($feedId);
    if(!empty($feed) && $feed['type_id'] == 'photo' && ($itemPhoto = Phpfox::getService('photo')->getForProcess($feed['item_id'], $feed['user_id']))) {
        $count = 1;
        $restPhotos = Phpfox::getService('ynfeed')->getPhotosForEditStatus($feedId, $callback['module']);
        if(!empty($restPhotos)) {
            $count += count($restPhotos);
        }
        $this->_aVars['aUploadCallback']['max_file'] -= $count;
        $this->_aVars['aUploadCallback']['js_events']['removedfile'] = '$Core.Photo.processUploadImageForAdvFeed.dropzoneOnRemovedFileInFeedForEditPhoto';
    }
} 
 $sDir = dirname(dirname(dirname(dirname(dirname(dirname(__FILE__))))));
$sYNCCPath = $sDir . '/PF.Site/Apps/ync-reaction/views/block/';

if (in_array($sTemplate, ['ynccomment.block.like-link', 'like.block.link'])) {
    $sTemplate = 'yncreaction.block.like-link';
    $sTemplateFile = $sYNCCPath . 'reaction-link' . PHPFOX_TPL_SUFFIX;
    if (file_exists($sTemplateFile)) {
        $sFile = $sTemplateFile;
    }
    //When ajax, re-assign global params
    if (PHPFOX_IS_AJAX) {
        //ync-reaction get list reactions
        $aReactions = Phpfox::getService('yncreaction')->getReactions();
        $aDefaultLike = Phpfox::getService('yncreaction')->getDefaultLike();
        if ($aReactions) {
            Phpfox_Template::instance()->assign([
                'aYncReactions' => $aReactions,
                'aYncLike' => $aDefaultLike
            ]);
        }
    }
}
if (in_array($sTemplate, ['ynccomment.block.like-display', 'like.block.display'])) {
    $sTemplate = 'yncreaction.block.like-display';
    $sTemplateFile = $sYNCCPath . 'reaction-display' . PHPFOX_TPL_SUFFIX;
    if (file_exists($sTemplateFile)) {
        $sFile = $sTemplateFile;
    }
} 
 $sDir = dirname(dirname(dirname(dirname(dirname(dirname(__FILE__))))));
$sYNCCPath = $sDir . '/PF.Site/Apps/ync-statusbg/views/block/';

if ($sTemplate == 'feed.block.focus') {
    $sTemplate = 'yncstatusbg.block.feed-focus';
    $sTemplateFile = $sYNCCPath . 'feed-focus' . PHPFOX_TPL_SUFFIX;
    if (file_exists($sTemplateFile)) {
        $sFile = $sTemplateFile;
    }
} elseif ($sTemplate == 'ynfeed.block.focus') {
    $sTemplate = 'yncstatusbg.block.ync-feed-focus';
    $sTemplateFile = $sYNCCPath . 'ync-feed-focus' . PHPFOX_TPL_SUFFIX;
    if (file_exists($sTemplateFile)) {
        $sFile = $sTemplateFile;
    }
} elseif ($sTemplate == 'ynfeed.block.mini') {
    $sTemplate = 'yncstatusbg.block.ync-feed-mini';
    $sTemplateFile = $sYNCCPath . 'ync-feed-mini' . PHPFOX_TPL_SUFFIX;
    if (file_exists($sTemplateFile)) {
        $sFile = $sTemplateFile;
        if(!empty($this->_aVars['aParentFeed']['item_id'])) {
            $this->_aVars['aParentFeed']['status_background'] = Phpfox::getService('yncstatusbg')->getFeedStatusBackground($this->_aVars['aParentFeed']['item_id'], $this->_aVars['aParentFeed']['type_id'], $this->_aVars['aParentFeed']['user_id']);
        }
    }
} elseif ($sTemplate == 'feed.block.mini') {
    $sTemplate = 'yncstatusbg.block.feed-mini';
    $sTemplateFile = $sYNCCPath . 'feed-mini' . PHPFOX_TPL_SUFFIX;
    if (file_exists($sTemplateFile)) {
        $sFile = $sTemplateFile;
        if(!empty($this->_aVars['aParentFeed']['item_id'])) {
            $this->_aVars['aParentFeed']['status_background'] = Phpfox::getService('yncstatusbg')->getFeedStatusBackground($this->_aVars['aParentFeed']['item_id'], $this->_aVars['aParentFeed']['type_id'], $this->_aVars['aParentFeed']['user_id']);
        }
    }
} 
 //todo core should support to do this
$sDir = dirname(dirname(dirname(dirname(dirname(dirname(__FILE__))))));
$sCoreMessagesPath = $sDir . '/PF.Site/Apps/core-messages/views/controller/';
if ($sTemplate == 'mail.controller.index') {
    $sTemplateFile = $sCoreMessagesPath . 'index' . PHPFOX_TPL_SUFFIX;
    if (file_exists($sTemplateFile)) {
        $sFile = $sTemplateFile;
    }
}
if ($sTemplate == 'mail.controller.panel') {
    $sTemplateFile = $sCoreMessagesPath . 'panel' . PHPFOX_TPL_SUFFIX;
    if (file_exists($sTemplateFile)) {
        $sFile = $sTemplateFile;
    }
} 
 if(Phpfox::isAppActive('P_Reaction')) {
    $sDir = dirname(dirname(dirname(dirname(dirname(dirname(__FILE__))))));
    $sViewPath = $sDir . '/PF.Site/Apps/p-reaction/views/block/';

    if (in_array($sTemplate, ['ynccomment.block.like-link', 'like.block.link'])) {
        $sTemplate = 'preaction.block.link';
        $sTemplateFile = $sViewPath . 'link' . PHPFOX_TPL_SUFFIX;
        if (cached_file_exists($sTemplateFile)) {
            $sFile = $sTemplateFile;
        }
    }
    if (in_array($sTemplate, ['ynccomment.block.like-display', 'like.block.display'])) {
        $sTemplate = 'preaction.block.display';
        $sTemplateFile = $sViewPath . 'display' . PHPFOX_TPL_SUFFIX;
        if (cached_file_exists($sTemplateFile)) {
            $sFile = $sTemplateFile;
        }
    }
} 
 ";s:40:"theme.component_controller_admincp_index";s:857:"$flavor_default = '';
$default = storage()->get('flavor/default');
if (isset($default->value)) {
	$flavor_default = $default->value;
}
$themes = [];
$default_theme = [];
foreach (flavor()->all() as $flavor) {
	if ($flavor->id == $flavor_default) {
		$default_theme = [
			'theme_id' => $flavor->id,
			'is_default' => true,
			'image' => ($flavor->icon ? ' class="image_load has_image" data-src="' . $flavor->url . 'theme.png?v=' . uniqid() . '" ' : ''),
			'name' => $flavor->name
		];

		continue;
	}

	$themes[] = [
		'theme_id' => $flavor->id,
		'is_default' => false,
		'image' => ($flavor->icon ? ' class="image_load has_image" data-src="' . $flavor->url . 'theme.png?v=' . uniqid() . '" ' : ''),
		'name' => $flavor->name
	];
}

if ($default_theme) {
	$themes = array_merge([$default_theme], $themes);
}
else {
	$themes[0]['is_default'] = true;
} 
 ";s:46:"admincp.service_maintain_delete_files_get_list";s:38916:"$aPluginFiles[] = 'PF.Base/module/photo/';
$aPluginFiles[] = 'PF.Site/Apps/core-photos/assets/autoload.css'; 
 $aPluginFiles[] = 'PF.Base/module/newsletter/'; 
 $aPluginFiles[] = 'PF.Base/module/poke/'; 
 $aPluginFiles[] = 'PF.Site/Apps/core-amazon-s3/assets';
$aPluginFiles[] = 'PF.Site/Apps/core-amazon-s3/vendor';
$aPluginFiles[] = 'PF.Site/Apps/core-amazon-s3/composer.json';
$aPluginFiles[] = 'PF.Site/Apps/core-amazon-s3/composer.lock'; 
 $aMore = [
    "PF.Site/Apps/Core_BetterAds/Ajax/Ajax.php",
    "PF.Site/Apps/Core_BetterAds/assets/autoload.css",
    "PF.Site/Apps/Core_BetterAds/assets/autoload.js",
    "PF.Site/Apps/Core_BetterAds/assets/autoload.less",
    "PF.Site/Apps/Core_BetterAds/Block/Display.php",
    "PF.Site/Apps/Core_BetterAds/Block/Display_1.php",
    "PF.Site/Apps/Core_BetterAds/Block/Display_10.php",
    "PF.Site/Apps/Core_BetterAds/Block/Display_11.php",
    "PF.Site/Apps/Core_BetterAds/Block/Display_12.php",
    "PF.Site/Apps/Core_BetterAds/Block/Display_2.php",
    "PF.Site/Apps/Core_BetterAds/Block/Display_3.php",
    "PF.Site/Apps/Core_BetterAds/Block/Display_4.php",
    "PF.Site/Apps/Core_BetterAds/Block/Display_5.php",
    "PF.Site/Apps/Core_BetterAds/Block/Display_6.php",
    "PF.Site/Apps/Core_BetterAds/Block/Display_7.php",
    "PF.Site/Apps/Core_BetterAds/Block/Display_8.php",
    "PF.Site/Apps/Core_BetterAds/Block/Display_9.php",
    "PF.Site/Apps/Core_BetterAds/Block/Inner.php",
    "PF.Site/Apps/Core_BetterAds/Block/Sample.php",
    "PF.Site/Apps/Core_BetterAds/Block/Sponsored.php",
    "PF.Site/Apps/Core_BetterAds/Block/Sponsored_Blog.php",
    "PF.Site/Apps/Core_BetterAds/Block/Sponsored_Event.php",
    "PF.Site/Apps/Core_BetterAds/Block/Sponsored_Marketplace.php",
    "PF.Site/Apps/Core_BetterAds/Block/Sponsored_Photo.php",
    "PF.Site/Apps/Core_BetterAds/Block/Sponsored_Poll.php",
    "PF.Site/Apps/Core_BetterAds/Block/Sponsored_Quiz.php",
    "PF.Site/Apps/Core_BetterAds/Block/Sponsored_Video.php",
    "PF.Site/Apps/Core_BetterAds/Controller/AddController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/Admin/AddController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/Admin/AddPlacementController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/Admin/IndexController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/Admin/InvoiceController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/Admin/PlacementController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/Admin/SponsorController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/IframeController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/ImageController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/IndexController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/InvoiceController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/ManageController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/ManageSponsorController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/PreviewController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/ReportController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/SampleController.php",
    "PF.Site/Apps/Core_BetterAds/Controller/SponsorController.php",
    "PF.Site/Apps/Core_BetterAds/hooks/blog.template_block_entry_links_main.php",
    "PF.Site/Apps/Core_BetterAds/hooks/event.template_block_entry_links_main.php",
    "PF.Site/Apps/Core_BetterAds/hooks/feed.service_feed_can_sponsored.php",
    "PF.Site/Apps/Core_BetterAds/hooks/get_module_blocks.php",
    "PF.Site/Apps/Core_BetterAds/hooks/marketplace.template_block_entry_links_main.php",
    "PF.Site/Apps/Core_BetterAds/hooks/music.template_block_entry_links_main.php",
    "PF.Site/Apps/Core_BetterAds/hooks/photo.template_block_menu.php",
    "PF.Site/Apps/Core_BetterAds/hooks/poll.template_block_entry_links_main.php",
    "PF.Site/Apps/Core_BetterAds/hooks/quiz.template_block_entry_links_main.php",
    "PF.Site/Apps/Core_BetterAds/icon.png",
    "PF.Site/Apps/Core_BetterAds/Install.php",
    "PF.Site/Apps/Core_BetterAds/Installation/Database/BetterAds.php",
    "PF.Site/Apps/Core_BetterAds/Installation/Database/Country.php",
    "PF.Site/Apps/Core_BetterAds/Installation/Database/Invoice.php",
    "PF.Site/Apps/Core_BetterAds/Installation/Database/Log.php",
    "PF.Site/Apps/Core_BetterAds/Installation/Database/Plan.php",
    "PF.Site/Apps/Core_BetterAds/Installation/Database/Sponsor.php",
    "PF.Site/Apps/Core_BetterAds/Installation/Database/View.php",
    "PF.Site/Apps/Core_BetterAds/phrase.json",
    "PF.Site/Apps/Core_BetterAds/Service/Ads.php",
    "PF.Site/Apps/Core_BetterAds/Service/Callback.php",
    "PF.Site/Apps/Core_BetterAds/Service/Get.php",
    "PF.Site/Apps/Core_BetterAds/Service/Process.php",
    "PF.Site/Apps/Core_BetterAds/Service/Report.php",
    "PF.Site/Apps/Core_BetterAds/Service/Sponsor.php",
    "PF.Site/Apps/Core_BetterAds/start.php",
    "PF.Site/Apps/Core_BetterAds/views/block/display.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/display_1.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/display_10.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/display_11.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/display_12.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/display_2.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/display_3.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/display_4.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/display_5.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/display_6.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/display_7.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/display_8.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/display_9.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/inner.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/sample.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/sponsored.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/sponsored_blog.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/sponsored_event.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/sponsored_marketplace.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/sponsored_photo.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/sponsored_poll.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/sponsored_quiz.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/sponsored_video.html.php",
    "PF.Site/Apps/Core_BetterAds/views/block/targetting.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/add.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/admincp/add.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/admincp/addplacement.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/admincp/index.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/admincp/invoice.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/admincp/placement.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/admincp/sponsor.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/iframe.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/image.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/index.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/invoice.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/manage-sponsor.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/manage.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/preview.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/report.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/sample.html.php",
    "PF.Site/Apps/Core_BetterAds/views/controller/sponsor.html.php",
    // remove from 4.2.0
    "PF.Site/Apps/core-better-ads/Controller/IframeController.php",
    "PF.Site/Apps/core-better-ads/views/controller/iframe.html.php",
    "PF.Site/Apps/core-better-ads/Block/Sponsored_Blog.php",
    "PF.Site/Apps/core-better-ads/Block/Sponsored_Event.php",
    "PF.Site/Apps/core-better-ads/Block/Sponsored_Marketplace.php",
    "PF.Site/Apps/core-better-ads/Block/Sponsored_Photo.php",
    "PF.Site/Apps/core-better-ads/Block/Sponsored_Poll.php",
    "PF.Site/Apps/core-better-ads/Block/Sponsored_Quiz.php",
    "PF.Site/Apps/core-better-ads/Block/Sponsored_Video.php",
    "PF.Site/Apps/core-better-ads/views/block/sponsored_blog.html.php",
    "PF.Site/Apps/core-better-ads/views/block/sponsored_event.html.php",
    "PF.Site/Apps/core-better-ads/views/block/sponsored_marketplace.html.php",
    "PF.Site/Apps/core-better-ads/views/block/sponsored_photo.html.php",
    "PF.Site/Apps/core-better-ads/views/block/sponsored_poll.html.php",
    "PF.Site/Apps/core-better-ads/views/block/sponsored_quiz.html.php",
    "PF.Site/Apps/core-better-ads/views/block/sponsored_video.html.php",
    "PF.Site/Apps/core-better-ads/Block/Display_1.php",
    "PF.Site/Apps/core-better-ads/Block/Display_10.php",
    "PF.Site/Apps/core-better-ads/Block/Display_11.php",
    "PF.Site/Apps/core-better-ads/Block/Display_12.php",
    "PF.Site/Apps/core-better-ads/Block/Display_2.php",
    "PF.Site/Apps/core-better-ads/Block/Display_3.php",
    "PF.Site/Apps/core-better-ads/Block/Display_4.php",
    "PF.Site/Apps/core-better-ads/Block/Display_5.php",
    "PF.Site/Apps/core-better-ads/Block/Display_6.php",
    "PF.Site/Apps/core-better-ads/Block/Display_7.php",
    "PF.Site/Apps/core-better-ads/Block/Display_8.php",
    "PF.Site/Apps/core-better-ads/Block/Display_9.php",
    "PF.Site/Apps/core-better-ads/views/block/display_1.html.php",
    "PF.Site/Apps/core-better-ads/views/block/display_10.html.php",
    "PF.Site/Apps/core-better-ads/views/block/display_11.html.php",
    "PF.Site/Apps/core-better-ads/views/block/display_12.html.php",
    "PF.Site/Apps/core-better-ads/views/block/display_2.html.php",
    "PF.Site/Apps/core-better-ads/views/block/display_3.html.php",
    "PF.Site/Apps/core-better-ads/views/block/display_4.html.php",
    "PF.Site/Apps/core-better-ads/views/block/display_5.html.php",
    "PF.Site/Apps/core-better-ads/views/block/display_6.html.php",
    "PF.Site/Apps/core-better-ads/views/block/display_7.html.php",
    "PF.Site/Apps/core-better-ads/views/block/display_8.html.php",
    "PF.Site/Apps/core-better-ads/views/block/display_9.html.php",
    "PF.Site/Apps/core-better-ads/hooks/blog.template_block_entry_links_main.php",
    "PF.Site/Apps/core-better-ads/hooks/music.template_block_entry_links_main.php",
    "PF.Site/Apps/core-better-ads/Service/Ads.php",
    "PF.Site/Apps/core-better-ads/hooks/event.template_block_entry_links_main.php",
    "PF.Site/Apps/core-better-ads/hooks/marketplace.template_block_entry_links_main.php",
    "PF.Site/Apps/core-better-ads/hooks/photo.template_block_menu.php",
    "PF.Site/Apps/core-better-ads/hooks/poll.template_block_entry_links_main.php",
    "PF.Site/Apps/core-better-ads/hooks/quiz.template_block_entry_links_main.php",
];
$aPluginFiles = array_merge($aPluginFiles, $aMore);

$aPluginFiles[] = 'PF.Base/module/ad/';
$aPluginFiles[] = 'PF.Base/less/modules/ad.less';
$aPluginFiles[] = 'PF.Site/Apps/core-better-ads/hooks/get_t.php'; 
 $aPluginFiles[] = 'PF.Base/module/mail/';
$aPluginFiles[] = 'PF.Base/less/modules/mail.less'; 
 $aPluginFiles[] = 'PF.Base/module/fevent/'; 
 $aPluginFiles[] = 'PF.Base/module/advancedmarketplace/'; 
 $aPluginFiles[] = 'PF.Site/Apps/phpFox_RESTful_API'; 
 $aMore = [
    "PF.Site/Apps/phpFox_CKEditor/assets/autoload.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/autoload.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/adapters/jquery.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/build-config.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/CHANGES.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/ckeditor.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/config.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/contents.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/af.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ar.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/bg.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/bn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/bs.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ca.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/cs.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/cy.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/da.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/de-ch.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/de.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/el.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/en-au.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/en-ca.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/en-gb.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/en.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/eo.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/es.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/et.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/eu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/fa.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/fi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/fo.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/fr-ca.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/fr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/gl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/gu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/he.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/hi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/hr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/hu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/id.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/is.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/it.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ja.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ka.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/km.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ko.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ku.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/lt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/lv.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/mk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/mn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ms.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/nb.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/nl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/no.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/oc.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/pl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/pt-br.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/pt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ro.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ru.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/si.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/sk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/sl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/sq.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/sr-latn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/sr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/sv.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/th.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/tr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/tt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ug.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/uk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/vi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/zh-cn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/zh.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/LICENSE.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/a11yhelp.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/_translationstatus.txt",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/af.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ar.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/bg.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ca.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/cs.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/cy.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/da.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/de-ch.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/de.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/el.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/en-gb.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/en.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/eo.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/es.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/et.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/eu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/fa.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/fi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/fo.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/fr-ca.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/fr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/gl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/gu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/he.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/hi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/hr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/hu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/id.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/it.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ja.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/km.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ko.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ku.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/lt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/lv.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/mk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/mn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/nb.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/nl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/no.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/oc.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/pl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/pt-br.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/pt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ro.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ru.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/si.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/sk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/sl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/sq.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/sr-latn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/sr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/sv.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/th.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/tr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/tt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ug.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/uk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/vi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/zh-cn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/zh.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/about/dialogs/about.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/about/dialogs/hidpi/logo_ckeditor.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/about/dialogs/logo_ckeditor.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/clipboard/dialogs/paste.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/dialog/dialogDefinition.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/icons.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/icons_hidpi.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/image/dialogs/image.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/image/images/noimage.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/link/dialogs/anchor.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/link/dialogs/link.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/link/images/anchor.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/link/images/hidpi/anchor.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/magicline/images/hidpi/icon-rtl.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/magicline/images/hidpi/icon.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/magicline/images/icon-rtl.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/magicline/images/icon.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/pastefromword/filter/default.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/scayt/CHANGELOG.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/scayt/dialogs/options.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/scayt/dialogs/toolbar.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/scayt/LICENSE.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/scayt/README.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/scayt/skins/moono-lisa/scayt.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/_translationstatus.txt",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/af.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/ar.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/bg.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/ca.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/cs.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/cy.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/da.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/de-ch.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/de.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/el.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/en-gb.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/en.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/eo.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/es.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/et.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/eu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/fa.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/fi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/fr-ca.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/fr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/gl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/he.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/hr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/hu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/id.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/it.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/ja.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/km.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/ko.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/ku.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/lt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/lv.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/nb.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/nl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/no.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/oc.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/pl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/pt-br.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/pt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/ru.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/si.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/sk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/sl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/sq.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/sv.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/th.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/tr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/tt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/ug.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/uk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/vi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/zh-cn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/zh.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/specialchar.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/table/dialogs/table.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/tabletools/dialogs/tableCell.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/dialogs/ciframe.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/dialogs/tmpFrameset.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/dialogs/wsc.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/dialogs/wsc.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/dialogs/wsc_ie.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/LICENSE.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/README.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/skins/moono-lisa/wsc.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/README.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/css/samples.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/img/github-top.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/img/header-bg.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/img/header-separator.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/img/logo.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/img/navigation-tip.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/index.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/js/sample.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/js/sf.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/ajax.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/api.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/appendto.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/assets/inlineall/logo.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/assets/outputxhtml/outputxhtml.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/assets/posteddata.php",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/assets/sample.jpg",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/assets/uilanguages/languages.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/datafiltering.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/dialog/assets/my_dialog.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/dialog/dialog.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/divreplace.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/enterkey/enterkey.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/htmlwriter/assets/outputforflash/outputforflash.fla",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/htmlwriter/assets/outputforflash/outputforflash.swf",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/htmlwriter/assets/outputforflash/swfobject.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/htmlwriter/outputforflash.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/htmlwriter/outputhtml.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/index.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/inlineall.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/inlinebycode.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/inlinetextarea.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/jquery.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/magicline/magicline.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/readonly.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/replacebyclass.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/replacebycode.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/sample.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/sample.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/sample_posteddata.php",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/tabindex.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/toolbar/toolbar.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/uicolor.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/uilanguages.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/wysiwygarea/fullpage.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/xhtmlstyle.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/css/fontello.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/font/config.json",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/font/fontello.eot",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/font/fontello.svg",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/font/fontello.ttf",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/font/fontello.woff",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/font/LICENSE.txt",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/index.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/js/abstracttoolbarmodifier.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/js/fulltoolbareditor.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/js/toolbarmodifier.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/js/toolbartextmodifier.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/lib/codemirror/codemirror.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/lib/codemirror/codemirror.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/lib/codemirror/javascript.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/lib/codemirror/LICENSE",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/lib/codemirror/neo.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/lib/codemirror/show-hint.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/lib/codemirror/show-hint.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/dialog.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/dialog_ie.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/dialog_ie8.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/dialog_iequirks.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/editor.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/editor_gecko.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/editor_ie.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/editor_ie8.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/editor_iequirks.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/icons.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/icons_hidpi.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/arrow.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/close.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/hidpi/close.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/hidpi/lock-open.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/hidpi/lock.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/hidpi/refresh.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/lock-open.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/lock.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/refresh.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/spinner.gif",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/readme.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/styles.js",
    "PF.Site/Apps/phpFox_CKEditor/hooks/forum.component_ajax_reply.php",
    "PF.Site/Apps/phpFox_CKEditor/hooks/get_editor_end.php",
    "PF.Site/Apps/phpFox_CKEditor/hooks/set_editor_end.php",
    "PF.Site/Apps/phpFox_CKEditor/hooks/template_getheader_exclude_bundle_js.php",
    "PF.Site/Apps/phpFox_CKEditor/hooks/template_getheader_setting.php",
    "PF.Site/Apps/phpFox_CKEditor/icon.png",
    "PF.Site/Apps/phpFox_CKEditor/Install.php",
    "PF.Site/Apps/phpFox_CKEditor/start.php",
    "PF.Site/Apps/phpFox_CKEditor/views/admincp.html",
];
$aPluginFiles = array_merge($aPluginFiles, $aMore); 
 $aPluginFiles[] = 'PF.Site/flavors/material/less/mt_includes/all-message.less';
$aPluginFiles[] = 'PF.Site/flavors/material/html/mail.controller.index.html.php';
$aPluginFiles[] = 'PF.Site/flavors/material/html/mail.controller.panel.html.php';
$aPluginFiles[] = 'PF.Site/flavors/material/html/profile.controller.points.html.php';
$aPluginFiles[] = 'PF.Site/flavors/material/hooks/component_controller_points_process_end.php'; 
 $aPluginFiles = array_merge($aPluginFiles, [
    'PF.Base/module/opensocialconnect/include/plugin/core.template_block_template_menu_1.php'
]); 
 $aPluginFiles[] = 'PF.Base/module/socialad/include/plugin/ad.component_block_display_process__start.php';
$aPluginFiles[] = 'PF.Base/module/socialad/include/plugin/core.template_block_template_menu_1.php'; 
 ";s:11:"route_start";s:3182:"\Core\Api\ApiManager::register([
    'photo/:id' => [
        'api_service' => 'photo.api',
        'maps'        => [
            'get'    => 'get',
            'put'    => 'put',
            'delete' => 'delete'
        ],
        'where'       => ['id' => '\d+']
    ],
    'photo'     => [
        'api_service' => 'photo.api',
        'maps'        => [
            'get'  => 'gets',
            'post' => 'post'
        ]
    ],
]); 
 $vendor = PHPFOX_DIR_SITE_APPS . "core-mobile-api" . PHPFOX_DS . "vendor" . PHPFOX_DS . "autoload.php";
if (!file_exists($vendor)) {
    die (" Please update composer first. ");
}
require_once PHPFOX_DIR_SITE_APPS . "core-mobile-api" . PHPFOX_DS . "vendor" . PHPFOX_DS . "autoload.php";

$resourceNaming = new \Apps\Core_MobileApi\Service\NameResource();

\Core\Api\ApiManager::register($resourceNaming->generateRestfulRoute('mobile')); 
 \Core\Api\ApiManager::register([
    'feed/:id' => [
        'api_service' => 'feed.api',
        'maps' => [
            'get' => 'get',
            'put' => 'put',
            'delete' => 'delete'
        ],
        'where' => ['id'=>'\d+']
    ],
    'feed' => [
        'api_service' => 'feed.api',
        'maps' => [
            'get' => 'gets',
            'post' => 'post'
        ]
    ],
    'feed/share' => [
        'api_service' => 'feed.api',
        'maps' => [
            'post' => 'share'
        ]
    ],
]); 
 \Core\Api\ApiManager::register([
    'friend' => [
        'api_service' => 'friend.api',
        'maps' => [
            'get' => 'get',
            'delete' => 'delete'
        ],
    ],
    'friend/request' => [
        'api_service' => 'friend.api',
        'maps' => [
            'post' => 'addRequest',
            'delete' => 'cancelRequest',
            'put' => 'processRequest'
        ],
    ],
]); 
 \Core\Api\ApiManager::register([
    'like' => [
        'api_service' => 'like.api',
        'maps' => [
            'post' => 'post',
            'delete' => 'delete',
            'get' => 'get'
        ]
    ],
]); 
 \Core\Api\ApiManager::register([
    'link' => [
        'api_service' => 'link.api',
        'maps' => [
            'post' => 'post'
        ]
    ],

]); 
 defined('PHPFOX') or exit('NO DICE!');

\Core\Api\ApiManager::register([
    'search' => [
        'api_service' => 'search.api',
        'maps' => [
            'get' => 'get'
        ]
    ],
]); 
 defined('PHPFOX') or exit('NO DICE!');

\Core\Api\ApiManager::register([
    'user/:id' => [
        'api_service' => 'user.api',
        'maps' => [
            'get' => 'get',
            'put' => 'put',
            'delete' => 'delete'
        ],
        'where' => ['id'=>'\d+']
    ],
    'user' => [
        'api_service' => 'user.api',
        'maps' => [
            'get' => 'gets',
            'post' => 'post'
        ]
    ],
    'user/custom/:id' => [
        'api_service' => 'user.api',
        'maps' => [
            'get' => 'getCustom',
            'put' => 'putCustom'
        ],
        'where' => ['id'=>'\d+']
    ],
    'user/mine' => [
        'api_service' => 'user.api',
        'maps' => [
            'get' => 'getMine'
        ]
    ],
]); 
 ";s:27:"template_template_getmenu_3";s:1479:"if ((!(Phpfox::getUserParam('photo.can_view_photos'))) && $sConnection == 'main') {
    foreach ($aMenus as $key => $menu) {
        if ($menu['module'] == 'photo') {
            unset($aMenus[$key]);
        }
    }
} 
 if (\Phpfox::isApps('YNC_Member') && $sConnection == 'main') {
    foreach ($aMenus as $key => $menu) {
        if ($menu['url'] == 'user.browse') {
            $aMenus[$key]['url'] = 'members';
        }
    }
} 
 /**
 * Created by PhpStorm.
 * User: phpFox
 * Date: 5/31/17
 * Time: 16:04
 */
defined('PHPFOX') or exit('NO DICE!');

if (Phpfox::isAppActive('Core_Marketplace') && !Phpfox::getUserParam('marketplace.can_access_marketplace')) {
    foreach ($aMenus as $key => $value) {
        if ($value['module'] == 'marketplace' && ($value['url'] = 'marketplace' || $value['url'] = 'profile.marketplace')) {
            unset($aMenus[$key]);
            break;
        }
    }
} 
 defined('PHPFOX') or exit('NO DICE!');
if (Phpfox::isModule('advancedmarketplace') && !Phpfox::getUserParam('advancedmarketplace.can_create_listing')) {
    foreach ($aMenus as $key => $value) {
        if ($value['url'] == 'advancedmarketplace.add') {
            unset($aMenus[$key]);
            break;
        }
    }
} 
 if (!Phpfox::getUserParam('user.can_browse_users_in_public')) {
    foreach ($aMenus as $index => $aMenu) {
        if ($aMenu['m_connection'] == 'main' && $aMenu['module'] == 'user') {
            unset($aMenus[$index]);
        }
    }
} 
 ";s:29:"theme_get_default_photos_list";s:495:"$aPhotos['photo_default_album_photo'] = [
    'title' => _p('photo_album_default_photo'),
    'value' => $flavor->default_photo('photo_default_album_photo', true),
]; 
 $aPhotos['marketplace_default_photo'] = [
    'title' => _p('marketplace_default_photo'),
    'value' => $flavor->default_photo('marketplace_default_photo', true),
]; 
 $aPhotos['fevent_default_photo'] = [
    'title' => _p('fevent_default_photo'),
    'value' => $flavor->default_photo('fevent_default_photo', true),
]; 
 ";s:37:"validator.admincp_user_settings_photo";s:2089:"$aValidation = [
    'points_photo'                        => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"Activity points" must be greater than or equal to 0'),
    ],
    'max_images_per_upload'               => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"Max images per upload" must be greater than 0'),
    ],
    'max_number_of_albums'                => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"Max number of albums" must be greater than or equal to 0'),
    ],
    'photo_mature_age_limit'              => [
        'def'   => 'int:required',
        'min'   => '1',
        'title' => _p('"Photo mature age limit" must be greater than 0'),
    ],
    'how_many_tags_on_own_photo'          => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"How many times can a user tag their own photo?" must be greater than or equal to 0'),
    ],
    'how_many_tags_on_other_photo'        => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"How many times can a user tag photos added by other users?" must be greater than or equal to 0'),
    ],
    'photo_max_upload_size'               => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"Max file size for photos upload" must be greater than or equal to 0'),
    ],
    'maximum_image_width_keeps_in_server' => [
        'def'   => 'int:required',
        'min'   => '1',
        'title' => _p('"Max image width keeps in server" must be greater than 0'),
    ],
    'photo_sponsor_price'                 => [
        'def'   => 'currency',
        'min'   => '0',
        'title' => _p('"Sponsor photo price" must be greater than or equal to 0'),
    ],
    'total_photos_displays'               => [
        'def'    => 'array:required',
        'subdef' => 'int:required',
        'min'    => '0',
        'title'  => _p('Each value of "Define how many images a user can view at once when browsing the public photo section" must be greater than 0'),
    ]
]; 
 ";s:31:"feed.service_process_deletefeed";s:1298:"if ($aFeed['type_id'] == 'poke') {
    $aPokeData = Phpfox::getService('poke')->getPokeData($aFeed['item_id']);
    if (isset($aPokeData['user_id'])) {
        $aFeed['parent_user_id'] = $aPokeData['user_id'];
    }
} 
 if (Phpfox::getLib('request')->get('module') == 'fevent')
{
	$aEvent = Phpfox::getService('fevent')->getForEdit($aFeed['parent_user_id']);
	if (isset($aEvent['event_id']) && $aEvent['user_id'] == Phpfox::getUserId())
	{
		define('PHPFOX_FEED_CAN_DELETE', true);
	}
} 
 if (Phpfox::isModule('suggestion') && Phpfox::isUser()){
    
    $sTypeId = $aFeed['type_id'];
    $aTypeId = explode('_', $sTypeId);

    $iUserId = $aFeed['user_id'];
    $sModule = 'suggestion_' . $aTypeId[0];
    $iItemId = $aFeed['item_id'];

    /*delete each suggestion notification detail*/
    $aSuggestionList = Phpfox::getService('suggestion')->getSuggestionListByUserId($iUserId, $iItemId, $sModule);
    if (count($aSuggestionList)>0){
        foreach($aSuggestionList as $aSuggestion){
            $iSuggestionId = $aSuggestion['suggestion_id'];
            Phpfox::getService('suggestion.process')->deleteNotification($sModule, $iItemId, $iSuggestionId);
        }
    }
    Phpfox::getService('suggestion.process')->delete($iUserId, $sModule, $iItemId);
    
    
} /*end check module*/ 
 ";s:18:"get_master_phrases";s:22:"$aOut[] = 'emoji'; 
 ";s:34:"user.template.login_header_set_var";s:105:"if (setting('m9_facebook_enabled')) {
    Phpfox::getLib('template')->assign('bCustomLogin', true);
} 
 ";s:37:"user.template.register_header_set_var";s:105:"if (setting('m9_facebook_enabled')) {
    Phpfox::getLib('template')->assign('bCustomLogin', true);
} 
 ";s:41:"user.template_controller_login_block__end";s:169:"echo '<div class="fb_login">';
echo '<span class="fb_login_go"><span class="ico ico-facebook-circle"></span>'. _p('sign_in_with_facebook') .'</span>';
echo '</div>'; 
 ";s:44:"user.template_controller_register_block__end";s:169:"echo '<div class="fb_login">';
echo '<span class="fb_login_go"><span class="ico ico-facebook-circle"></span>'. _p('sign_up_with_facebook') .'</span>';
echo '</div>'; 
 ";s:27:"phpfox_assign_ajax_browsing";s:418:"// Check if CDN is enabled
if (setting('pf_cdn_enabled')) {

    // Attach an event to the CDN bootloader to our Model
    new Core\Event([
        'lib_phpfox_cdn' => 'Apps\PHPfox_CDN\Model\CDN'
    ]);
} 
 if (!empty($aBreadCrumbs) && empty($aBreadCrumbTitle)) {
    list($value, $key) = array(end($aBreadCrumbs), key($aBreadCrumbs));
    unset($aBreadCrumbs[$key]);
    $aBreadCrumbTitle = [$value, $key, 1];
} 
 ";s:34:"validator.admincp_settings_captcha";s:196:"$aValidation = [
    'captcha_limit' => [
        'def'   => 'int:required',
        'min'   => '4',
        'max'   => '6',
        'title' => 'Captcha Limit value is number 4,5,6',
    ],
]; 
 ";s:47:"admincp.component_controller_index_process_menu";s:1227:"if ($this->request()->get('req2') == 'ynbackuprestore' && in_array($this->request()->get('req3'),['manage-schedule', 'manage-backup'])) {
    $this->template()->setHeader([
        'datetimepicker/jquery.datetimepicker.full.js' => 'app_yn_backuprestore'
    ]);
} 
 if ($this->request()->get('req2') == 'yncstatusbg' || $this->request()->get('id') == 'YNC_StatusBg') {
    $this->template()->setHeader([
        'css/admin.css' => 'app_ync-statusbg',
        'jscript/admin.js' => 'app_ync-statusbg'
    ])->setPhrase([
        'error',
        'notice',
        'collection_updated_successfully',
        'collection_added_successfully',
        'please_remove_all_error_files_first',
        'title_of_collection_is_required'
    ]);
} 
 if ($this->request()->get('req2') == 'pstatusbg' || $this->request()->get('id') == 'P_StatusBg') {
    $this->template()->setHeader([
        'css/admin.css' => 'app_p-status-background',
        'jscript/admin.js' => 'app_p-status-background'
    ])->setPhrase([
        'error',
        'notice',
        'collection_updated_successfully',
        'collection_added_successfully',
        'please_remove_all_error_files_first',
        'title_of_collection_is_required'
    ]);
} 
 ";s:56:"activitypoint.service_callback_purchase_points_completed";s:362:"if($aParams['status'] == "completed" && !empty($aParams['total_paid']))
{
    $affiliatePurchase = [
        'amount' => $aParams['total_paid'],
        'currency_id' => $aPurchase['currency_id'],
    ];
    Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aPurchase['user_id'], $affiliatePurchase, 'purchase_activity_points', 'user');
} 
 ";s:40:"advancedmarketplace.service_sponsor__end";s:986:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/1/17
 * Time: 15:36
 */
if(Phpfox::isModule('yncaffiliate') && $iId)
{
    $aAd = db()->select('*')
        ->from(Phpfox::getT('better_ads_sponsor'))
        ->where('module_id = \'advancedmarketplace\' AND item_id ='.$iId)
        ->order('sponsor_id DESC')
        ->execute('getRow');
    if(count($aAd) && isset($aAd['sponsor_id']))
    {
        $aInvoice = db()->select('*')
            ->from(Phpfox::getT('better_ads_invoice'))
            ->where('ads_id = '.$aAd['sponsor_id'])
            ->execute('getRow');
        if($aInvoice && $aInvoice['status'] == 'completed')
        {
            $aPurchase = [
                'amount' => $aInvoice['price'],
                'currency_id' => $aInvoice['currency_id'],
            ];
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'sponsor_advanced_marketplace','advancedmarketplace');
        }
    }
} 
 ";s:53:"auction.service_callback_payment_product_feature__end";s:412:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/2/17
 * Time: 16:59
 */

if(Phpfox::isModule('yncaffiliate') && $aInvoice)
{
    $aPurchase = [
        'amount' => $featureFee,
        'currency_id' => $aInvoice['currency_id'],
    ];
    if($featureFee > 0)
        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'feature_auction','auction');

} 
 ";s:53:"auction.service_callback_payment_product_publish__end";s:411:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/2/17
 * Time: 16:59
 */
if(Phpfox::isModule('yncaffiliate') && $aInvoice)
{
    $aPurchase = [
        'amount' => $publishFee,
        'currency_id' => $aInvoice['currency_id'],
    ];
    if($publishFee > 0)
        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'publish_auction','auction');

} 
 ";s:33:"blog.service_process_sponsor__end";s:1008:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/1/17
 * Time: 15:36
 */
if(Phpfox::isModule('yncaffiliate') && $iId)
{
    $aAd = db()->select('*')
                ->from(Phpfox::getT('better_ads_sponsor'))
                ->where('module_id = \'blog\' AND item_id ='.$iId)
                ->order('sponsor_id DESC')
                ->execute('getRow');
    if(count($aAd) && isset($aAd['sponsor_id']))
    {
        $aInvoice = db()->select('*')
                        ->from(Phpfox::getT('better_ads_invoice'))
                        ->where('ads_id = '.$aAd['sponsor_id'])
                        ->execute('getRow');
        if($aInvoice && $aInvoice['status'] == 'completed')
        {
            $aPurchase = [
                'amount' => $aInvoice['price'],
                'currency_id' => $aInvoice['currency_id'],
            ];
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'sponsor_blog','blog');
        }
    }
} 
 ";s:48:"contest.service_process_update_user_request__end";s:2578:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/13/17
 * Time: 17:36
 */
if(Phpfox::isModule('yncaffiliate') && $iContestId && $iTransactionId)
{
    $aTransaction = $this->database()->select('*')
        ->from(Phpfox::getT('contest_transaction'))
        ->where('transaction_id = ' . $iTransactionId)
        ->execute('getSlaveRow');
    if($aTransaction)
    {
        foreach ($aService as $sService) {
            switch ($sService) {
                case 'publish':
                    $iPublishFee = Phpfox::getService('yncaffiliate.helper')->getUserParam('contest.contest_publish_fee',$aTransaction['user_id']);
                    if($iPublishFee)
                    {
                        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aTransaction['user_id'],['amount'=> $iPublishFee,'currency_id' => $aTransaction['currency']],'publish_contest','contest');
                    }
                    break;
                case 'premium':
                    $iPremiumFee = Phpfox::getService('yncaffiliate.helper')->getUserParam('contest.contest_premium_fee',$aTransaction['user_id']);
                    if($iPremiumFee)
                    {
                        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aTransaction['user_id'],['amount'=> $iPremiumFee,'currency_id' => $aTransaction['currency']],'premium_contest','contest');
                    }
                    break;
                case 'feature':
                    $iFeatureFee = Phpfox::getService('yncaffiliate.helper')->getUserParam('contest.contest_feature_fee',$aTransaction['user_id']);
                    if($iFeatureFee)
                    {
                        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aTransaction['user_id'],['amount'=> $iFeatureFee,'currency_id' => $aTransaction['currency']],'feature_contest','contest');
                    }
                    break;
                case 'ending_soon':
                    $iEndingSoonFee = Phpfox::getService('yncaffiliate.helper')->getUserParam('contest.contest_ending_soon_fee',$aTransaction['user_id']);
                    if($iEndingSoonFee)
                    {
                        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aTransaction['user_id'],['amount'=> $iEndingSoonFee,'currency_id' => $aTransaction['currency']],'ending_soon_contest','contest');
                    }
                    break;
                default:
                    break;
            }
        }
    }
} 
 ";s:43:"coupon.service_callback_payment_coupon__end";s:701:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/14/17
 * Time: 09:02
 */
if(Phpfox::isModule('yncaffiliate') && $iTransactionId)
{
    $aTransaction = Phpfox::getService('coupon.transaction')->getTransactionById($iTransactionId);
    $sCurrency = $aTransaction['currency'];
    if($aTransaction['payment_type'] == 2)
    {
        $iFeatureFee = Phpfox::getService('yncaffiliate.helper')->getUserParam('coupon.how_much_user_feature_coupon',$aTransaction['user_id']);
        if($iFeatureFee)
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aTransaction['user_id'],['amount' => $iFeatureFee,'currency_id' => $sCurrency],'feature_coupon','coupon');

    }
} 
 ";s:34:"coupon.service_process_publish_end";s:1422:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/14/17
 * Time: 09:02
 */
if(Phpfox::isModule('yncaffiliate') && $aTransaction)
{
    $sCurrency = $aTransaction['currency'];
    if($aInvoice['is_featured'])
    {
        $iFeatureFee = Phpfox::getService('yncaffiliate.helper')->getUserParam('coupon.how_much_user_feature_coupon',$aTransaction['user_id']);
        if($iFeatureFee)
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aTransaction['user_id'],['amount' => $iFeatureFee,'currency_id' => $sCurrency],'feature_coupon','coupon');

    }
    $iPublishFee = Phpfox::getService('yncaffiliate.helper')->getUserParam('coupon.how_much_user_publish_coupon',$aTransaction['user_id']);
    if($iPublishFee)
        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aTransaction['user_id'],['amount' => $iPublishFee,'currency_id' => $sCurrency],'publish_coupon','coupon');
} 
 if ($aUpdate['is_approved'])
{
    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification($aCoupon['user_id']);
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {
            
        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addcoupon', $aCoupon['coupon_id'], $aUser['user_id'], $aCoupon['user_id']);
        }
    }
} 
 ";s:47:"directory.service_callback_payment_feature__end";s:588:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/2/17
 * Time: 17:37
 */
if(Phpfox::isModule('yncaffiliate') && $aInvoice)
{
    $aGlobalSetting =  Phpfox::getService('directory')->getGlobalSetting();
    $aPurchase = [
        'amount' => $aGlobalSetting[0]['default_feature_fee']*$aInvoice['invoice_data']['feature_days'],
        'currency_id' => $aInvoice['currency_id'],
    ];
    if($aGlobalSetting[0]['default_feature_fee'])
        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'feature_business','directory');

} 
 ";s:47:"directory.service_callback_payment_publish__end";s:610:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/2/17
 * Time: 17:38
 */

if(Phpfox::isModule('yncaffiliate') && $aInvoice)
{
    $aPackage = $aInvoice['invoice_data']['aPackage'];
    if(is_object($aPackage))
    {
        $iPublishFee = $aPackage->fee;
    }
    else{
        $iPublishFee = $aPackage['fee'];
    }
    $aPurchase = [
        'amount' => $iPublishFee,
        'currency_id' => $aInvoice['currency_id'],
    ];

    if($iPublishFee)
        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'buy_business_package','directory');

} 
 ";s:38:"donation.service_callback_payment__end";s:438:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/14/17
 * Time: 12:06
 */
if(Phpfox::isModule('yncaffiliate') && $aInvoice)
{
    if($iUserId)
    {
        $aPurchase = [
            'amount' => $fQuantity,
            'currency_id' => $sCurrency,
        ];
        if($fQuantity > 0)
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($iUserId,$aPurchase,'donate_donation','donation');
    }

} 
 ";s:48:"ecommerce.service_callback_payment_buy_item__end";s:810:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/2/17
 * Time: 17:16
 */
if(Phpfox::isModule('yncaffiliate') && $aParams)
{
    $aPurchase = [
        'amount' => $aParams['total_paid'],
        'currency_id' => $sCurrencyId,
    ];
    $sType = '';
    $sModule = '';
    if($sOrderModule)
    {
        switch ($sOrderModule)
        {
            case 'auction':
                $sType = 'buy_auction';
                $sModule = 'auction';
                break;
            case 'ynsocialstore':
                $sType = 'buy_product';
                $sModule = 'ynsocialstore';
        }
    }
    else{
        return;
    }
    if($aParams['total_paid'] > 0)
        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aUserBuyer['user_id'],$aPurchase,$sType,$sModule);

} 
 ";s:34:"event.service_process_sponsor__end";s:1011:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/1/17
 * Time: 15:36
 */
if(Phpfox::isModule('yncaffiliate') && $iId)
{
    $aAd = db()->select('*')
                ->from(Phpfox::getT('better_ads_sponsor'))
                ->where('module_id = \'event\' AND item_id ='.$iId)
                ->order('sponsor_id DESC')
                ->execute('getRow');
    if(count($aAd) && isset($aAd['sponsor_id']))
    {
        $aInvoice = db()->select('*')
                        ->from(Phpfox::getT('better_ads_invoice'))
                        ->where('ads_id = '.$aAd['sponsor_id'])
                        ->execute('getRow');
        if($aInvoice && $aInvoice['status'] == 'completed')
        {
            $aPurchase = [
                'amount' => $aInvoice['price'],
                'currency_id' => $aInvoice['currency_id'],
            ];
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'sponsor_event','event');
        }
    }
} 
 ";s:35:"fevent.service_process_sponsor__end";s:924:"if(Phpfox::isModule('yncaffiliate') && $iId)
{
    $aAd = db()->select('*')
                ->from(Phpfox::getT('better_ads_sponsor'))
                ->where('module_id = \'fevent\' AND item_id ='.$iId)
                ->order('sponsor_id DESC')
                ->execute('getRow');
    if(count($aAd) && isset($aAd['sponsor_id']))
    {
        $aInvoice = db()->select('*')
		                ->from(Phpfox::getT('better_ads_invoice'))
		                ->where('ads_id = '.$aAd['sponsor_id'])
		                ->execute('getRow');
        if($aInvoice && $aInvoice['status'] == 'completed')
        {
            $aPurchase = [
                'amount' => $aInvoice['price'],
                'currency_id' => $aInvoice['currency_id'],
            ];
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'sponsor_advanced_event','fevent');
        }
    }
} 
 ";s:41:"forum.service_thread_process_sponsor__end";s:963:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/1/17
 * Time: 15:36
 */
if(Phpfox::isModule('yncaffiliate') && $iThreadId)
{
    $aAd = db()->select('*')
        ->from(Phpfox::getT('better_ads_sponsor'))
        ->where('module_id = \'forum_thread\' AND item_id ='.$iThreadId)
        ->order('sponsor_id DESC')
        ->execute('getRow');
    if(count($aAd) && isset($aAd['sponsor_id']))
    {
        $aInvoice = db()->select('*')
            ->from(Phpfox::getT('better_ads_invoice'))
            ->where('ads_id = '.$aAd['sponsor_id'])
            ->execute('getRow');
        if($aInvoice && $aInvoice['status'] == 'completed')
        {
            $aPurchase = [
                'amount' => $aInvoice['price'],
                'currency_id' => $aInvoice['currency_id'],
            ];
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'sponsor_thread','forum');
        }
    }
} 
 ";s:41:"fundraising.service_callback_payment__end";s:737:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/14/17
 * Time: 12:18
 */
if(Phpfox::isModule('yncaffiliate') && $iTransactionId)
{
    $aTransaction = Phpfox::getService('fundraising.transaction')->getTransactionById($iTransactionId);
    $aInvoice = unserialize($aTransaction['invoice']);
    if(!$aInvoice['is_guest'])
    {
        $aPurchase = [
            'amount' => $aParam['total_paid'],
            'currency_id' => $aTransaction['currency'],
        ];
        $iUserId = (isset($aInvoice['user_id'])) ? $aInvoice['user_id'] : 0;
        if($aParam['total_paid'] > 0)
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($iUserId,$aPurchase,'donate_fundraising','fundraising');
    }

} 
 ";s:49:"jobposting.service_callback_payment_callback__end";s:3947:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/14/17
 * Time: 10:23
 */
if(Phpfox::isModule('yncaffiliate') && $aTransaction)
{
    $sCurrency = (isset($aTransaction['currency'])) ? $aTransaction['currency'] : 'USD';
    switch($aTransaction['payment_type'])
    {
        case 1:
            $iFee = Phpfox::getParam('jobposting.jobposting_fee_to_sponsor_company');
            if($iFee)
            {
                $aPurchase = [
                    'amount' => $iFee,
                    'currency_id' => $sCurrency
                ];
                Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aTransaction['user_id'],$aPurchase,'sponsor_company','jobposting');
            }
            break;
        case 2:
        case 3:
            if(isset($aTransaction['invoice']['package_data']) && count($aTransaction['invoice']['package_data'])) {
                foreach ($aTransaction['invoice']['package_data'] as $iDataId) {
                    $aPackage = Phpfox::getService('jobposting.package')->getPackageByDataId($iDataId);
                    if($aPackage['fee'])
                    {
                        $aPurchase = [
                            'amount' => $aPackage['fee'],
                            'currency_id' => $sCurrency
                        ];
                        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aTransaction['user_id'],$aPurchase,'buy_job_package','jobposting');
                    }
                }
            }
            break;
        case 4:
            if(isset($aTransaction['invoice']['package_data']) && count($aTransaction['invoice']['package_data'])) {
                foreach ($aTransaction['invoice']['package_data'] as $iDataId) {
                    $aPackage = Phpfox::getService('jobposting.package')->getPackageByDataId($iDataId);
                    if($aPackage['fee'])
                    {
                        $aPurchase = [
                            'amount' => $aPackage['fee'],
                            'currency_id' => $sCurrency
                        ];
                        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aTransaction['user_id'],$aPurchase,'buy_job_package','jobposting');
                    }
                }
            }
            $iFeatureFee = Phpfox::getParam('jobposting.fee_feature_job');
            if($iFeatureFee)
            {
                $aPurchase = [
                    'amount' => $iFeatureFee,
                    'currency_id' => $sCurrency
                ];
                Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aTransaction['user_id'],$aPurchase,'feature_job','jobposting');
            }
            break;
        case 5:
            $iFeatureFee = Phpfox::getParam('jobposting.fee_feature_job');
            if($iFeatureFee)
            {
                $aPurchase = [
                    'amount' => $iFeatureFee,
                    'currency_id' => $sCurrency
                ];
                Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aTransaction['user_id'],$aPurchase,'feature_job','jobposting');
            }
            break;
        case 6:
            break;
        case 7:
            if(isset($aTransaction['invoice']['package_data']))
            {
                $aPackage = Phpfox::getService('jobposting.applyjobpackage')->getPackageByDataId($aTransaction['invoice']['package_data']);
                if($aPackage['fee'])
                {
                    $aPurchase = [
                        'amount' => $aPackage['fee'],
                        'currency_id' => $sCurrency
                    ];
                    Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aTransaction['user_id'],$aPurchase,'buy_apply_job_package','jobposting');

                }
            }
            break;
    }

} 
 ";s:32:"marketplace.service_sponsor__end";s:978:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/1/17
 * Time: 15:36
 */
if(Phpfox::isModule('yncaffiliate') && $iId)
{
    $aAd = db()->select('*')
        ->from(Phpfox::getT('better_ads_sponsor'))
        ->where('module_id = \'marketplace\' AND item_id ='.$iId)
        ->order('sponsor_id DESC')
        ->execute('getRow');
    if(count($aAd) && isset($aAd['sponsor_id']))
    {
        $aInvoice = db()->select('*')
            ->from(Phpfox::getT('better_ads_invoice'))
            ->where('ads_id = '.$aAd['sponsor_id'])
            ->execute('getRow');
        if($aInvoice && $aInvoice['status'] == 'completed')
        {
            $aPurchase = [
                'amount' => $aInvoice['price'],
                'currency_id' => $aInvoice['currency_id'],
            ];
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'sponsor_marketplace','marketplace');
        }
    }
    return true;
} 
 ";s:39:"music.service_process_sponsoralbum__end";s:972:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/1/17
 * Time: 15:36
 */
if(Phpfox::isModule('yncaffiliate') && $iId)
{
    $aAd = db()->select('*')
        ->from(Phpfox::getT('better_ads_sponsor'))
        ->where('module_id = \'music_album\' AND item_id ='.$iId)
        ->order('sponsor_id DESC')
        ->execute('getRow');
    if(count($aAd) && isset($aAd['sponsor_id']))
    {
        $aInvoice = db()->select('*')
            ->from(Phpfox::getT('better_ads_invoice'))
            ->where('ads_id = '.$aAd['sponsor_id'])
            ->execute('getRow');
        if($aInvoice && $aInvoice['status'] == 'completed')
        {
            $aPurchase = [
                'amount' => $aInvoice['price'],
                'currency_id' => $aInvoice['currency_id'],
            ];
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'sponsor_music_album','music');
        }
    }
    return true;
} 
 ";s:38:"music.service_process_sponsorsong__end";s:971:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/1/17
 * Time: 15:36
 */
if(Phpfox::isModule('yncaffiliate') && $iId)
{
    $aAd = db()->select('*')
        ->from(Phpfox::getT('better_ads_sponsor'))
        ->where('module_id = \'music_song\' AND item_id ='.$iId)
        ->order('sponsor_id DESC')
        ->execute('getRow');
    if(count($aAd) && isset($aAd['sponsor_id']))
    {
        $aInvoice = db()->select('*')
            ->from(Phpfox::getT('better_ads_invoice'))
            ->where('ads_id = '.$aAd['sponsor_id'])
            ->execute('getRow');
        if($aInvoice && $aInvoice['status'] == 'completed')
        {
            $aPurchase = [
                'amount' => $aInvoice['price'],
                'currency_id' => $aInvoice['currency_id'],
            ];
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'sponsor_music_song','music');
        }
    }

    return true;
} 
 ";s:34:"photo.service_process_sponsor__end";s:960:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/1/17
 * Time: 15:36
 */
if(Phpfox::isModule('yncaffiliate') && $iId)
{
    $aAd = db()->select('*')
        ->from(Phpfox::getT('better_ads_sponsor'))
        ->where('module_id = \'photo\' AND item_id ='.$iId)
        ->order('sponsor_id DESC')
        ->execute('getRow');
    if(count($aAd) && isset($aAd['sponsor_id']))
    {
        $aInvoice = db()->select('*')
            ->from(Phpfox::getT('better_ads_invoice'))
            ->where('ads_id = '.$aAd['sponsor_id'])
            ->execute('getRow');
        if($aInvoice && $aInvoice['status'] == 'completed')
        {
            $aPurchase = [
                'amount' => $aInvoice['price'],
                'currency_id' => $aInvoice['currency_id'],
            ];
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'sponsor_photo','photo');
        }
    }
    return true;
} 
 ";s:58:"socialad.service_payment_process_complete_transaction__end";s:561:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/14/17
 * Time: 11:32
 */

if(Phpfox::isModule('yncaffiliate') && $aTransaction)
{
    if($method != 'pay_later'){
        $aPurchase = [
            'amount' => $aTransaction['transaction_amount'],
            'currency_id' => $aTransaction['transaction_currency']
        ];
        if($aTransaction['transaction_amount'] > 0)
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aTransaction['transaction_user_id'],$aPurchase,'buy_social_ad_package','socialad');
    }
} 
 ";s:49:"subscribe.service_purchase_process_update_pre_log";s:492:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 2/27/17
 * Time: 14:24
 */
if(Phpfox::isModule('yncaffiliate') && $iPurchaseId)
{
    $aPurchase = Phpfox::getService('subscribe.purchase')->getPurchase($iPurchaseId);
    if($sStatus == 'completed')
    {
        $iNewUserId = $aPurchase['user_id'];
        $aPurchase['amount'] = $aPurchase['price'];
        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($iNewUserId,$aPurchase,'subscription','core');
    }
} 
 ";s:35:"user.service_auth_login__cookie_end";s:1427:"if(Phpfox::isAppActive('YNC_Affiliate') && (int)$aRow['view_id'] === 0 && ($data = storage()->get('yncaffiliate_pending_user_' . $aRow['user_id']))) {
    $valueObject = $data->value;
    if((int)$valueObject->invite_link_id)
    {
        $sIsAffiliate = Phpfox::getService('yncaffiliate.affiliate.affiliate')->checkIsAffiliate($valueObject->invite_user_id);
        if($sIsAffiliate && $sIsAffiliate == 'approved'){
            if(Phpfox::getService('yncaffiliate.affiliate.process')->addAssoc((int)$valueObject->invite_user_id, $aRow['user_id'], (int)$valueObject->invite_link_id, (int)$valueObject->invite_time))
            {
                Phpfox::removeCookie('ynaf_invite_user');
                Phpfox::removeCookie('ynaf_invite_link_id');
                Phpfox::removeCookie('ynaf_invite_time');
            }
        }
    }
    elseif(setting('ynaf_intergrate_invitation')){
        Phpfox::getService('yncaffiliate.affiliate.process')->addAssocByInvitation(['email' => $aRow['email'], 'user_id' => $aRow['user_id']]);
    }
    storage()->del('yncaffiliate_pending_user_' . $aRow['user_id']);
} 
 if (isset($_SESSION['signup_plugin']) && $_SESSION['signup_plugin'] == 1)
    {
        unset($_SESSION['signup_plugin']);
        $mess = _p('you_have_already_been_a_friend_of_people');
        phpfox::getLib('url')->send('contactimporter.invitionknow', null, $mess);
    } 
 $_SESSION['check_login'] = true; 
 ";s:47:"user.service_callback_purchase_points_completed";s:474:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/1/17
 * Time: 15:36
 */
if(Phpfox::isModule('yncaffiliate') && isset($aRow))
{
    if(count($aRow) && $aRow['price'])
    {
        $aPurchase = [
            'amount' => $aRow['price'],
            'currency_id' => $aRow['currency_id'],
        ];
        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aRow['user_id'],$aPurchase,'purchase_activity_points','user');
    }
    return true;
} 
 ";s:30:"user.service_process_add_extra";s:2570:"if(Phpfox::isModule('yncaffiliate') && $iId)
    {
        $iInviteUserId = Phpfox::getCookie('ynaf_invite_user');
        $iInviteLinkId = Phpfox::getCookie('ynaf_invite_link_id');
        $iInviteTime = Phpfox::getCookie('ynaf_invite_time');

        if($aInsert['view_id'] === 1) {
            $data = [];

            if((int)$iInviteUserId) {
                $data = [
                    'invite_user_id' => $iInviteUserId,
                    'invite_link_id' => $iInviteLinkId,
                    'invite_time' => $iInviteTime
                ];
            }
            elseif(setting('ynaf_intergrate_invitation')){
                $user = db()->select('i.*')
                    ->from(Phpfox::getT('invite'),'i')
                    ->join(Phpfox::getT('user'), 'u', 'u.user_id = i.user_id')
                    ->where('i.email = \''. $aInsert['email'].'\'')
                    ->execute('getSlaveRow');
                if(!empty($user)) {
                    $data = [
                        'invite_user_id' => $user['user_id'],
                        'invite_link_id' => 0,
                        'invite_time' => $user['time_stamp']
                    ];
                }
            }

            if(!empty($data)) {
                storage()->set('yncaffiliate_pending_user_' . $iId, $data);
            }
        }
        else {
            if((int)$iInviteUserId)
            {
                $sIsAffiliate = Phpfox::getService('yncaffiliate.affiliate.affiliate')->checkIsAffiliate($iInviteUserId);
                if($sIsAffiliate && $sIsAffiliate == 'approved'){
                    if(Phpfox::getService('yncaffiliate.affiliate.process')->addAssoc($iInviteUserId,$iId,$iInviteLinkId,$iInviteTime))
                    {
                        Phpfox::removeCookie('ynaf_invite_user');
                        Phpfox::removeCookie('ynaf_invite_link_id');
                        Phpfox::removeCookie('ynaf_invite_time');
                    }
                }
            }
            elseif(setting('ynaf_intergrate_invitation')){
                Phpfox::getService('yncaffiliate.affiliate.process')->addAssocByInvitation($aInsert);
            }
        }
    } 
 /*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
$sCookieEmailForm = Phpfox::getCookie('invited_by_email_form');

$sCookieEmail = Phpfox::getCookie('invited_by_email');

if (!empty($sCookieEmailForm) && $iId)
{
	Phpfox::getService('contactimporter') -> addSocialJoined($iId, $sCookieEmail, $sCookieEmailForm);
} 
 ";s:39:"validator.admincp_settings_yncaffiliate";s:814:"$aValidation['ynaf_number_users_per_level_network_clients'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => 'Number of users per level must be greater than 0',
];

$aValidation['ynaf_minimum_request_points'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => 'Minimum Request Points must be greater than 0',
];

$aValidation['ynaf_maximum_request_points'] = [
    'def' => 'int:required',
    'min' => '1',
    'requirements'=>[
	    'min'=> '$ynaf_minimum_request_points',
    ],
    'title' => 'Maxim Request Points must be greater than 0, and greater than or equal to Minimum Request Points',
];

$aValidation['ynaf_delay_time_refunds_and_disputes'] = [
    'def' => 'int:required',
    'min' => '0',
    'title' => 'Delay time for refunds must be greater or equal to 0',
]; 
 ";s:34:"video.service_process_sponsor__end";s:1005:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/1/17
 * Time: 15:36
 */
if(Phpfox::isModule('yncaffiliate') && $iId)
{
    $aAd = db()->select('*')
                ->from(Phpfox::getT('better_ads_sponsor'))
                ->where('module_id = \'v\' AND item_id ='.$iId)
                ->order('sponsor_id DESC')
                ->execute('getRow');

    if(count($aAd) && isset($aAd['sponsor_id']))
    {
        $aInvoice = db()->select('*')
                        ->from(Phpfox::getT('better_ads_invoice'))
                        ->where('ads_id = '.$aAd['sponsor_id'])
                        ->execute('getRow');

        if($aInvoice && $aInvoice['status'] == 'completed')
        {
            $aPurchase = [
                'amount' => $aInvoice['price'],
                'currency_id' => $aInvoice['currency_id'],
            ];
            Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'sponsor_video','v');
        }
    }
} 
 ";s:35:"yncaffiliate.get_payment_commission";s:1232:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/14/17
 * Time: 15:07
 */
/**
 * Params :
 * - $aPurchaseDetail : optional, array, list payment with key: sModule, sRuleName, sCurrency, fTotalAmount, iUserId
 * - $sModule: string, module_id
 * - $sRuleName: string, rule_name in table yncaffiliate_rules
 * - $sCurrency: string, payment currency ex: USD
 * - $fTotalAmount: float, total amount user was paid
 * - $iUserId: int, user made payment
 **/
if(Phpfox::isModule('yncaffiliate'))
{

    if(isset($aPurchaseDetail) && is_array($aPurchaseDetail))
    {
        foreach ($aPurchaseDetail as $aDetail)
        {
            if($aDetail['fTotalAmount'])
                Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aDetail['iUserId'],['amount' => $aDetail['fTotalAmount'],'currency_id' => $aDetail['sCurrency']],$aDetail['sRuleName'],$aDetail['sModule']);
        }
    }
    elseif(isset($sModule) && isset($sRuleName) && $fTotalAmount > 0 && $iUserId)
    {
        $sCurrency = (isset($sCurrency)) ? $sCurrency : 'USD';
        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($iUserId,['amount' => $fTotalAmount,'currency_id' => $sCurrency],$sRuleName,$sModule);
    }
} 
 ";s:59:"ynsocialstore.service_callback_payment_product_feature__end";s:514:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/2/17
 * Time: 17:37
 */
if(Phpfox::isModule('yncaffiliate') && $aInvoice && $aPackage)
{
    $aPurchase = [
        'amount' => $aPackage['feature_product_fee']*$aInvoice['invoice_data']['feature_days'],
        'currency_id' => $aInvoice['currency_id'],
    ];
    if($aPackage['feature_product_fee'] > 0)
        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'feature_product','ynsocialstore');

} 
 ";s:57:"ynsocialstore.service_callback_payment_store_feature__end";s:508:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/2/17
 * Time: 17:38
 */
if(Phpfox::isModule('yncaffiliate') && $aInvoice && $aPackage)
{
    $aPurchase = [
        'amount' => $aPackage['feature_store_fee']*$aInvoice['invoice_data']['feature_days'],
        'currency_id' => $aInvoice['currency_id'],
    ];
    if($aPackage['feature_store_fee'] > 0)
        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'feature_store','ynsocialstore');

} 
 ";s:57:"ynsocialstore.service_callback_payment_store_publish__end";s:443:"/**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 3/2/17
 * Time: 17:38
 */

if(Phpfox::isModule('yncaffiliate') && $aPackage && $aInvoice)
{
    $aPurchase = [
        'amount' => $aPackage['fee'],
        'currency_id' => $aInvoice['currency_id'],
    ];
    if($aPackage['fee'] > 0)
        Phpfox::getService('yncaffiliate.commission.process')->handlePayment($aInvoice['user_id'],$aPurchase,'buy_store_package','ynsocialstore');

} 
 ";s:30:"feed.service_process_add__end2";s:18398:"/*
 * This is how notification for follow work:
 *
 * We will hook the feed add event and check if the poster have any followers.
 * If yes we will create a notification for those followers with type is ynmember_follownotification.
 * We also insert a row in ynmember_follow_notification, storing the type and id of the item.
 * We the notification is called back, we wil access the ynmember_follow_notification.
 * There we will get the type and id of the item being shared.
 * Then we get the corresponding feed call back (getActivityFeed....())
 * From this we get the content and bookmark_url of the notification
 */

//$aInsert : the record that inserted into feed table

// get follower
$aFollowers = Phpfox::getService('ynmember.member')->getFollowingMembers($aInsert['user_id']);

foreach ($aFollowers as $aFollower) {

    if (!Phpfox::getService('ynmember.member')->canGetNotification($aInsert['user_id'], $aFollower['user_id'])) {
        continue;
    }

    $feed_params = json_encode($aInsert);

    $aYnmemberFollowNotificationInsert = [
        'feed_params' => $feed_params,
        'time_stamp' => PHPFOX_TIME
    ];
    $iFollowNotificationId = $this->database()->insert(Phpfox::getT('ynmember_follow_notification'), $aYnmemberFollowNotificationInsert);

    $aYnmemberNotificationInsert = [
        'type_id' => 'ynmember_follow_action',
        'item_id' => $iFollowNotificationId,
        'user_id' => $aFollower['user_id'],
        'owner_user_id' => $aInsert['user_id'],
        'time_stamp' => PHPFOX_TIME
    ];

    $iId = $this->database()->insert(Phpfox::getT('notification'), $aYnmemberNotificationInsert);
} 
 if ($this->_bIsNewLoop)
    return;
$aLastMap = db()->select('*')
    ->from(Phpfox::getT('ynfeed_notification_map'))
    ->order('map_id DESC')
    ->limit(1)
    ->execute("getSlaveRow");
if ($aLastMap && $aLastMap['item_id'] == $this->_iLastId) {
    return;
}
$sCallback = json_encode($this->_aCallback);
if (!$this->_aCallback) {
    if (isset($_SESSION['ynfeed_process_add_callback'])) {
        $sCallback = $_SESSION['ynfeed_process_add_callback'];
        unset($_SESSION['ynfeed_process_add_callback']);
    }
}
$aOldMap = db()->select('*')
    ->from(Phpfox::getT('ynfeed_notification_map'))
    ->where("item_id = " . $this->_iLastId . " AND callback = '" . $sCallback . "'")
    ->execute("getSlaveRow");

if (isset($aOldMap['map_id'])) {
    $iMapId = $aOldMap['map_id'];
} else {
    // Add notification map
    $iMapId = db()->insert(Phpfox::getT('ynfeed_notification_map'), array(
        'item_id' => $this->_iLastId, //feed id
        'callback' => $sCallback
    ));
}

// Get tags, mentions
$aMaps = db()->select('*')
    ->from(Phpfox::getT('ynfeed_feed_map'), 'fm')
    ->where("fm.item_id = " . $iItemId . " AND fm.item_type = '" . $sType . "'")// item id in feed
    ->execute("getSlaveRows");
$aReducedMaps =
    array_map(function ($e) {
        return [
            'item_id' => $e['item_id'],
            'type_id' => $e['type_id'],
            'parent_user_id' => $e['parent_user_id'],
            'parent_user_type' => $e['parent_user_type']
        ];
    }, $aMaps);
foreach ($aMaps as $key => $aMap) {
    if ($aMap['type_id'] == 'mention') {
        if (array_search([
                'item_id' => $aMap['item_id'],
                'type_id' => 'tag',
                'parent_user_id' => $aMap['parent_user_id'],
                'parent_user_type' => $aMap['parent_user_type']
            ], $aReducedMaps) !== false)
            continue;
    }
    /* get car owner instead of using car id to notify */
    if ($aMap['parent_user_type'] == 'car') {
        $aCar = Phpfox::getService('ynclistingcar')->getQuickBusinessById($aMap['parent_user_id']);
        if (empty($aCar)) {
            continue;
        }
        $iOwnerUserId = $aCar['user_id'];
    } else {
        $iOwnerUserId = $aMap['parent_user_id'];
    }
    $aOldNoti = db()->select('*')
        ->from(Phpfox::getT('notification'))
        ->where("type_id = '" . 'ynfeed_' . $aMap['type_id'] . "' AND item_id = " . $iMapId . " AND user_id = " . $iOwnerUserId . " AND owner_user_id = " . $aMap['user_id'])
        ->execute('getSlaveRow');
    if (!$aOldNoti)
        Phpfox::getService('notification.process')->add('ynfeed_' . $aMap['type_id'], $iMapId, $iOwnerUserId, $aMap['user_id'], true);
} 
 if ($aInsert['type_id'] == 'link' && $aInsert['privacy'] == 0)
{
    $aUsers = Phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {
            
        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addlink', $aInsert['item_id'], $aUser['user_id']);
        }
    }
} 
 if (Phpfox::isModule('socialpublishers') && $sType != 'pages_comment' && $sType != 'event' && $aInsert['type_id'] == "user_status" && isset($aInsert['parent_feed_id']) && $aInsert['parent_feed_id'] > 0)
{    
    $iUserId = Phpfox::getUserId();
    $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iUserId);
    $aRecentAddedItem = Phpfox::getLib('cache')->get($sIdCache);

    if ($aRecentAddedItem && count($aRecentAddedItem))
    {
        $aSharePublishersFeed = Phpfox::getService('socialpublishers')->getAddedInfo($aRecentAddedItem);

        if ($aSharePublishersFeed && count($aSharePublishersFeed))
        {
            $aShareType = $aSharePublishersFeed['type_id'];
            $iUserId = $iUserId;
            $sTitle = "";
            $aSharePublishers['url'] = isset($aSharePublishersFeed['feed_link']) ? $aSharePublishersFeed['feed_link'] : Phpfox::getParam('core.path');
            $aSharePublishers['text'] = (isset($aSharePublishersFeed['feed_status']) && !empty($aSharePublishersFeed['feed_status'])) ? $aSharePublishersFeed['feed_status'] : (isset($aSharePublishersFeed['feed_content']) ? $aSharePublishersFeed['feed_content'] : "");
            $aSharePublishers['content'] = (isset($aSharePublishersFeed['feed_status']) && !empty($aSharePublishersFeed['feed_status'])) ? $aSharePublishersFeed['feed_status'] : (isset($aSharePublishersFeed['feed_content']) ? $aSharePublishersFeed['feed_content'] : "");
            $aSharePublishers['title'] = (isset($aSharePublishersFeed['feed_status']) && !empty($aSharePublishersFeed['feed_status'])) ? $aSharePublishersFeed['feed_status'] : (isset($aSharePublishersFeed['feed_title']) ? $aSharePublishersFeed['feed_title'] : $sTitle);

            Phpfox::getService('socialpublishers')->showPublisher($aShareType, $iUserId, $aSharePublishers, 2);
        }
    }
} 
 if ((int)$iParentUserId == 0)
{
	$bDisplay = true;
	$iTempA = isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : 0;
	$a = (int)strlen($iTempA);
	$b = (int)strlen(Phpfox::getLib("url")->makeUrl('advancedphoto.add'));
	// Fix bug migration from Phpfox Music to Music Sharing.
	$aCore = Phpfox::getLib('request')->getArray('core');
	$bMigration = false;
	if (isset($aCore['call']) && $aCore['call'] == 'musicsharing.migrateData')
	{
		$bMigration = true;
	}
	if (Phpfox::isModule('suggestion') && (Phpfox::isUser() || $iOwnerUserId > 0) && !$bMigration)
	{
		$sTypeId = $aInsert['type_id'];

		if(strpos($sTypeId, 'friend') === FALSE)
		{
			$_SESSION['feed_added'] = 1;
		}

		$aTypeId = explode("_", $sTypeId);
		$sModuleName = $aTypeId[0];
		$sPrefix = $this->_bIsCallback ? $this->_aCallback['table_prefix'] : '';

		/*
		 * not suggestion to friends if module is [friend, pages]
		 * not process for module friend
		 */
		if (!Phpfox::getService('suggestion')->isNotificationMessage($sTypeId) && Phpfox::getService('suggestion')->isSupportModule($sModuleName) && !in_array($sModuleName,array('friend','pages','link')))
		{
			$_aFeed = $aInsert;

			$_aFeed['feed_id'] = 0;
			$_aFeed['full_name'] = Phpfox::getUserBy('full_name');
			$_aFeed['gender'] = (int)Phpfox::getUserBy('gender');
			$_aFeed['prefix'] = $sPrefix;

			/*
			 * check if type id has sub action 
			 * ex: music_album will call back getFeedRedirectAlbum
			 * if not has sub action will callback: getFeedRedirect
			 * 
			 */        


			if (isset($aTypeId[1]))
			{
				$sFunction = 'getFeedRedirect' . ucfirst($aTypeId[1]);
				$sFunctionFeed = 'getActivityFeed' . ucfirst($aTypeId[1]);
			}
			else
			{
				$sFunction = 'getFeedRedirect';
				$sFunctionFeed = 'getActivityFeed';
			}

			/*
			 * hardcode for module not music and sType not company of jobposting
			 */

			
			if ($sModuleName != 'music')
			{
				/*
				 * get callback link of item has been insert
				 * if is module quiz do nothing
				 */
				
				//MinhNTK
				if ($sModuleName != 'quiz' && $sModuleName != 'link' && $sModuleName != 'document' && $sModuleName != 'foxfavorite' && Phpfox::hasCallback($sModuleName, $sFunction))
				{
					$sLinkCallBack = Phpfox::getService($sModuleName.'.callback')->$sFunction($_aFeed['item_id']);
				}
				else
				{
					$sLinkCallBack = '';
				}
				
	
				if (Phpfox::hasCallback($sModuleName, $sFunctionFeed))
				{
					$_aFeedDetail= Phpfox::getService($sModuleName.'.callback')->$sFunctionFeed($_aFeed);

				}


				if (isset($_aFeedDetail['feed_title']))
				{
					$sTitle = $_aFeedDetail['feed_title'];
				}
				else
				{
					$sTitle = $_aFeed['sModule'];
				}


				$_aFeed['title'] = $sTitle;
				$_aFeed['sLinkCallback'] = $sLinkCallBack;
				$_aFeed['sModule'] = $sModuleName;


				if ( ( $sType == 'contest' || $sType == 'coupon' || $sType =='jobposting_job' ) )
				{
					$aRet['title'] = $sTitle;
					$aRet['sLinkCallback'] = $sLinkCallBack;
					$aRet['sModule'] = $sModuleName;
					$aRet['type_id'] = $_aFeed['type_id'];
					$aRet['item_id'] = $_aFeed['item_id'];
					$aRet['prefix'] = $sPrefix;
					if($sType =='jobposting_job')
						$aRet['sLinkCallback'] = $_aFeedDetail['feed_link'];
					
					$sRet = base64_encode(serialize($aRet));					

					Phpfox::getService('suggestion.process')->add($aInsert['user_id'], $iFriendId = 0, $sFriendList = 0, $sModule = 0, $sMessage = $sRet, $sLinkCallback = '', $sTitle = '', '', true);

				}

				if ($sModuleName == 'jobposting') {
						$_aFeed['sLinkCallback'] = $_aFeedDetail['feed_link'];
				}

				
				if ($sModuleName == 'forum')
				{
					/*update forum link*/
					if (Phpfox::getParam('core.url_rewrite') < 2)
					{
						$sLinkCallBack = Phpfox::getLib('url')->getDomain().'forum/thread/'.$_aFeed['item_id'].'/'.$_aFeed['title'].'/';
					}
					else
					{
						$sLinkCallBack = Phpfox::getLib('url')->getDomain().'index.php?do=/forum/thread/'.$_aFeed['item_id'].'/'.$_aFeed['title'].'/';
					}
					$_aFeed['sLinkCallback'] = $sLinkCallBack;                
				}

				//if is moduel channel waiting for show suggestion popup page after added video or video of channel            
				if ($sModuleName == 'videochannel' && $_aFeed['type_id']!="videochannel_favourite" && $_aFeed['type_id']!="videochannel_unfavourite")
				{
					if (Phpfox::getUserParam('suggestion.enable_friend_suggestion') && Phpfox::getUserParam('suggestion.enable_content_suggestion_popup') && Phpfox::getService('suggestion')->isAllowContentSuggestionPopup())
					{
						$_sItemId = urlencode($_aFeed['item_id']);
						$_sTitle = base64_encode(urlencode($_aFeed['title']));
						$sShowSuggestion = "suggestion_and_recommendation_tb_show('...',$.ajaxBox('suggestion.friends','iFriendId=".$_sItemId."&sSuggestionType=suggestion&sModule=suggestion_videochannel&sLinkCallback=".$sLinkCallBack."&sTitle=".$_sTitle."&sPrefix=&sExpectUserId='));";
						echo '<script type="text/javascript">setTimeout(function(){'.$sShowSuggestion.'},1300);</script>';
					}
					else
					{
						unset($_SESSION['suggestion']);
					}
				}

				if ($sModuleName == 'video')
				{
					if (Phpfox::getUserParam('suggestion.enable_friend_suggestion') && Phpfox::getUserParam('suggestion.enable_content_suggestion_popup') && Phpfox::getService('suggestion')->isAllowContentSuggestionPopup())
					{
						$_sItemId = urlencode($_aFeed['item_id']);
						$_sTitle = base64_encode(urlencode($_aFeed['title']));
						$sShowSuggestion = "suggestion_and_recommendation_tb_show('...',$.ajaxBox('suggestion.friends','iFriendId=".$_sItemId."&sSuggestionType=suggestion&sModule=suggestion_video&sLinkCallback=".$sLinkCallBack."&sTitle=".$_sTitle."&sPrefix=&sExpectUserId='));";
						echo 'setTimeout(function(){'.$sShowSuggestion.'},1300);';
					}
					else
					{
						unset($_SESSION['suggestion']);
					}
				}
				if($_aFeed['type_id']!='videochannel_favourite' && $_aFeed['type_id']!='videochannel_unfavourite' && $_aFeed['type_id']!='jobposting_company')
				{
					$_SESSION['suggestion']['aFeed'] = $_aFeed;
					Phpfox::setCookie("suggestion", json_encode(array('aFeed' => $_aFeed)));
				}
			 
			if(isset($_SESSION['suggestion']['aFeed']['type_id']) && $_SESSION['suggestion']['aFeed']['type_id']=='blog')
			{
				if(isset($_SESSION['suggestion']['aFeed']['blog_id']) && $_SESSION['suggestion']['aFeed']['blog_id']>0)
					$_SESSION['suggestion']['aFeed']['item_id'] = $_SESSION['suggestion']['aFeed']['blog_id'];
			}
			
			}
			else
			{
				/*
				 * process for module music
				 * store template data to DB & replace when suggestion box is called
				 */ 

				$iSongId = $_aFeed['item_id'];

				/*
				 * hardcode always suggestion a song.
				 */

				$sFunction = 'getFeedRedirectSong';
				$sFunctionFeed = 'getActivityFeedSong';

				$aSong = Phpfox::getService('music')->getSong($iSongId);

				if (count($aSong) > 0)
				{
					$iAlbumId = $_aFeed['item_id'];

					$sLinkCallBack = Phpfox::getService($sModuleName.'.callback')->$sFunction($iAlbumId);
					$_aFeedDetail= Phpfox::getService($sModuleName.'.callback')->$sFunctionFeed($_aFeed);
					if (isset($_aFeedDetail['feed_title'])){
						$sTitle = $_aFeedDetail['feed_title'];
					}else{
						$sTitle = $_aFeed['sModule'];
					}
					$aRet['title'] = $sTitle;
					$aRet['sLinkCallback'] = $sLinkCallBack;
					$aRet['sModule'] = $sModuleName;
					$aRet['type_id'] = $_aFeed['type_id'];
					$aRet['item_id'] = $_aFeed['item_id'];
					$aRet['prefix'] = $sPrefix;
					$sRet = base64_encode(serialize($aRet));
					
					$iUserId = Phpfox::getUserId();

					if (!isset($_SESSION['suggestion']['ajax']))
					{
						Phpfox::getService('suggestion.process')->add($iUserId, $iFriendId = 0, $sFriendList = 0, $sModule = 0, $sMessage = $sRet, $sLinkCallback = '', $sTitle = '', '', true);
					}
				}
			}
		}
	?>

	<?php }/*end check module*/?>

	<?php 
	// Turn on popup when creating a feed on activity feed or wall
	$support_advphoto = 0;
	if (isset($_SESSION['suggestion']['aFeed']) && ($a != $b || ($a==$b && $_SESSION['suggestion']['aFeed']['sModule']!='advancedphoto')))
	{
		if ($_SESSION['suggestion']['aFeed']['sModule']!="advancedphoto" || ($_SESSION['suggestion']['aFeed']['sModule']=="advancedphoto" && isset($_POST['action'])))
		{
			$support_advphoto = 1;
		}

		if ($support_advphoto && Phpfox::isModule('suggestion') && Phpfox::isUser() && isset($_SESSION['suggestion']['aFeed']['sModule']) && $_SESSION['suggestion']['aFeed']['sModule']!="videochannel" && $_SESSION['suggestion']['aFeed']['sModule']!="video" && ($_SESSION['suggestion']['aFeed']['sModule']!="photo" || ($_SESSION['suggestion']['aFeed']['sModule']=="photo" && isset($_POST['action']))))
		{
			$bShow = 0;
			/*check if any item approved by admin; not show suggestion*/
			if (Phpfox::getService('suggestion.process')->isIgnoreSuggestion())
			{
				unset($_SESSION['suggestion']['aFeed']);
			}

			if (isset($_SESSION['suggestion']['aFeed']))
			{
				$_aFeed = $_SESSION['suggestion']['aFeed'];     
			 
				$sLinkCallback = $_aFeed['sLinkCallback'];
				$sTitle = base64_encode(urlencode($_aFeed['title'].''));

				if (($_aFeed['sModule']=='photo' && $_aFeed['type_id']=='photo') || ($_aFeed['sModule']=='advancedphoto' && $_aFeed['type_id']=='advancedphoto'))
				{
					if(Phpfox::isModule("photo"))
					{
						$aPhoto = Phpfox::getService("photo")->getCoverPhoto($_aFeed['item_id']);
						$_SESSION['suggestion']['photo']['title'] = $aPhoto['title'];
						$_SESSION['suggestion']['photo']['photo_id'] = $aPhoto['photo_id'];
					}
					else if(Phpfox::isModule("advancedphoto"))
					{
						 $aPhoto = Phpfox::getService("advancedphoto")->getCoverPhoto($_aFeed['item_id']);
					}

					if ($_aFeed['title'] == "")
					{
						 $sTitle = base64_encode(urlencode($aPhoto['title'].''));
					}
				}

				$sPrefix = $_SESSION['suggestion']['aFeed']['prefix'];
				$bShow = 1;    

				if (isset($_SESSION['suggestion']['photo']['method']) && $_SESSION['suggestion']['photo']['method'] == 'simple')
				{
					$bDisplay = false;
				}
				

				if ($_aFeed['sModule'] == 'blog')
				{
					$bDisplay = true;
				}
				
				if ($_aFeed['sModule'] == 'music')
				{
					$bDisplay = false;
				}

				if ($_aFeed['sModule'] == 'contest')
				{
					$bDisplay = false;
				}

				if ($_aFeed['sModule'] == 'coupon')
				{

					$bDisplay = false;
				}


				if ($_aFeed['sModule'] == 'jobposting')
				{

					$bDisplay = false;
				}

			}
			else
			{
			}

			// Ajax call.
			$ynsuggestion_ajax = Phpfox::getCookie('suggestion_ajax');
			if (isset($_SESSION['suggestion']['ajax'])
				|| (isset($ynsuggestion_ajax) && $ynsuggestion_ajax == '1')
				)
			{
				Phpfox::setCookie('suggestion_ajax', '', -1);
				$oAjax = Phpfox::getLib('ajax');
				if(($_aFeed['sModule'] == 'photo' && Phpfox::getParam('photo.html5_upload_photo'))
					|| ($_aFeed['sModule'] == 'advancedphoto' && Phpfox::getParam('advancedphoto.html5_upload_photo'))
					){
					// do not process for uploading by html5 (photo, advancedphoto)

				} else {

					if ( !isset($_SESSION['suggestion']['photo']['method']) || $_SESSION['suggestion']['photo']['method'] != 'simple' ) {
						$oAjax->call('window.parent.suggestion_and_recommendation_tb_show("...", window.parent.$.ajaxBox(\'suggestion.friends\', \'iFriendId=\' + ' . $_aFeed['item_id'] . ' + \'&sSuggestionType=suggestion&sModule=suggestion_' . $_aFeed['sModule'] . '&sLinkCallback=' . $sLinkCallback . '&sTitle=' . $sTitle . '&sPrefix=' . $sPrefix . '&sExpectUserId=\'));'); 
					}
				}

				unset($_SESSION['suggestion']['ajax']);
				if (isset($_SESSION['suggestion']['aFeed']))
				{
					unset($_SESSION['suggestion']['aFeed']);
				}
			}

		}
	}
} 
 ";s:28:"profile.component_block_info";s:40:"$_SESSION['aUserYnmember'] = $aUser; 
 ";s:35:"profile.component_block_pic_process";s:1227:"if (Phpfox::isModule('ynmember'))
{
    $aProcessedUser = $aUser;
    Phpfox::getService('ynmember.member')->processReview($aProcessedUser);

    $htmlContent = ynmember_rating($aProcessedUser['rating']);

    $sUrl = Phpfox::getLib('url')->makeUrl('ynmember.review', ['user_id' => $aProcessedUser['user_id']]);
    $sReviewCountStr = ($aProcessedUser['total_review']) == 1 ? _p('1_review') : _p('more_reviews', ['number' => $aProcessedUser['total_review']]);
    $sUrlContent = '<a href="' . $sUrl . '"><span> (' . $sReviewCountStr . ')</span></a>';

    if(!empty($aProcessedUser['rating']) && $aProcessedUser['rating'] > 0)
    {
        ?>

        <script type="text/javascript">
            $Behavior.ynmemberLoadProfilePic = function(){
                var profiles_info = $('.profiles_info');
                var ynmember_rating_block = $('.ynmember_rating_block');
                if (profiles_info && ynmember_rating_block.length == 0) {
                    var rating_str = '<div class="ynmember_rating_block">' + '<?php echo $htmlContent ?>' + '<?php echo $sUrlContent ?>' + '</div>';
                    profiles_info.append(rating_str);
                }
            }
        </script>

        <?php
    }
} 
 ";s:27:"profile.template_block_info";s:2292:"$aUserYnm = $_SESSION['aUserYnmember'];
$iUserId = $aUserYnm['user_id'];
list($aStudyPlaces, $aWorkPlaces, $aLivingPlaces, $aLivedPlaces) = Phpfox::getService('ynmember.place.browse')->getPlacesOfUser($iUserId);


if (!empty($aStudyPlaces)) {
    $aStudyPlacesTitle = _p('Study at');
    ?>
    <div class="item">
        <div class="item-label">
            <?php echo $aStudyPlacesTitle ?>:
        </div>
        <div class="item-value">
            <?php foreach ($aStudyPlaces as $aStudyPlace) { ?>
                <div>
                    <a href="<?php echo ynmember_place($aStudyPlace) ?>"><?php echo $aStudyPlace['location_title'] ?></a>
                </div>
            <?php } ?>
        </div>
    </div>
    <?php
}

if (!empty($aWorkPlaces)) {
    $aWorkPlacesTitle = _p('Work at');
    ?>
    <div class="item">
        <div class="item-label">
            <?php echo $aWorkPlacesTitle ?>:
        </div>
        <div class="item-value">
            <?php foreach ($aWorkPlaces as $aWorkPlace) { ?>
                <div>
                    <a href="<?php echo ynmember_place($aWorkPlace) ?>"><?php echo $aWorkPlace['location_title'] ?></a>
                </div>
            <?php } ?>
        </div>
    </div>
    <?php
}

if (!empty($aLivingPlaces)) {
    $aLivingPlacesTitle = _p('Living in');
    ?>
    <div class="item">
        <div class="item-label">
            <?php echo $aLivingPlacesTitle ?>:
        </div>
        <div class="item-value">
            <?php foreach ($aLivingPlaces as $aLivingPlace) { ?>
                <div>
                    <a href="<?php echo ynmember_place($aLivingPlace) ?>"><?php echo $aLivingPlace['location_title'] ?></a>
                </div>
            <?php } ?>
        </div>
    </div>
    <?php
}

if (!empty($aLivedPlaces)) {
    $aLivedPlacesTitle = _p('Lived in');
    ?>
    <div class="item">
        <div class="item-label">
            <?php echo $aLivedPlacesTitle ?>:
        </div>
        <div class="item-value">
            <?php foreach ($aLivedPlaces as $aLivedPlace) { ?>
                <div>
                    <a href="<?php echo ynmember_place($aLivedPlace) ?>"><?php echo $aLivedPlace['location_title'] ?></a>
                </div>
            <?php } ?>
        </div>
    </div>
    <?php
} 
 ";s:27:"profile.template_block_menu";s:1618:"$iUserId = $this->_aVars['aUser']['user_id'];
$oReviewService = Phpfox::getService('ynmember.review');
if ($oReviewService->isWrittenReviewFor($iUserId)) {
    $aReview = $oReviewService->getMyReviewFor($iUserId);
    $sUrl = Phpfox::getLib('url')->makeUrl('ynmember.writereview', ['user_id' => $iUserId, 'review_id' => $aReview['review_id']]);
} else {
    $sUrl = Phpfox::getLib('url')->makeUrl('ynmember.writereview', ['user_id' => $iUserId]);
}

if (Phpfox::getService('ynmember.review')->canWriteReview($iUserId)) {
    if (Phpfox::getUserId() == $iUserId) {
        ?>
        <li>
            <a href="<?php echo $sUrl ?>" class="popup"><?php echo '<span class="ico ico-star-circle-o"></span>' . _p('Review & Rate yourself') ?></a>
        </li>
        <?php
    } else {
        ?>
        <li>
            <a href="<?php echo $sUrl ?>" class="popup"><?php echo '<span class="ico ico-star-circle-o"></span>' . _p('Review & Rate this User') ?></a>
        </li>
        <?php
    }
}

if (Phpfox::getUserParam('ynmember_follow_member') && Phpfox::getService('user.privacy')->hasAccess($iUserId, 'ynmember.follow')) {
    if (Phpfox::getService('ynmember.member')->isFollowingMember(Phpfox::getUserId(), $iUserId)) {
        $sFollowStr = '<span class="ico ico-minus"></span>' . _p('Stop getting notification');
    } else {
        $sFollowStr = '<span class="ico ico-plus"></span>' . _p('Get notification');
    }
    ?>
    <li>
        <a href="javascript:void(0)" onclick="ynmember.followMemberOnProfile(<?php echo $iUserId ?>)">
            <?php echo $sFollowStr ?>
        </a>
    </li>
    <?php
} 
 ";s:18:"template_getheader";s:15495:"defined('PHPFOX') or exit('NO DICE!');

if (Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'app',
        'id' => 'YNC_Member'
    ]) {
    Phpfox::getLib('url')->send('admincp.setting.edit', ['module-id' => 'ynmember']);
} 
 PhpFox::getLib('template')->setHeader(array(
    'jscript/moment.min.js' => 'app_p-advevent',
    'jscript/daterangepicker.js' => 'app_p-advevent',
)); 
 defined('PHPFOX') or exit('NO DICE!');

if (Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'app',
        'id' => '__module_advancedmarketplace'
    ]) {
    Phpfox::getLib('url')->send('admincp.advancedmarketplace');
}

if (Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'advancedmarketplace',
        'req3' => 'user-group-settings'
    ]) {
    Phpfox::getLib('url')->send('admincp.user.group.add', ['setting' => 1, 'hide_app' => 1, 'module' => 'advancedmarketplace','group_id' => 2]);
}

if (Phpfox::getLib('request')->get('req1') == 'admincp'
    && Phpfox::getLib('request')->get('req2') == 'user'
    && Phpfox::getLib('request')->get('req3') == 'group'
    && Phpfox::getLib('request')->get('req4') == 'add'
    && Phpfox::getLib('request')->get('module') == 'advancedmarketplace'
    && Phpfox::getLib('request')->get('hide_app') == '1') {

    Phpfox_Template::instance()->setHeader('<script>$Behavior.onLoadUserSettingYNCAdvmarketplace = function(){ 
            if ($(\'.main_holder\').find(\'.btn-group\').length) { 
                    $(\'.main_holder\').find(\'.btn-group > a:eq(1)\').addClass(\'active\'); 
                } 
            };</script>');
} 
 if(Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'app',
        'id' => '__module_auction'
    ]) {
    Phpfox::getLib('url')->send('admincp.setting.edit', ['module-id' => 'auction']);
}

if (Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'auction',
        'req3' => 'user-group-settings'
    ]) {
    Phpfox::getLib('url')->send('admincp.user.group.add', ['setting' => 1, 'hide_app' => 1, 'module' => 'auction','group_id' => 2]);
}

if (Phpfox::getLib('request')->get('req1') == 'admincp'
    && Phpfox::getLib('request')->get('req2') == 'user'
    && Phpfox::getLib('request')->get('req3') == 'group'
    && Phpfox::getLib('request')->get('req4') == 'add'
    && Phpfox::getLib('request')->get('module') == 'auction'
    && Phpfox::getLib('request')->get('hide_app') == '1') {

    Phpfox_Template::instance()->setHeader('<script>$Behavior.onLoadUserSettingYNSS = function(){  
            if ($(\'.main_holder\').find(\'.btn-group\').length) {  
                    $(\'.main_holder\').find(\'.btn-group > a:eq(1)\').addClass(\'active\');  
                }  
            };</script>');
} 
 if(Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'app',
        'id' => '__module_contactimporter'
    ]) {
        Phpfox::getLib('url')->send('admincp.setting.edit',['module-id' => 'contactimporter']);
    }
    if (Phpfox::getLib('request')->getRequests() == [
            'req1' => 'admincp',
            'req2' => 'contactimporter',
            'req3' => 'user-group-settings'
        ]) {
        Phpfox::getLib('url')->send('admincp.user.group.add', ['setting' => 1, 'hide_app' => 1, 'module' => 'contactimporter','group_id' => 2]);
    }

    if (Phpfox::getLib('request')->get('req1') == 'admincp'
        && Phpfox::getLib('request')->get('req2') == 'user'
        && Phpfox::getLib('request')->get('req3') == 'group'
        && Phpfox::getLib('request')->get('req4') == 'add'
        && Phpfox::getLib('request')->get('module') == 'contactimporter'
        && Phpfox::getLib('request')->get('hide_app') == '1') {

        Phpfox_Template::instance()->setHeader('<script>$Behavior.onLoadUserSettingYNSCI = function(){
                if ($(\'.main_holder\').find(\'.btn-group\').length) {
                        $(\'.main_holder\').find(\'.btn-group > a:eq(1)\').addClass(\'active\');
                    }
                };</script>');
    } 
 if(Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'app',
        'id' => '__module_coupon'
    ]) {
    Phpfox::getLib('url')->send('admincp.setting.edit', ['module-id' => 'coupon']);
}
if (Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'coupon',
        'req3' => 'user-group-settings'
    ]) {
    Phpfox::getLib('url')->send('admincp.user.group.add', ['setting' => 1, 'hide_app' => 1, 'module' => 'coupon','group_id' => 2]);
}

if (Phpfox::getLib('request')->get('req1') == 'admincp'
    && Phpfox::getLib('request')->get('req2') == 'user'
    && Phpfox::getLib('request')->get('req3') == 'group'
    && Phpfox::getLib('request')->get('req4') == 'add'
    && Phpfox::getLib('request')->get('module') == 'coupon'
    && Phpfox::getLib('request')->get('hide_app') == '1') {

    Phpfox_Template::instance()->setHeader('<script>$Behavior.onLoadUserSettingYNSS = function(){  
            if ($(\'.main_holder\').find(\'.btn-group\').length) {  
                    $(\'.main_holder\').find(\'.btn-group > a:eq(1)\').addClass(\'active\');  
                }  
            };</script>');
} 
 if(Phpfox::getLib('request')->getRequests() == [
    'req1' => 'admincp',
    'req2' => 'app',
    'id' => '__module_donation'
]) {
    Phpfox::getLib('url')->send('admincp.setting.edit', ['module-id' => 'donation']);
} 
 if(Phpfox::getLib('request')->getRequests() == [
    'req1' => 'admincp',
    'req2' => 'app',
    'id' => '__module_ecommerce'
]) {
    Phpfox::getLib('url')->send('admincp.setting.edit', ['module-id' => 'ecommerce']);
} 
 defined('PHPFOX') or exit('NO DICE!');

if (Phpfox::isUser() && !Phpfox::isAdminPanel() && Phpfox::isModule('notification')) {
    PhpFox::getLib('template')->setHeader(array(
            'fanot.js' => 'module_fanot',
        )
    );
}

if(Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'app',
        'id' => '__module_fanot'
    ]) {
    Phpfox::getLib('url')->send('admincp.setting.edit', ['module-id' => 'fanot']);
} 
 if(Phpfox::getLib('request')->getRequests() == [
    'req1' => 'admincp',
    'req2' => 'app',
    'id' => '__module_foxfavorite'
]) {
    Phpfox::getLib('url')->send('admincp.foxfavorite.settings', ['module-id' => 'foxfavorite']);
} 
 if(Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'app',
        'id' => '__module_foxfeedspro'
    ]) {
    Phpfox::getLib('url')->send('admincp.setting.edit', ['module-id' => 'foxfeedspro']);
} 
 defined('PHPFOX') or exit('NO DICE!');

$settings = phpfox::getService('gettingstarted.settings')->getSettings(0);
if (isset($settings['active_knowledge_base']) != null)
{
	if($settings['active_knowledge_base'] == true)
	{
		Phpfox::getLib('database')->update(phpfox::getT('menu'),array('is_active'=>1),'m_connection="'.'main'.'" and module_id="'."gettingstarted".'"');
		
	}
	else 
	{
		Phpfox::getLib('database')->update(phpfox::getT('menu'),array('is_active'=>0),'m_connection="'.'main'.'" and module_id="'."gettingstarted".'"');
		
	}
}
else 
{
		Phpfox::getLib('database')->update(phpfox::getT('menu'),array('is_active'=>0),'m_connection="'.'main'.'" and module_id="'."gettingstarted".'"');
		
}

if(Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'app',
        'id' => '__module_gettingstarted'
    ]) {
    Phpfox::getLib('url')->send('admincp.setting.edit', ['module-id' => 'gettingstarted']);
}
if (Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'gettingstarted',
        'req3' => 'user-group-settings'
    ]) {
    Phpfox::getLib('url')->send('admincp.user.group.add', ['setting' => 1, 'hide_app' => 1, 'module' => 'gettingstarted','group_id' => 2]);
}

if (Phpfox::getLib('request')->get('req1') == 'admincp'
    && Phpfox::getLib('request')->get('req2') == 'user'
    && Phpfox::getLib('request')->get('req3') == 'group'
    && Phpfox::getLib('request')->get('req4') == 'add'
    && Phpfox::getLib('request')->get('module') == 'gettingstarted'
    && Phpfox::getLib('request')->get('hide_app') == '1') {

    Phpfox_Template::instance()->setHeader('<script>$Behavior.onLoadUserSettingYNSS = function(){ 
            if ($(\'.main_holder\').find(\'.btn-group\').length) { 
                    $(\'.main_holder\').find(\'.btn-group > a:eq(1)\').addClass(\'active\'); 
                } 
            };</script>');
} 
 defined('PHPFOX') or exit('NO DICE!');

if (Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'app',
        'id' => '__module_opensocialconnect'
    ]) {
    Phpfox::getLib('url')->send('admincp.opensocialconnect.providers');
} 
 if (Phpfox::isModule('profilecompleteness')) {
    if (Phpfox::getLib('request')->getRequests() == [
            'req1' => 'admincp',
            'req2' => 'app',
            'id' => '__module_profilecompleteness'
        ]) {
        Phpfox::getLib('url')->send('admincp.profilecompleteness.settings');
    }
} 
 defined('PHPFOX') or exit('NO DICE!');

if (Phpfox::isModule('profilepopup') && Phpfox::getUserParam('profilepopup.can_view_profile_popup') && !Phpfox::isAdminPanel()) {
    PhpFox::getLib('template')->setPhrase(array(
        "profilepopup.loading"
    , "profilepopup.loading_error"
    ));
    $aRet = Phpfox::getService('profilepopup')->initThemeTemplateBodyPlugin();
    PhpFox::getLib('template')->setHeader(array(
            'redefineuserinfo.js' => 'module_profilepopup',
            'imagesloaded.min.js' => 'static_script',
            'profilepopup.js' => 'module_profilepopup',
            '<script type="text/javascript">var iOpeningDelayTime = ' . $aRet['iOpeningDelayTime'] . ', iClosingDelayTime = ' . $aRet['iClosingDelayTime'] . ', sEnableCache = ' . $aRet['sEnableCache'] . '; $Behavior.ynppSetDataForYnfbpp = function() {ynfbpp.rewriteData = $.parseJSON(\'' . $aRet['rewriteData'] . '\');};</script>'
        )
    );
}

if(Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'app',
        'id' => '__module_profilepopup'
    ]) {
    Phpfox::getLib('url')->send('admincp.setting.edit', ['module-id' => 'profilepopup']);
}
if (Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'profilepopup',
        'req3' => 'user-group-settings'
    ]) {
    Phpfox::getLib('url')->send('admincp.user.group.add', ['setting' => 1, 'hide_app' => 1, 'module' => 'profilepopup','group_id' => 2]);
}

if (Phpfox::getLib('request')->get('req1') == 'admincp'
    && Phpfox::getLib('request')->get('req2') == 'user'
    && Phpfox::getLib('request')->get('req3') == 'group'
    && Phpfox::getLib('request')->get('req4') == 'add'
    && Phpfox::getLib('request')->get('module') == 'profilepopup'
    && Phpfox::getLib('request')->get('hide_app') == '1') {

    Phpfox_Template::instance()->setHeader('<script>$Behavior.onLoadUserSettingYNSS = function(){ 
            if ($(\'.main_holder\').find(\'.btn-group\').length) { 
                    $(\'.main_holder\').find(\'.btn-group > a[href*="admincp/profilepopup/user-group-settings/"]\').addClass(\'active\'); 
                } 
            };</script>');
} 
 if (Phpfox::isModule('socialad')) {
    if (Phpfox::getLib('request')->getRequests() == [
            'req1' => 'admincp',
            'req2' => 'app',
            'id' => '__module_socialad'
        ]
    ) {
        Phpfox::getLib('url')->send('admincp.setting.edit', ['module-id' => 'socialad']);
    }

    if (Phpfox::getLib('request')->getRequests() == [
            'req1' => 'admincp',
            'req2' => 'socialad',
            'req3' => 'user-group-settings'
        ]) {
        Phpfox::getLib('url')->send('admincp.user.group.add', ['setting' => 1, 'hide_app' => 1, 'module' => 'socialad','group_id' => 2]);
    }

    if (Phpfox::getLib('request')->get('req1') == 'admincp'
        && Phpfox::getLib('request')->get('req2') == 'user'
        && Phpfox::getLib('request')->get('req3') == 'group'
        && Phpfox::getLib('request')->get('req4') == 'add'
        && Phpfox::getLib('request')->get('module') == 'socialad'
        && Phpfox::getLib('request')->get('hide_app') == '1') {

        Phpfox_Template::instance()->setHeader('<script>$Behavior.onLoadUserSettingYNSA = function(){
            if ($(\'.main_holder\').find(\'.btn-group\').length) {
                    $(\'.main_holder\').find(\'.btn-group > a:eq(1)\').addClass(\'active\');
                }
            };</script>');
    }
} 
 defined('PHPFOX') or exit('NO DICE!');

if (Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'app',
        'id' => '__module_socialbridge'
    ]) {
    Phpfox::getLib('url')->send('admincp.socialbridge.providers');
} 
 if(Phpfox::getLib('request')->getRequests() == [
    'req1' => 'admincp',
    'req2' => 'app',
    'id' => '__module_socialpublishers'
]) {
    Phpfox::getLib('url')->send('admincp.socialpublishers.modules');
} 
 if(Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'app',
        'id' => '__module_suggestion'
    ]) {
    Phpfox::getLib('url')->send('admincp.setting.edit', ['module-id' => 'suggestion']);
} 
 if ($_POST)
{
    if (isset($_POST['yntour']) && $_POST['yntour'] == "getcontroller")
    {
        $sControllerName = phpfox::getLib('module')->getFullControllerName();
        $sResult = "[controller]".$sControllerName."[/controller]";
        echo $sResult;
        die();
    }
}
if (Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'app',
        'id' => '__module_tourguides'
    ]
) {
    Phpfox::getLib('url')->send('admincp.tourguides.manage');
}
if (Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'tourguides',
        'req3' => 'user-group-settings'
    ]) {
    Phpfox::getLib('url')->send('admincp.user.group.add', ['setting' => 1, 'hide_app' => 1, 'module' => 'tourguides','group_id' => 2]);
}

if (Phpfox::getLib('request')->get('req1') == 'admincp'
    && Phpfox::getLib('request')->get('req2') == 'user'
    && Phpfox::getLib('request')->get('req3') == 'group'
    && Phpfox::getLib('request')->get('req4') == 'add'
    && Phpfox::getLib('request')->get('module') == 'tourguides'
    && Phpfox::getLib('request')->get('hide_app') == '1') {

    Phpfox_Template::instance()->setHeader('<script>$Behavior.onLoadUserSettingYNTG = function(){
            if ($(\'.main_holder\').find(\'.btn-group\').length) {
                    $(\'.main_holder\').find(\'.btn-group > a:eq(0)\').addClass(\'active\');
                }
            };</script>');
} 
 if (Phpfox::isModule('ynadvancedpayment')) {

    if (Phpfox::getLib('request')->getRequests() == [
            'req1' => 'admincp',
            'req2' => 'app',
            'id' => '__module_ynadvancedpayment'
        ]) {
        Phpfox::getLib('url')->send('admincp.api.gateway');
    }
} 
 if(Phpfox::getLib('request')->getRequests() == [
    'req1' => 'admincp',
    'req2' => 'app',
    'id' => '__module_ynchat'
]) {
    Phpfox::getLib('url')->send('admincp.setting.edit', ['module-id' => 'ynchat']);
} 
 ";s:38:"template_template_getmenu_process_menu";s:860:"if ((trim($aMenu['url'], '/') == 'members') &&  $oReq->get('req1') == 'ynmember') {
    $aMenus[$iKey]['is_selected'] = true;
} 
 if ($sConnection == 'main' && $aMenu['module'] == 'fevent' && ($aMenu['url'] = 'fevent' || $aMenu['url'] = 'profile.fevent') && !Phpfox::getUserParam('fevent.can_access_event')) {
    unset($aMenus[$iKey]);
} 
 if ($sConnection == 'main') {
    if (function_exists('materialParseMobileIcon') && !empty($aMenus[$iKey]['module'])) {
        $aMenus[$iKey]['mobile_icon'] = materialParseMobileIcon($aMenus[$iKey]['mobile_icon']);
    }

    if (!empty($aMenus[$iKey]['is_selected'])) {
        $this->assign('aMainSelectedMenu', $aMenus[$iKey]);
    }
} 
 if ($sConnection == 'invite.index' && $aMenu['url'] == 'contactimporter.export' && !Phpfox::getUserParam('contactimporter.export_contact')) {
    unset($aMenus[$iKey]);
} 
 ";s:36:"user.component_controller_profile__1";s:388:"//$iGroupId = count($aCustomGroups) + 1;
$iGroupId = 999;

$aPlacesGroup = [
    'group_id' => $iGroupId,
    'module_id' => 'ynmember',
    'product_id' => 'ynmember',
    'user_group_id' => '0',
    'type_id' => 'user_profile',
    'phrase_var_name' => 'My Places',
    'is_active' => '1',
    'ordering' => '1',
];

$aCustomGroups[] = $aPlacesGroup;
$aGroupCache[$iGroupId] = true; 
 ";s:37:"user.template_controller_profile_form";s:150:"if (Phpfox_Module::instance()->getFullControllerName() == 'user.profile') {
Phpfox::getComponent('ynmember.profile_places', null, 'controller');
} 
 ";s:40:"validator.admincp_user_settings_ynmember";s:212:"$aValidation = [
    'ynmember.points_ynmember_review'=>[
        'def' => 'int:required',
        'min' => '0',
        'title' => _p('"Points ynmember review" must be greater than or equal to 0'),
    ],
]; 
 ";s:41:"ynmember.component_controller_index_clean";s:1679:"if ( Phpfox::isModule( 'ynmember' ) ) {
	// ADD ADV SEARCH
	$sFullControllerName = Phpfox::getLib( 'template' )->getVar( 'sFullControllerName' );

	if ( $sFullControllerName == 'ynmember_index' ) {
		$title_search   = _p( 'Adv Search' );
		$classAdvSearch = 'ynmember_adv_search';
		?>

        <script type="text/javascript">
            $Behavior.ynmemberLoadContentIndex = function () {
                if ($('#ynmemberSearch').length === 0) {
                    var $member_index_page = $('#page_ynmember_index'),
                        $content = $('<span id="ynmemberSearch" class="<?php echo $classAdvSearch; ?>"><a onclick="ynmember.advSearchDisplay(\'<?php echo $title_search; ?>\'); return false;" href="javascript:void(0)" class="btn"><i class="fa fa-server space-right" aria-hidden="true"></i><?php echo $title_search; ?><i class="fa fa-caret-down space-left" aria-hidden="true"></i></a></span>'),
                        $bs_header_filter_holder = $member_index_page.find('.header_filter_holder'),
                        $mt_header_filter_holder = $member_index_page.find('.header-filter-holder'),
                        $search_btn = $content.find('a.btn'),
                        btn_classes = $mt_header_filter_holder.length ? "btn-xs btn-primary" : "btn-sm btn-primary"
                    ;
                    $search_btn.addClass(btn_classes);
                    $bs_header_filter_holder.length && $bs_header_filter_holder.append($content);
                    $mt_header_filter_holder.length && $mt_header_filter_holder.append($content);
                }
                ynmember.selectYnmemberMenu();
            }
        </script>

		<?php
	}
} 
 ";s:42:"ynmember.component_controller_review_clean";s:1688:"if ( Phpfox::isModule( 'ynmember' ) ) {
	// ADD ADV SEARCH
	$sFullControllerName = Phpfox::getLib( 'template' )->getVar( 'sFullControllerName' );

	if ( $sFullControllerName == 'ynmember_review' ) {
		$title_search   = _p( 'Advanced Search' );
		$classAdvSearch = 'ynmember_adv_search';
		?>

        <script type="text/javascript">
            $Behavior.ynmemberLoadContentIndex = function () {
                $('input[name="search[reviewer]"]').attr('placeholder', '<?php echo _p( 'Reviewed by' )?>')
                if ($('#ynmemberSearch').length === 0) {
                    var $member_review_page = $('#page_ynmember_review'),
                        $content = $('<span id="ynmemberSearch" class="<?php echo $classAdvSearch; ?>"><a onclick="ynmember.advSearchDisplay(\'<?php echo $title_search; ?>\'); return false;" href="javascript:void(0)" class="btn"><i class="fa fa-server space-right" aria-hidden="true"></i><?php echo $title_search; ?></a></span>'),
                        $bs_header_filter_holder = $member_review_page.find('.header_filter_holder'),
                        $mt_header_filter_holder = $member_review_page.find('.header-filter-holder'),
                        $search_btn = $content.find('a.btn'),
                        btn_classes = $mt_header_filter_holder.length ? "btn-xs btn-primary" : "btn-sm btn-primary"
                    ;
                    $search_btn.addClass(btn_classes);
                    $bs_header_filter_holder.length && $bs_header_filter_holder.append($content);
                    $mt_header_filter_holder.length && $mt_header_filter_holder.append($content);
                }
            }
        </script>

		<?php
	}
} 
 ";s:31:"comment.service_process_add_end";s:2302:"if ($aVals['is_via_feed'] > 0) {
    $aFeed = db()->select('*')
        ->from(Phpfox::getT($aVals['table_prefix'] . 'feed'), 'feed')
        ->where(array(
            'feed_id' => $aVals['is_via_feed'],
        ))
        ->execute('getSlaveRow');
    if(empty($aFeed))
        return;


    $aFeedCallback = [];
    if($aVals['table_prefix'] != '') {
        $aFeedCallback['module'] = substr($aVals['table_prefix'], 0, strlen($aVals['table_prefix']) - 1);
        $aFeedCallback['table_prefix'] = $aVals['table_prefix'];
        $aFeedCallback['item_id'] = $aVals['item_id'];
    }
    $aOldMap = db()->select('*')
        ->from(Phpfox::getT('ynfeed_notification_map'))
        ->where("item_id = " . $aVals['is_via_feed'] . " AND callback = '" . json_encode($aFeedCallback) . "'")
        ->execute("getSlaveRow");

    if (isset($aOldMap['map_id'])) {
        $iMapId = $aOldMap['map_id'];
    } else {
        // Add notification map
        $iMapId = db()->insert(Phpfox::getT('ynfeed_notification_map'), array(
            'item_id' => $aVals['is_via_feed'],
            'callback' => json_encode($aFeedCallback)
        ));
    }

// Get tags, mentions
    $aMaps = db()->select('*')
        ->from(Phpfox::getT('ynfeed_feed_map'), 'fm')
        ->where("fm.item_id = " . $aVals['item_id'] . " AND fm.item_type = '" . $aFeed['type_id'] . "'")
        ->execute("getSlaveRows");
    $aReducedMaps =
        array_map(function ($e) {
            return [
                'item_id' => $e['item_id'],
                'type_id' => $e['type_id'],
                'parent_user_id' => $e['parent_user_id'],
                'parent_user_type' => $e['parent_user_type']
            ];
        }, $aMaps);

    foreach ($aMaps as $key => $aMap) {
        if ($aMap['type_id'] == 'mention') {
            if (array_search([
                    'item_id' => $aMap['item_id'],
                    'type_id' => 'tag',
                    'parent_user_id' => $aMap['parent_user_id'],
                    'parent_user_type' => $aMap['parent_user_type']
                ], $aReducedMaps) !== false
            )
                continue;
        }
        Phpfox::getService('notification.process')->add('ynfeed_comment_' . $aMap['type_id'], $iMapId, $aMap['parent_user_id'], Phpfox::getUserId());
    }
} 
 ";s:50:"core.template_block_upload_form_dropzone_component";s:1613:"if($this->_aVars['isEditedFeedPhoto'] && !empty($this->_aVars['editedFeedPhotos'])) {
    foreach($this->_aVars['editedFeedPhotos'] as $key => $editedFeedPhoto) {
        echo '<div class="dz-preview dz-image-preview" data-order="'. $key .'">
                                <input type="hidden" value="'. $editedFeedPhoto['photo_id'] .'" name="val[edited_photos][]" class="js_edited_feed_photo">
                                <div class="dz-image">
                                    <img src="'. $editedFeedPhoto['url'].'" alt="'. $editedFeedPhoto['title'] .'"/>
                                </div>
                                <div class="dz-remove-file" onclick="$Core.Photo.processUploadImageForAdvFeed.removePhoto(this);">
                                    <i class="ico ico-close"></i>
                                    <span style="display:none">'. _p('dz_remove_file'). '</span>
                                </div>'. ( $editedFeedPhoto['view_id'] == 1 ? '<span class="yncfeed-label-pending edit-photo" style="display: inline-flex;align-items: center;justify-content: center;" title="'. _p('pending') .'"><i class="ico ico-clock"></i></span>' : '') .' 
                            </div>';
    }
    if(!empty($this->_aVars['editedFeedPhotos'])) {
        echo "<script type='text/javascript'>\$Behavior.initEditPhotoFeed = function() {
            if($('.js_edited_feed_photo').length){ $('.ynfeed_form_edit').find('.dropzone-component').addClass('dz-started')};
        }</script>";
    }
    unset($this->_aVars['isEditedFeedPhoto']);
    unset($this->_aVars['editedFeedPhotos']);
} 
 ";s:32:"feed.service_feed_get_buildquery";s:124:"$aHideConds = [];
Phpfox::getService('ynfeed')->getHideCondition($aHideConds);
$sMoreWhere .= implode(' ', $aHideConds); 
 ";s:31:"feed.service_process_add__start";s:341:"if($this->_aCallback) {
    $_SESSION['ynfeed_process_add_callback'] = json_encode($this->_aCallback);
} 
 if(Phpfox::isModule('foxfeedspro')){
	if(isset($sType) && 'foxfeedspro' == $sType
		&& isset($iParentUserId) && (int)$iParentUserId > 0
		&& isset($iParentUserId) && (int)$iParentUserId > 0
		){
		$this->_bIsNewLoop = false;
	}
} 
 ";s:34:"feed.service_process_addcomment__1";s:3667:"$aInsert = [
    'module' => $this->_aCallback['module'],
    'type_id' => $this->_aCallback['feed_id'],
    'table_prefix' => $this->_aCallback['table_prefix'],
    'item_id' => $iStatusId
];


Phpfox::getService('ynfeed')->setExtraInfo(array_merge($aInsert, $aVals)); 
 if (!empty($aVals['status_background_id'])) {
    Phpfox::getService('yncstatusbg.process')->addBackgroundForStatus($this->_aCallback['feed_id'], $iStatusId,
        $aVals['status_background_id'], Phpfox::getUserId(), $this->_aCallback['module']);
} 
 if (Phpfox::isAppActive('P_StatusBg') && !empty($aVals['status_background_id'])) {
    Phpfox::getService('pstatusbg.process')->addBackgroundForStatus($this->_aCallback['feed_id'], $iStatusId,
        $aVals['status_background_id'], Phpfox::getUserId(), $this->_aCallback['module']);
} 
 defined('PHPFOX') or exit('NO DICE!');
/**
 * Post to Facebook, Twitter, Linked-In for page only.
 */
if (Phpfox::isModule('socialpublishers'))
{
    if (Phpfox::getUserId())
    {
        $aShareFeedInsert = array(
            'sType' => $this->_aCallback['feed_id'],
            'iItemId' => $iStatusId,
            'bIsCallback' => $this->_bIsCallback,
            'aCallback' => $this->_aCallback,
            'iPrivacy' => (int) $aVals['privacy'],
            'iPrivacyComment' => (int) $aVals['privacy_comment'],
        );
        $iTempUserId = (defined('FEED_FORCE_USER_ID') ? FEED_FORCE_USER_ID : Phpfox::getUserId());
        if ($iTempUserId == Phpfox::getUserId() && $this->_aCallback['module'] == 'pages' && $this->_aCallback['table_prefix'] == 'pages_' && $this->_aCallback['feed_id'] == 'pages_comment')
        {
            $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . Phpfox::getUserId());
            Phpfox::getLib('cache')->save($sIdCache, $aShareFeedInsert);
            $aShareType = 'feed_comment';
            $iUserId = Phpfox::getUserId();
            $aSharePublishersFeed = Phpfox::getLib('database')->select("*")->from(Phpfox::getT('pages_feed_comment'))->where('feed_comment_id = ' . (int) $iStatusId)->execute('getRow');
            $aRow = $this->database()->select('fc.feed_comment_id, u.user_id, u.gender, u.user_name, u.full_name, e.page_id, e.title, pu.vanity_url')
                    ->from(Phpfox::getT('pages_feed_comment'), 'fc')
                    ->join(Phpfox::getT('user'), 'u', 'u.user_id = fc.user_id')
                    ->join(Phpfox::getT('pages'), 'e', 'e.page_id = fc.parent_user_id')
                    ->leftJoin(Phpfox::getT('pages_url'), 'pu', 'pu.page_id = e.page_id')
                    ->where('fc.feed_comment_id = ' . (int) $iStatusId)
                    ->execute('getSlaveRow');

            $aSharePublishersFeed['feed_link'] = Phpfox::getService('pages')->getUrl($aRow['page_id'], $aRow['title'], $aRow['vanity_url']);

            $aSharePublishers['url'] = isset($aSharePublishersFeed['feed_link']) ? $aSharePublishersFeed['feed_link'] : Phpfox::getLib('url')->makeUrl(Phpfox::getUserBy('user_name'));
            $aSharePublishers['item_id'] = isset($aSharePublishersFeed['feed_comment_id']) ? $aSharePublishersFeed['feed_comment_id'] : 0;
            $aSharePublishers['text'] = isset($aSharePublishersFeed['content']) ? $aSharePublishersFeed['content'] : "";
            $aSharePublishers['content'] = isset($aSharePublishersFeed['content']) ? $aSharePublishersFeed['content'] : "";
            $aSharePublishers['title'] = isset($aSharePublishersFeed['content']) ? $aSharePublishersFeed['content'] : '';
            
            Phpfox::getService('socialpublishers')->showPublisher($aShareType, $iUserId, $aSharePublishers, 3);
        }
    }
} 
 ";s:27:"feed.template_block_entry_2";s:17641:"Phpfox_Template::instance()->getTemplate('ynfeed.block.link'); 
 if(!empty($this->_aVars['aFeed'])) {
    $aFeed = $this->_aVars['aFeed'];
    $noShowReport = ['user_status', 'friend', 'poke'];
    $aParts = explode('_', $aFeed['type_id']);
    if(!in_array($aFeed['type_id'], $noShowReport) && Phpfox::hasCallback($aParts[0],'getReportRedirect' . (isset($aParts[1]) ? ucfirst($aParts[1]) : '')) && $aFeed['user_id'] != Phpfox::getUserId() && (!isset($this->_aVars['sFeedType']) || isset($aFeed['feed_view_comment'])) && !isset($aFeed['report_module']))
    {
        echo "<li><a href=\"#?call=report.add&amp;height=100&amp;width=400&amp;type=". $aFeed['type_id']. "&amp;id=" . $aFeed['item_id'] ."\" class=\"inlinePopup activity_feed_report\" title=\"". _p('report'). "\">
				<span class=\"ico ico-warning-o\"></span>
				". _p('report'). "</a>
		</li>";
    }

    $showEdit = ['link', 'photo', 'v'];
    if(in_array($aFeed['type_id'], $showEdit) && (!isset($aFeed['is_view_item']) || isset($aFeed['feed_view_comment']))) {
        $canEdit = false;
        $module = '';
        $itemId = '';
        $feedCallback = $this->_aVars['aFeedCallback'];
        $feedType = $aFeed['type_id'];
        switch ($feedType) {
            case 'link': {
                $item = Phpfox::getService('link')->getLinkById($aFeed['item_id']);
                break;
            }
            case 'photo': {
                $item = Phpfox::getService('photo')->getPhotoItem($aFeed['item_id']);
                break;
            }
            case 'v': {
                $item = Phpfox::getService('v.video')->getForEdit($aFeed['item_id']);
                break;
            }
        }

        if(!empty($feedCallback['module']) && !empty($feedCallback['item_id'])) {
            $module = $feedCallback['module'];
            $itemId = $feedCallback['item_id'];
            if(in_array($module, ['pages', 'groups']) && !empty($item) && ($item['module_id'] == $module) && (defined('PHPFOX_IS_PAGES_VIEW') && defined('PHPFOX_PAGES_ITEM_TYPE') && PHPFOX_PAGES_ITEM_TYPE === $module)) {
                $isAdmin = Phpfox::getService($module)->isAdmin($aFeed['parent_user_id']);
                $canEdit = ($aFeed['user_id'] == Phpfox::getUserId()) || $isAdmin;
            } else {
                $canEdit = (Phpfox::getUserParam('feed.can_edit_own_user_status') && $aFeed['user_id'] == Phpfox::getUserId()) || Phpfox::getUserParam('feed.can_edit_other_user_status');
            }
        } else {
            if((in_array($feedType, ['link', 'photo'])  && empty($item['module_id'])) || ($feedType == 'v' && in_array($item['module_id'], ['user', 'video']))) {
                $canEdit = (Phpfox::getUserParam('feed.can_edit_own_user_status') && $aFeed['user_id'] == Phpfox::getUserId()) || Phpfox::getUserParam('feed.can_edit_other_user_status');
            }
        }

        if($canEdit) {
            echo "<li class=\"\"><a href=\"#\" class=\"\" onclick=\"tb_show('" ._p('edit_your_post')."', $.ajaxBox('feed.editUserStatus', 'height=400&amp;width=600&amp;id=". $aFeed['feed_id'] ."&amp;module=". $module ."&amp;item_id=". $itemId ."')); return false;\">
			<span class=\"ico ico-pencilline-o\"></span>". _p('edit') ."</a></li>";
        }
    }
}

if(Phpfox::getParam('feed.enable_hide_feed', 1)) {
    Phpfox_Template::instance()->getTemplate('feed.block.link-hide');
} 
 if (Phpfox::getParam('core.site_wide_ajax_browsing') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
    ?>

    <?php
    $sModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();
    
    $iItemId = Phpfox::getService('foxfavorite')->getItemId($sModule);
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);

    if ($bIsViewItem && $bIsAvailModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
        switch ($sModule)
        {
            case 'pages':
                break;
            case 'advancedmarketplace':
                break;
            case 'advancedphoto':
            case 'photo':
                $bIsTheater = phpfox::getLib('request')->get('theater');
                if ($bIsTheater)
                {
                    break;
                }
            case 'contest':
                break;
            case 'coupon':
                break;
            case 'event':
                break;
            case 'fevent':
                break;
            case 'foxfeedspro':
                break;
            case 'jobposting':
                break;
            case 'karaoke':
                break;
            case 'music':
                if ($sController == 'view-album')
                {
                    break;
                }
            case 'musicsharing':
                break;
            case 'resume':
                break;
            case 'videochannel':
                break;
            default: //for modules use theme_template_body__end
                ?>
                <div id="yn_section_menu"  style="display:none;">
                    <ul>
                        <li  class="yn_page_favorite">
                            <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) {?> style="display:none;"<?php } ?>>
                                <img class="v_middle" src="<?php echo $favor_img; ?>" style="max-width:19px; max-left:19px;" />
                                <?php echo _p('foxfavorite.favorite'); ?>
                            </a>
                        </li>
                    </ul>
                    <ul>
                        <li  class="yn_page_unfavorite">
                            <a class="unfavor" title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>"<?php if (!$bIsAlreadyFavorite){?> style="display:none;"<?php } ?>>
                                <img class="v_middle" src="<?php echo $unfavor_img; ?>" style="max-width:19px; max-left:19px;" />
                                <?php echo _p('foxfavorite.unfavorite'); ?>
                            </a>
                        </li>
                    </ul>
                </div>

                <script type="text/javascript" language="javascript">
                    $Behavior.onCreateFavoriteButton = function() {                            
                        if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
                        {
                            $bt_favor = '<div id="section_menu">' + $('#yn_section_menu').first().html() + '</div>';
                            $('#breadcrumb_holder').append($bt_favor); //default theme
                            $('.main_breadcrumb_holder').append($bt_favor); //cosmic theme
                            $('#section_menu').show();
                        }
                        else
                        {                                
                            $bt_favor = $('.yn_page_favorite').first();
                            $bt_unfavor = $('.yn_page_unfavorite').first();
                            if($('#section_menu').find('ul').size() == 0)
                            {                
                                $('#section_menu').prepend("<ul></ul>");
                            }
                            if($('#section_menu').find('.yn_page_favorite').size() == 0)
                            {                                                      
                                $('#section_menu').find('ul').prepend($bt_favor);                                    
                            }
                            if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
                            {                                                      
                                $('#section_menu').find('ul').prepend($bt_unfavor);                                    
                            }                                
                            $('#section_menu').show();
                        }   
                        $Behavior.inlinePopup();                                                
                    };                       
                </script>
                <?php
                break;
        }
    }
} 
 if (Phpfox::isModule('suggestion') && Phpfox::isUser()) {
    /* not support pages_comment */
    if ((isset($this->_aVars['aFeed']['type_id']) && $this->_aVars['aFeed']['type_id'] != 'pages_comment') || !isset($this->_aVars['aFeed']['type_id'])) {
        if (isset($this->_aVars['aFeed']['type_id'])) {
            $sModule = $this->_aVars['aFeed']['type_id'];
        } else {
            $sModule = $this->_aVars['aFeed']['like_type_id'];
            $this->_aVars['aFeed']['type_id'] = '';
        }

        $aModule = explode("_", $sModule);


        if (!Phpfox::getService('suggestion')->isNotificationMessage($sModule) && Phpfox::getService('suggestion')->isSupportModule($aModule[0]) && Phpfox::getUserParam('suggestion.enable_friend_suggestion')) {

            $iId = rand(0, 10000000);
            $iFeedId = $this->_aVars['aFeed']['feed_id'];

            if (isset($this->_aVars['aFeed']['type_id']) && $this->_aVars['aFeed']['type_id'] != 'event' && $this->_aVars['aFeed']['type_id'] != 'fevent' && $this->_aVars['aFeed']['type_id'] != 'forum' && $this->_aVars['aFeed']['type_id'] != 'forum_reply')
                (!isset($this->_aVars['aFeed']['comment_type_id']) ? $this->_aVars['aFeed']['comment_type_id'] = 0 : true);
            if (isset($this->_aVars['aFeed']['type_id']) && $this->_aVars['aFeed']['type_id'] == 'blog') {
                if (isset($this->_aVars['aFeed']['blog_id']) && $this->_aVars['aFeed']['blog_id'] > 0)
                    $this->_aVars['aFeed']['item_id'] = $this->_aVars['aFeed']['blog_id'];
            }
            $aModule = explode("_", $sModule);
            $iItemId = (int)$this->_aVars['aFeed']['item_id'];
            $sLinkCallback = $this->_aVars['aFeed']['feed_link'];
            if (!isset($this->_aVars['aFeed']['feed_title'])) $this->_aVars['aFeed']['feed_title'] = '';
            $sTitle = urlencode($this->_aVars['aFeed']['feed_title'] == '' ? $this->_aVars['aFeed']['type_id'] : $this->_aVars['aFeed']['feed_title']);


            /* fix photo title for photo module */
            if ($sModule == 'photo' || $sModule == 'advancedphoto') {
                $aPhotoDetail = Phpfox::getService('suggestion')->getPhotoDetail($this->_aVars['aFeed']['item_id']);
                $sTitle = $aPhotoDetail['title'];
            }
            if ($sModule == 'foxfeedspro') {
                if (phpfox::isModule('foxfeedspro')) {
                    $aFoxFeedsProDetail = Phpfox::getService('suggestion')->getFoxFeedsProDetail($this->_aVars['aFeed']['item_id']);
                    if (isset($aFoxFeedsProDetail['item_alias']) && $aFoxFeedsProDetail['item_alias'] != "")
                        $sTitle = urlencode($aFoxFeedsProDetail['item_alias']);
                }
            }

            $sPrefix = (isset($this->_aVars['aFeed']['feed_display']) ? 'pages_' : '');
            $iUserId = $this->_aVars['aFeed']['user_id'];

            if ($sModule == 'contest') {
                if (phpfox::isModule('contest')) {
                    $aContestDetail = Phpfox::getService('suggestion')->getContestDetail($this->_aVars['aFeed']['item_id']);
                    if (isset($aContestDetail['contest_name']) && $aContestDetail['contest_name'] != "")
                        $sTitle = urlencode($aContestDetail['contest_name']);
                }
            }

            if ($sModule == 'fundraising') {
                if (phpfox::isModule('fundraising')) {
                    $aFundRaisingDetail = Phpfox::getService('suggestion')->getFundRaisingDetail($this->_aVars['aFeed']['item_id']);
                    if (isset($aFundRaisingDetail['title']) && $aFundRaisingDetail['title'] != "")
                        $sTitle = urlencode($aFundRaisingDetail['title']);
                }
            }

            if ($sModule == 'coupon') {
                if (phpfox::isModule('coupon')) {
                    $aDetail = Phpfox::getService('suggestion')->getCouponDetail($this->_aVars['aFeed']['item_id']);
                    if (isset($aDetail['title']) && $aDetail['title'] != "")
                        $sTitle = urlencode($aDetail['title']);
                }
            }

            if ($sModule[0] == 'jobposting') {
                if (phpfox::isModule('jobposting')) {
                    $aDetail = Phpfox::getService('suggestion')->getJobDetail($this->_aVars['aFeed']['item_id']);
                    if (isset($aDetail['title']) && $aDetail['title'] != "")
                        $sTitle = urlencode($aDetail['title']);
                }
            }

            if ($sModule == 'petition') {
                if (phpfox::isModule('petition')) {
                    $aDetail = Phpfox::getService('suggestion')->getPetitionDetail($this->_aVars['aFeed']['item_id']);
                    if (isset($aDetail['title']) && $aDetail['title'] != "")
                        $sTitle = urlencode($aDetail['title']);
                }
            }
            if ($sModule == 'ultimatevideo')
            {
                if(phpfox::isModule('gettingstarted'))
                {
                    if($sModule[1] ==  'video')
                    {
                        $aDetail = Phpfox::getService('suggestion')->getUltimateVideos_videoDetail($this->_aVars['aFeed']['item_id']);
                    }
                    else
                    {
                        $aDetail = Phpfox::getService('suggestion')->getUltimateVideos_playlistDetail($this->_aVars['aFeed']['item_id']);
                    }
                    if(isset($aDetail['title']) && $aDetail['title']!="")
                        $sTitle = urlencode($aDetail['title']);
                }
            }

            if ($sModule == 'ynblog')
            {
                if(phpfox::isModule('gettingstarted'))
                {
                    $aDetail = Phpfox::getService('suggestion')->getYnblog_BlogDetail($this->_aVars['aFeed']['item_id']);
                    if(isset($aDetail['title']) && $aDetail['title']!="")
                        $sTitle = urlencode($aDetail['title']);
                }
            }

            if ($sModule == 'ynsocialstore')
            {
                if(phpfox::isModule('gettingstarted'))
                {
                    if($sModule[1] ==  'store')
                    {
                        $aDetail = Phpfox::getService('suggestion')->getYnsocialstore_StoreDetail($this->_aVars['aFeed']['item_id']);
                    }
                    else
                    {
                        $aDetail = Phpfox::getService('suggestion')->getYnsocialstore_ProductDetail($this->_aVars['aFeed']['item_id']);
                    }
                    if(isset($aDetail['title']) && $aDetail['title']!="")
                        $sTitle = urlencode($aDetail['title']);
                }
            }

            if ($sModule == 'gettingstarted')
            {
                if(phpfox::isModule('gettingstarted'))
                {
                    $aDetail = Phpfox::getService('suggestion')->getKnowledgeBaseDetail($this->_aVars['aFeed']['item_id']);
                    if (isset($aDetail['title']) && $aDetail['title'] != "")
                        $sTitle = urlencode($aDetail['title']);
                }
            }
            $sTitle = base64_encode($sTitle);
            ?>
            <?php if (Phpfox::getUserParam('suggestion.enable_friend_suggestion')) { ?>
                <li><a

                        onclick='showpopup<?php echo $iId; ?>();return false;'
                        id="suggestion_link_<?php echo $iId; ?>" href="/">
                        <?php echo _p('suggestion.suggest_to_friends_2'); ?>
                    </a></li>
            <?php } ?>
            <script language="javascript">
                $Behavior.loadClick<?php echo $iId; ?> = function () {
                };

                function showpopup<?php echo $iId; ?>() {
                    <?php if ($aModule[0] != 'friend') { ?>
                    suggestion_and_recommendation_tb_show("...", $.ajaxBox('suggestion.friends', 'iFriendId='+<?php echo $iItemId; ?>+
                    '&sSuggestionType=suggestion' + '&sModule=suggestion_<?php echo $aModule[0]; ?>&sLinkCallback=<?php echo $sLinkCallback; ?>&sTitle=<?php echo $sTitle; ?>&sPrefix=<?php echo $sPrefix; ?>&sExpectUserId=<?php echo $iUserId; ?>'
                ))
                    ;
                    <?php } ?>
                }

            </script>
            <?php
        }
    }
}/* end chck module */ 
 ";s:27:"like.service_process_add__1";s:1994:"$aFeed = db()->select('*')
    ->from(Phpfox::getT($sTablePrefix . 'feed'), 'feed')
    ->where(array(
        'type_id' => $sType,
        'item_id' => $iItemId
    ))
    ->execute('getSlaveRow');
if(empty($aFeed))
    return;

$aFeedCallback = [];
if ($aVals['table_prefix'] != '') {
    $aFeedCallback['module'] = substr($sTablePrefix, 0, strlen($sTablePrefix) - 1);
    $aFeedCallback['table_prefix'] = $sTablePrefix;
    $aFeedCallback['item_id'] = $iItemId;
}
$aOldMap = db()->select('*')
    ->from(Phpfox::getT('ynfeed_notification_map'))
    ->where("item_id = " . $aFeed['feed_id'] . " AND callback = '" . json_encode($aFeedCallback) . "'")
    ->execute("getSlaveRow");

if (isset($aOldMap['map_id'])) {
    $iMapId = $aOldMap['map_id'];
} else {
    // Add notification map
    $iMapId = db()->insert(Phpfox::getT('ynfeed_notification_map'), array(
        'item_id' => $aFeed['feed_id'],
        'callback' => json_encode($aFeedCallback)
    ));
}

// Get tags, mentions
$aMaps = db()->select('*')
    ->from(Phpfox::getT('ynfeed_feed_map'), 'fm')
    ->where("fm.item_id = " . $iItemId . " AND fm.item_type = '" . $sType . "'")
    ->execute("getSlaveRows");
$aReducedMaps =
    array_map(function ($e) {
        return [
            'item_id' => $e['item_id'],
            'type_id' => $e['type_id'],
            'parent_user_id' => $e['parent_user_id'],
            'parent_user_type' => $e['parent_user_type']
        ];
    }, $aMaps);

foreach ($aMaps as $key => $aMap) {
    if ($aMap['type_id'] == 'mention') {
        if (array_search([
                'item_id' => $aMap['item_id'],
                'type_id' => 'tag',
                'parent_user_id' => $aMap['parent_user_id'],
                'parent_user_type' => $aMap['parent_user_type']
            ], $aReducedMaps) !== false
        )
            continue;
    }
    Phpfox::getService('notification.process')->add('ynfeed_like_' . $aMap['type_id'], $iMapId, $aMap['parent_user_id'], Phpfox::getUserId());
} 
 ";s:38:"link.component_ajax_addviastatusupdate";s:921:"/* Notify tagged users */

$iLinkId = db()->select('item_id')->from(Phpfox::getT((isset($aCallback['table_prefix']) ? $aCallback['table_prefix'] : '') . 'feed'))->where('feed_id = ' . $iId)->execute('getField');
if($iLinkId) {
    $aInsert = [
        'module' => (isset($aCallback['module']) ? $aCallback['module'] : 'feed'),
        'type_id' => 'link',
        'table_prefix' => (isset($aCallback['table_prefix']) ? $aCallback['table_prefix'] : ''),
        'item_id' => $iLinkId
    ];
//    d($aInsert);die;
    Phpfox::getService('ynfeed')->setExtraInfo(array_merge($aInsert, $aVals));
} 
 if(phpfox::isModule('socialpublishers'))
{
    $sUrl = $aVals['link']['url'];
    $sType = 'link';
    $iUserId = phpfox::getUserId();
    $sMessage = $aVals['status_info'];
    $aVals['url'] = $sUrl;
    $aVals['content'] = $sMessage;
    phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVals);
} 
 ";s:25:"module_getcomponent_start";s:562:"if($sClass == 'feed.display')
    $sClass = 'ynfeed.display'; 
 if ($sClass == 'like.link') {
    $sClass = 'yncreaction.reaction-link';
    if (PHPFOX_IS_AJAX) {
        //ync-reaction get list reactions
        $aReactions = Phpfox::getService('yncreaction')->getReactions();
        $aDefaultLike = Phpfox::getService('yncreaction')->getDefaultLike();
        if ($aReactions) {
            Phpfox_Template::instance()->assign([
                'aYncReactions' => $aReactions,
                'aYncLike' => $aDefaultLike
            ]);
        }
    }
} 
 ";s:32:"notification.service_process_add";s:2898:"if(strpos($sType, '_like') != false) {
    $sItemType = str_replace('_like', '', $sType);
} else {
    $sItemType = str_replace('comment_', '', $sType);
}
if(substr($sItemType, -5) == '_feed') {
    if((strpos($sType, 'comment_') != false) || (strpos($sType, '_like') != false)) {
        $sItemType = str_replace('_feed', '', $sType);
    }
    elseif(db()->tableExists(Phpfox::getT($sItemType))) {
        $aActualItem = db()->select('*')->from(Phpfox::getT($sItemType))->where('feed_id = ' . $iItemId)->execute('getSlaveRow');
        if($aActualItem) {
            $iItemId = $aActualItem['item_id'];
            $sItemType = $aActualItem['type_id'];
        }
    }

}

$aTurnoffs = db()->select('*')->from(Phpfox::getT('ynfeed_turnoff_notification'))
    ->where("item_id = " . $iItemId . " AND user_id = " . $iOwnerUserId . " AND type_id = '" . $sItemType . "'")
    ->execute('getSlaveRows');
if(count($aTurnoffs))
    $bDoNotInsert = true;

if(in_array($sType, array('ynfeed_comment_mention', 'ynfeed_comment_tag', 'ynfeed_like_mention', 'ynfeed_like_tag'))) {
    // get notification map
    $aNotificationMap = db()->select('*')->from(Phpfox::getT('ynfeed_notification_map'))->where('map_id = ' . $iItemId)->execute('getSlaveRow');
    if($aNotificationMap && isset($aNotificationMap['item_id'])) {
        // item_id is feed id
        $aCallback = json_decode($aNotificationMap['callback'], true);
        $aFeed = Phpfox::getService('ynfeed')->callback($aCallback)->get(null, $aNotificationMap['item_id']);
        if(isset($aFeed[0])) {
            $aFeed = $aFeed[0];
            // check if it has been turned off for notifications
            $aTurnoffs = db()->select('*')->from(Phpfox::getT('ynfeed_turnoff_notification'))
                ->where("item_id = " . $aFeed['item_id'] . " AND user_id = " . $iOwnerUserId . " AND type_id = '" . $aFeed['type_id'] . "'")
                ->execute('getSlaveRows');
            if(count($aTurnoffs))
                $bDoNotInsert = true;
        }
    }
}

if($sType == 'ynfeed_tag' || $sType == 'ynfeed_mention') {
    if(db()->select('*')->from(Phpfox::getT('user_notification'))->where([
        'user_id' => $iOwnerUserId,
        'user_notification' => 'ynfeed.tagged_in_post'
    ])->execute('getSlaveRow'))
        $bDoNotInsert = true;
}

if(in_array($sType, ['feed_comment_profile', 'photo_feed_profile', 'v_newItem_wall'])) {
    if(db()->select('*')->from(Phpfox::getT('user_notification'))->where([
        'user_id' => $iOwnerUserId,
        'user_notification' => 'ynfeed.post_on_wall'
    ])->execute('getSlaveRow'))
        $bDoNotInsert = true;
} 
 if (Phpfox::isModule('notification') 
	&& isset($sType) == true
	&& 'fevent_repeattonormalwarning' == $sType
	&& isset($iItemId) == true
	&& -1 == $iItemId
	&& isset($iOwnerUserId) == true
	&& 'getUserId' == $iOwnerUserId
	)
{
	$iOwnerUserId = Phpfox::getUserId();
} 
 ";s:33:"photo.component_ajax_process_done";s:1432:" 
 if(phpfox::isModule('socialpublishers') && !Phpfox::getUserParam('photo.photo_must_be_approved'))
{
    $aFeed = Phpfox::getService('feed')->get(Phpfox::getUserId(), $iFeedId);
    $sUrl = Phpfox::permalink('photo', $aPhoto['photo_id'], $aPhoto['title']);
    $sType = 'photo';
    $iUserId = phpfox::getUserId();
    $sMessage = $aFeed[0]['feed_status'];
    $aVals['url'] = $sUrl;
    $aVals['content'] = $sMessage;
    $aVals['title'] = $aPhoto['title'];
    $bIsFrame = true;
    phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVals,$bIsFrame);
} 
 if(Phpfox::getUserParam('suggestion.enable_friend_suggestion') && Phpfox::getUserParam('suggestion.enable_content_suggestion_popup') && Phpfox::getService('suggestion')->isAllowContentSuggestionPopup()) { 
	$iItemId = $aImages[0]['photo_id'];
	$aPhoto = Phpfox::getService("photo")->getCoverPhoto($iItemId);
	$sTitle = base64_encode(urlencode($aPhoto['title']));
	$sExpectUserId = Phpfox::getUserId();
	$sLinkCallback = Phpfox::getParam('core.path').'photo/'.$aPhoto['photo_id'];

	echo "window.parent.$(document).ready(function(){setTimeout(function(){window.parent.suggestion_and_recommendation_tb_show('...', window.parent.$.ajaxBox('suggestion.friends','iFriendId=".$iItemId."&sSuggestionType=suggestion&sModule=suggestion_photo&sLinkCallback=".$sLinkCallback."&sTitle=".$sTitle."&sPrefix=&sExpectUserId=".$sExpectUserId."'));}, 500);});";
 } 
 ";s:62:"photo.component_controller_frame_drag_drop_process_photos_done";s:205:"if(!empty($aVals['feed_id']) && Phpfox::getUserParam('photo.photo_must_be_approved') && !empty($aImages)) {
    storage()->set('ynfeed_pending_photo_' . $aImages['photo_id'], (int)$aVals['feed_id']);
} 
 ";s:32:"photo.service_process_approve__1";s:5069:"$storagedFeedId = storage()->get('ynfeed_pending_photo_' . $aPhoto['photo_id']);
if(!empty($storagedFeedId->value)) {
    $tempFeed = Phpfox::getService('feed')->callback($aCallback)->getFeed($iFeedId);
    if($tempFeed['item_id'] == $aPhoto['photo_id']) {
        //Delete new feed that photo is inserted above
        if(Phpfox::getService('feed.process')->callback($aCallback)->deleteFeed($iFeedId, $aPhoto['module_id'], $aPhoto['group_id'])) {
            if(!empty($aCallback)) {
                $checkInFeed = db()->select('feed_id')
                    ->from(Phpfox::getT('feed'))
                    ->where('type_id = "photo" AND item_id = ' . (int)$aPhoto['photo_id'] . ' AND user_id = ' . (int)$aPhoto['user_id'])
                    ->execute('getSlaveField');
                if(!empty($checkInFeed)) {
                    Phpfox::getService('feed.process')->callback(null)->deleteFeed($checkInFeed);
                }
            }
        }
        if(!empty($_SESSION['approve_photo_feed_' . $aPhoto['user_id'] . '_' . $aPhoto['album_id'] . '_' . $iTimeStamp])) {
            unset($_SESSION['approve_photo_feed_' . $aPhoto['user_id'] . '_' . $aPhoto['album_id'] . '_' . $iTimeStamp]);
        }
    }
    else {
        db()->delete(Phpfox::getT('photo_feed'), ['feed_id' => $iFeedId, 'photo_id' => $aPhoto['photo_id']]);
    }

    //Process photo to right feed id
    $feed = Phpfox::getService('feed')->callback($aCallback)->getFeed($storagedFeedId->value);
    if(!empty($feed) && $feed['type_id'] == 'photo') {
        $keepLastPhoto = storage()->get('ynfeed_updated_photo_feed_keep_last_photo_' . $storagedFeedId->value);
        $itemPhoto = db()->select('p.user_id, p.type_id, p.album_id, p.group_id, pi.description, p.photo_id')
            ->from(Phpfox::getT('photo'), 'p')
            ->join(Phpfox::getT('photo_info'), 'pi', 'pi.photo_id = p.photo_id')
            ->where('p.photo_id = ' . ($feed['item_id'] ? (int)$feed['item_id'] : $keepLastPhoto->value))
            ->execute('getSlaveRow');

        if(!empty($itemPhoto)) {
            db()->update(Phpfox::getT('photo'), ['album_id' => (int)$itemPhoto['album_id'], 'type_id' => $itemPhoto['type_id'], 'user_id' => $itemPhoto['user_id']], 'photo_id = ' . (int)$aPhoto['photo_id'] . '');
            if(db()->update(Phpfox::getT((isset($aCallback['table_prefix']) ? $aCallback['table_prefix'] : '') . 'feed'), ['item_id' => (int)$aPhoto['photo_id']], 'feed_id = '. (int)$storagedFeedId->value)) {
                if(!empty($aCallback['module'])) {
                    $check = db()->select('feed_id')
                        ->from(Phpfox::getT('feed'))
                        ->where('type_id = "photo" AND item_id = ' . (int)$feed['item_id'] . ' AND user_id = ' . (int)$feed['user_id'])
                        ->execute('getSlaveField');
                    if($check && (db()->update(Phpfox::getT('feed'), ['item_id' => (int)$aPhoto['photo_id']], 'feed_id = ' . (int)$check))) {
                        \Phpfox_Cache::instance()->remove('ynfeed_extra_' . $check . '_' . Phpfox::getUserId());
                        \Phpfox_Cache::instance()->remove('ynfeed_extra_' . $storagedFeedId->value . '_' . $itemPhoto['user_id']);
                    }
                }
            }

            db()->update(Phpfox::getT('photo'), ['time_stamp' => $feed['time_stamp']], 'photo_id = '. (int)$aPhoto['photo_id']);

            if($keepLastPhoto) {
                Phpfox::getService('photo.process')->delete($itemPhoto['photo_id']);
                storage()->del('ynfeed_updated_photo_feed_keep_last_photo_' . $storagedFeedId->value);
            }
            else {
                db()->update(Phpfox::getT('photo'), array('is_cover' => 0), 'album_id=' . (int)$itemPhoto['album_id']);
                db()->insert(Phpfox::getT('photo_feed'), [
                    'feed_id' => $storagedFeedId->value,
                    'photo_id' => $itemPhoto['photo_id'],
                    'feed_table' => (!empty($aCallback['table_prefix']) ? $aCallback['table_prefix'] : '') . 'feed'
                ]);
            }

            db()->update(Phpfox::getT('photo'), ['is_cover' => 1], 'photo_id = '. (int)$aPhoto['photo_id']);
            db()->update(Phpfox::getT('photo_info'), ['description' => $itemPhoto['description']],
                'photo_id = ' . (int)$aPhoto['photo_id']);
            db()->updateCount('photo', 'album_id = '. (int)$itemPhoto['album_id'], 'total_photo', 'photo_album', 'album_id = '. (int)$itemPhoto['album_id']);
            \Phpfox_Cache::instance()->remove('ynfeed_extra_' . $storagedFeedId->value . '_' . Phpfox::getUserId());
            if($feed['user_id'] != Phpfox::getUserId()) {
                \Phpfox_Cache::instance()->remove('ynfeed_extra_' . $storagedFeedId->value . '_' . $feed['user_id']);
            }
            if($keepLastPhoto) {
                storage()->del('ynfeed_updated_photo_feed_keep_last_photo_' . $storagedFeedId->value);
            }
        }
    }
    storage()->del('ynfeed_pending_photo_' . $aPhoto['photo_id']);
} 
 ";s:3:"run";s:40:"$oTpl->setPhrase(['manage_hidden']); 
 ";s:50:"saveditems.service_saveditems_process_save__action";s:715:"$coreFeedId = db()->select('feed_id')
    ->from(Phpfox::getT('feed'))
    ->where('user_id = ' . (int)$userId . ' AND type_id = "' . ($moduleId . (!empty($section) ? ('_' . $section) : '')) . '" AND item_id = ' . (int)$params['item_id'])
    ->execute('getSlaveField');
if(!empty($coreFeedId)) {
    if($isSave) {
        $params = [
            'user_id' => (int)$userId,
            'feed_id' => $coreFeedId,
            'feed_type' => ($moduleId . (!empty($section) ? ('_' . $section) : '')),
            'callback' => null
        ];
        Phpfox::getService('ynfeed.save')->add($params, true);
    }
    else {
        Phpfox::getService('ynfeed.save')->delete($userId, $coreFeedId, null, true);
    }
} 
 ";s:20:"template_gettemplate";s:5692:"if ($sTemplate == 'feed.block.entry') {
    $sTemplate = 'ynfeed.block.entry';
    $aFeedCallback = [];
    if (isset($this->_aVars['aFeedCallback'])) {
        $aFeedCallback = $this->_aVars['aFeedCallback'];
        $aFeedCallback['table_prefix'] = (isset($aFeedCallback['table_prefix']) ? $aFeedCallback['table_prefix'] : $aFeedCallback['module'] . '_');
        if ($aFeedCallback['table_prefix'] == 'groups_')
            $aFeedCallback['table_prefix'] = 'pages_';
    }
    Phpfox::getService('ynfeed')->callback($aFeedCallback)->getExtraInfo($this->_aVars['aFeed']);

} else if ($sTemplate == 'feed.block.share') {
    $sTemplate = 'ynfeed.block.share.share';
    if (!empty($this->_aVars['iFeedId'])) {
        $this->_aVars['aFeed'] = Phpfox::getService('ynfeed')->createPreviewFeed($this->_aVars);
    }

    $this->_aVars['aEmojis'] = Phpfox::getService('ynfeed.emoticon')->getAll();
    $this->_aVars['corePath'] = Phpfox::getParam('core.path_actual') . 'PF.Site/Apps/ync-feed';

    $bLoadCheckIn = false;
    if (!defined('PHPFOX_IS_PAGES_VIEW') && Phpfox::getParam('feed.enable_check_in') && (Phpfox::getParam('core.ip_infodb_api_key') || Phpfox::getParam('core.google_api_key'))) {
        $bLoadCheckIn = true;
    }
    $this->_aVars['aFeedStatusLinks'] = Phpfox::getService('ynfeed')->getShareLinks();
    $this->_aVars['bLoadCheckIn'] = $bLoadCheckIn;

} else if ($sTemplate == 'notification.controller.panel') {
    // use quick match of post type that contain comment and status for now, may have to break to every case if emoticons are parsed incorrectly (item title for example)
    array_walk($this->_aVars['aNotifications'], function (&$aNotifcation) {
        if (strpos($aNotifcation['type_id'], 'comment') !== false || strpos($aNotifcation['type_id'], 'status') !== false) {
            $aNotifcation['message'] = ynfeed_parse_emojis($aNotifcation['message']);
        }
    });

} else if ($sTemplate == 'notification.controller.index') {
    array_walk($this->_aVars['aNotifications'], function (&$aNotifcationOfDay) {
        array_walk($aNotifcationOfDay, function (&$aNotifcation) {
            if (strpos($aNotifcation['type_id'], 'comment') !== false || strpos($aNotifcation['type_id'], 'status') !== false) {
                $aNotifcation['message'] = ynfeed_parse_emojis($aNotifcation['message']);
            }
        });
    });
} else if($sTemplate == 'link.block.preview') {
    $sTemplate = 'ynfeed.block.link-preview';
} 
 if ($sTemplate == 'core.block.template-menusub') {
    if (!empty($this->_aVars['aFilterMenusIcons']) && is_array($this->_aVars['aFilterMenusIcons'])) {
        $this->_aVars['aFilterMenusIcons']['Advanced Events'] = 'ico ico-calendar-check-o';
    }
} 
 if ($sTemplate == 'core.block.template-menusub') {
    if (!empty($this->_aVars['aFilterMenusIcons']) && is_array($this->_aVars['aFilterMenusIcons'])) {
        $this->_aVars['aFilterMenusIcons'][_p('adv_listings')] = 'ico ico-store-o';
    }
} 
 if ($sTemplate == 'user.block.rows_wide') {
    $aUser = Phpfox::getLib('template')->getVar('aUser');
    $aLocation = [];
    if (!empty($aUser)) {
        if (!empty($aUser['country_iso']) && $sCountry = Phpfox::getService('core.country')->getCountry($aUser['country_iso'], 'country')) {
            $aLocation[] = $sCountry;
        }

        if (!empty($aUser['country_child_id']) && $sState = Phpfox::getService('core.country')->getChild($aUser['country_child_id'])) {
            $aLocation[] = $sState;
        }

        if (count($aLocation) < 2 && !empty($aUser['city_location'])) {
            $aLocation[] = $aUser['city_location'];
        }

        if (Phpfox::isUser()) {
            $aUser['is_blocked'] = Phpfox::getService('user.block')->isBlocked($aUser['user_id'], Phpfox::getUserId());
        }

        if (!isset($aUser['is_featured'])) {
            $aUser['is_featured'] = Phpfox::getService('user')->isFeatured($aUser['user_id']);
        }

        if (!empty($aLocation)) {
            $aLocation = array_reverse($aLocation);
            $aUser['location_string'] = implode(', ', $aLocation);
        }

        Phpfox::getLib('template')->assign('aUser', $aUser);
    }
} 
 if ($sTemplate == 'core.block.template-menusub') {
    if (!empty($this->_aVars['aFilterMenusIcons']) && is_array($this->_aVars['aFilterMenusIcons'])) {
        $this->_aVars['aFilterMenusIcons']['Auction'] = 'ico ico-hammer';
    }
} 
 if ($sTemplate == 'core.block.template-menusub') {
    if (!empty($this->_aVars['aFilterMenusIcons']) && is_array($this->_aVars['aFilterMenusIcons'])) {
        $this->_aVars['aFilterMenusIcons']['Coupons'] = 'ico ico-cart-o';
    }
} 
 if ($sTemplate == 'core.block.template-menusub') {
    if (!empty($this->_aVars['aFilterMenusIcons']) && is_array($this->_aVars['aFilterMenusIcons'])) {
        $this->_aVars['aFilterMenusIcons']['News'] = 'ico ico-newspaper-o';
    }
} 
 if ($sTemplate == 'core.block.template-menusub') {
    if (!empty($this->_aVars['aFilterMenusIcons']) && is_array($this->_aVars['aFilterMenusIcons'])) {
        $this->_aVars['aFilterMenusIcons']['Knowledge Base'] = 'ico ico-info-circle-alt-o';
    }
} 
 if ($sTemplate == 'api.block.gateway.form') {
    $aGatewayData = $this->_aVars['aGatewayData'];
    if (!Phpfox::getParam('socialad.activate_activity_points') && !empty($aGatewayData) && strpos($aGatewayData['item_number'], 'socialad') !== false) {
        $aGateways = $this->_aVars['aGateways'];;
        foreach ($aGateways as $key => $aGateway) {
            if ($aGateway['gateway_id'] == 'activitypoints') {
                unset($aGateways[$key]);
            }
        }
        $this->_aVars['aGateways'] = $aGateways;
    }
} 
 ";s:38:"ultimatevideo.service_process_add__end";s:1846:"$aInsert = [
    'module' => '',
    'type_id' => 'ultimatevideo_video',
    'table_prefix' => '',
    'item_id' => $iVideoId
];

Phpfox::getService('ynfeed')->setExtraInfo(array_merge($aInsert, $aVals)); 
 if(phpfox::isModule('socialpublishers') && !user('ynuv_should_be_approve_before_display_video'))
{
    if(isset($iPageId) && $iPageId)
    {
        $aCallBack = array(
			'module' => 'pages',
			'item_id' => $iPageId,
			'table_prefix' => 'pages_'
		);	
        $aFeed = Phpfox::getService('feed')->callback($aCallBack)->get(Phpfox::getUserId(), $iFeedId);    
    }
    else
    {
        $aFeed = Phpfox::getService('feed')->get(Phpfox::getUserId(), $iFeedId);    
    }
    if(count($aFeed))
    { 
        $sUrl = $aFeed[0]['feed_link'];
        $sType = 'ultimatevideo_video';
        $iUserId = Phpfox::getUserId();
        $sMessage = (isset($aFeed[0]['feed_status']) && !empty($aFeed[0]['feed_status'])) ? $aFeed[0]['feed_status'] : isset($aFeed[0]['feed_title']) ? $aFeed[0]['feed_title'] : "";        
        $aVal['text'] = (isset($aVals['description'])) ? $oFilter->clean($aVals['description']) : "";
        $aVal['url'] = $sUrl;
        $aVal['content'] = $sMessage;
        $aVal['title'] = $aVals['title'];
        $bIsFrame = 3;
        $aShareFeedInsert = array(
	         	'sType' => 'ultimatevideo_video',
	            'iItemId' => $iVideoId,
	            'bIsCallback' => 3,
	            'aCallback' => null,
	            'iPrivacy' => (int) (isset($aVals['privacy']) ? (int) $aVals['privacy'] : 0),
	            'iPrivacyComment' => 0,
        	);
        $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iUserId);
        Phpfox::getLib('cache')->save($sIdCache,$aShareFeedInsert);
        phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVal,$bIsFrame);
    }    
} 
 ";s:37:"user.service_process_add_updatestatus";s:206:"$aInsert = [
    'module' => 'feed',
    'type_id' => 'user_status',
    'table_prefix' => '',
    'item_id' => $iStatusId
];


Phpfox::getService('ynfeed')->setExtraInfo(array_merge($aInsert, $aVals)); 
 ";s:35:"video.service_process_addvideo__end";s:417:"$aInsert = [
    'module' => '',
    'type_id' => 'v',
    'table_prefix' => '',
    'item_id' => $iId
];

/*Retrieve extra info from feed_values*/
if(isset($aVals['feed_values']) && !empty($aVals['feed_values'])) {
    $aModifiedVals = json_decode(json_encode($aVals['feed_values']), true);
} else{
    $aModifiedVals = $aVals;
}
Phpfox::getService('ynfeed')->setExtraInfo(array_merge($aInsert, $aModifiedVals)); 
 ";s:39:"ynfeed.service_feed_set_extra_info__end";s:3010:"if (!empty($aVals['feed_id'])) {
    $userId = Phpfox::getUserId();
    Phpfox::getLib('cache')->remove('ynfeed_extra_' . $aVals['feed_id'] . '_' . $userId);
}

// Add notification map
$aFeedCallback = [
    'module' => $aInsert['module'],
    'table_prefix' => $aInsert['table_prefix'],
    'item_id' => $aInsert['item_id']
];

if(isset($aVals['feed_id']) && (int) $aVals['feed_id']) {
    $iFeedId = (int) $aVals['feed_id'];
    $aFeed = db()->select('*')->from(Phpfox::getT($aFeedCallback['table_prefix'] . 'feed'), 'feed')
        ->where("feed_id = " . $iFeedId)
        ->execute('getSlaveRow');
} else{
    $aFeed = db()->select('*')->from(Phpfox::getT($aFeedCallback['table_prefix'] . 'feed'), 'feed')
        ->where("item_id = " . $aInsert['item_id'] . " AND type_id = '" . $aVals['type_id'] ."'" . " AND user_id = " . Phpfox::getUserId())
        ->order("feed_id DESC")
        ->execute('getSlaveRow');
    if($aFeed && isset($aFeed['feed_id'])) {
        $iFeedId = (int) $aFeed['feed_id'];
    } else {
        return;
    }
}
$aOldMap = db()->select('*')
    ->from(Phpfox::getT('ynfeed_notification_map'))
    ->where("item_id = " . $iFeedId . " AND callback = '" . json_encode($aFeedCallback) . "'")
    ->execute("getSlaveRow");

if(isset($aOldMap['map_id'])) {
    $iMapId = $aOldMap['map_id'];
} else {
    $iMapId = db()->insert(Phpfox::getT('ynfeed_notification_map'), array(
        'item_id' => $iFeedId,
        'callback' => json_encode($aFeedCallback)
    ));
}


// Get tags, mentions
$aMaps = db()->select('*')
    ->from(Phpfox::getT('ynfeed_feed_map'), 'fm')
    ->where("fm.item_id = " . $aVals['item_id'] . " AND fm.item_type = '" . $aVals['type_id'] . "'")
    ->execute("getSlaveRows");
$aReducedMaps =
    array_map(function($e) {
        return [
            'item_id' => $e['item_id'],
            'type_id' => $e['type_id'],
            'parent_user_id' => $e['parent_user_id'],
            'parent_user_type' => $e['parent_user_type']
        ];
    }, $aMaps);
foreach ($aMaps as $key=>$aMap) {
    if($aMap['type_id'] == 'mention') {
        if(array_search([
                'item_id' => $aMap['item_id'],
                'type_id' => 'tag',
                'parent_user_id' => $aMap['parent_user_id'],
                'parent_user_type' => $aMap['parent_user_type']
            ], $aReducedMaps) !== false)
            continue;
    }

//    if(isset($aFeed['parent_user_id']) && ($aFeed['parent_user_id'] == $aMap['parent_user_id']))
//        continue;
    $aOldNoti = db()->select('*')
        ->from(Phpfox::getT('notification'))
        ->where("type_id = '" . 'ynfeed_' . $aMap['type_id'] . "' AND item_id = " . $iMapId . " AND user_id = " . $aMap['parent_user_id'] . " AND owner_user_id = " . $aMap['user_id'])
        ->execute('getSlaveRow');
    if(!$aOldNoti && ($aMap['parent_user_id'] != $aFeed['user_id']))
        Phpfox::getService('notification.process')->add('ynfeed_' . $aMap['type_id'], $iMapId, $aMap['parent_user_id'], $aMap['user_id']);
} 
 ";s:36:"ynfeed.service_process_addcomment__2";s:207:"$aInsert = [
    'module' => 'feed',
    'type_id' => 'feed_comment',
    'table_prefix' => '',
    'item_id' => $iStatusId
];


Phpfox::getService('ynfeed')->setExtraInfo(array_merge($aInsert, $aVals)); 
 ";s:29:"ynfeed.template_block_entry_2";s:2485:"if(!empty($this->_aVars['aFeed'])) {
    $aFeed = $this->_aVars['aFeed'];
    $showEdit = ['link', 'photo', 'v'];
    if(in_array($aFeed['type_id'], $showEdit)) {
        $canEdit = false;
        $module = '';
        $itemId = '';
        $feedCallback = $this->_aVars['aFeedCallback'];
        $feedType = $aFeed['type_id'];
        switch ($feedType) {
            case 'link': {
                $item = Phpfox::getService('link')->getLinkById($aFeed['item_id']);
                break;
            }
            case 'photo': {
                $item = Phpfox::getService('photo')->getPhotoItem($aFeed['item_id']);
                break;
            }
            case 'v': {
                $item = Phpfox::getService('v.video')->getForEdit($aFeed['item_id']);
                break;
            }
        }

        if(!empty($feedCallback['module']) && !empty($feedCallback['item_id'])) {
            $module = $feedCallback['module'];
            $itemId = $feedCallback['item_id'];
            if(in_array($module, ['pages', 'groups']) && !empty($item) && ($item['module_id'] == $module)) {
                $appId = $module == 'pages' ? 'Core_Pages' : 'PHPfox_Groups';
                if(Phpfox::isAppActive($appId)) {
                    $isAdmin = Phpfox::getService($module)->isAdmin($aFeed['parent_user_id']);
                    $canEdit = ($aFeed['user_id'] == Phpfox::getUserId()) || $isAdmin;
                }
            } else {
                $canEdit = true;
            }
        } else {
            if((in_array($feedType, ['link', 'photo'])  && empty($item['module_id'])) || ($feedType == 'v' && in_array($item['module_id'], ['user', 'video']))) {
                $canEdit = (Phpfox::getUserParam('feed.can_edit_own_user_status') && $aFeed['user_id'] == Phpfox::getUserId()) || Phpfox::getUserParam('feed.can_edit_other_user_status');
            }
        }

        if($canEdit) {
            echo "<li class=\"ynfeed_feed_option\"><a href=\"javascript:void(0);\"  title=\"" . _p('edit_feed') ."\" onclick=\"\$Core.ynfeed.detachComposeForm(); tb_show('" ._p('edit_feed')."', $.ajaxBox('ynfeed.editUserStatus', 'height=400&amp;width=600&amp;id=". $aFeed['feed_id'] .(!empty($module) ? "&amp;module=". $module : '') .(!empty($itemId) ? "&amp;item_id=". $itemId : ''). (!empty($aFeed['user_id']) ? '&amp;user_id='. $aFeed['user_id'] : '') ."')); return false;\">
			<i class=\"fa fa-pencil-square-o\"></i>". _p('edit_feed') ."</a></li>";
        }
    }
} 
 ";s:35:"feed.service_feed_get_custom_module";s:719:"if ($aReturn) {
    //Get last feed item
    $iLast = count($aFeeds) - 1;
    if ($iLast >= 0) {
        Phpfox::getService('yncreaction')->getReactionsPhrase($aFeeds[$iLast]);
    }
} 
 if (!empty($this->_aCallback['module']) && $this->_aCallback['module'] == 'fevent') {
    $aCustomModule[] = 'fevent';
} 
 if ($aReturn && Phpfox::isAppActive('P_Reaction')) {
    $iLast = count($aFeeds) - 1;
    if ($iLast >= 0) {
        Phpfox::getService('preaction')->getReactionsPhrase($aFeeds[$iLast]);
    }
} 
 if (Phpfox_Request::instance()->get('req1') == 'auction' || (!empty($this->_aCallback['module']) && in_array($this->_aCallback['module'], ['auction', 'ecommerce']))) {
    unset($aRow['parent_user_id']);
} 
 ";s:38:"feed.template_block_comment_commands_2";s:201:"$aFeed = $this->getVar('aFeed');
if (!isset($aFeed['like_item_id'])) {
    $aFeed['like_item_id'] = $aFeed['item_id'];
}

Phpfox::getBlock('yncreaction.reaction-display', array('aFeed' => $aFeed)); 
 ";s:35:"core.template_block_template_menu_1";s:36822:";
if (Phpfox::isModule('yncwebpush')) {
    $sText = _p('push_notification_settings');
    $sLink = Phpfox::getLib('url')->makeUrl('push-notification');
    $sAttach = "<li role='presentation' id='yncwebpush_settings'><a href='" . $sLink . "'><i class='ico ico-bell2-o'></i>" . $sText . "</a></li>";
    ?>

    <script type="text/javascript">
        $Ready(function () {
            if ($("#yncwebpush_settings").length) return false;
            $('#header_menu .feed_form_menu .nav_header ul li:nth-child(4)').after("<?php echo $sAttach; ?>");
            $('#section-header #user_sticky_bar .dropdown-menu-right li:nth-child(4)').after("<?php echo $sAttach; ?>");
        });
    </script>
    <?php
}; 
 if(Phpfox::isAdminPanel())
{
    ?>
    <script type="text/javascript">
    $Behavior.fixFeventMenu = function(){
        $("div.main_sub_menu_holder_header").each(function(i,e){
            if(e.innerHTML == 'Fevent'){
                e.innerHTML = 'Advanced Event';
                return;
            }
        });
    }
    </script>
    <?php
} 
 try {
		if (Phpfox::isUser() && !Phpfox::isAdminPanel() && Phpfox::isModule('notification'))
		{
			$iDelayTime = (int) Phpfox::getParam('fanot.display_notification_seconds') * 1000;
			$iRefreshTime = (int) Phpfox::getParam('fanot.notification_refresh_time') * 1000;
			$str = '';
			$str .= '<div id="fanot_box" class="fanotui"></div>';
			?>
			<script language="javascript">
				$Behavior.ynfanotInitVar = function(){
					if ($('#fanot_box').length){}else
					{
						$('body').prepend('<?php echo $str; ?>');
					}
					if (typeof($Core) != "undefined") {
						$Core.fanot.fanotDelay = <?php echo abs($iDelayTime); ?>;
						$Core.fanot.fanotUpdateDelay = <?php echo abs($iRefreshTime); ?>;
					}
				};
			</script>
			<?php
		}

		if(Phpfox::isModule('fanot'))
		{
			$bgcolor = (Phpfox::getParam('fanot.notification_bgcolor')!='') ? Phpfox::getParam('fanot.notification_bgcolor') : '#CAD1DE';
			?>
			<style type="text/css">
				.fanot_content, .fanotui .fanot_item:hover {
					background-color: <?php echo $bgcolor; ?>!important;
				}
				.fanotui .fanot_selected {background:<?php echo $bgcolor; ?>!important;}
			</style>
			<?php
		}
	}
	catch (Exception $e) {

	} 
 ?>
<script type="text/javascript">
function ynfoxfavorite_loadlazyimage()
{
	$('.image_deferred:not(.built)').each(function() {
		var t = $(this),
			src = t.data('src'),
			i = new Image();

		t.addClass('built');
		if (!src) {
			t.addClass('no_image');
			return;
		}

		t.addClass('has_image');
		i.onerror = function(e, u) {
			t.replaceWith('');
		};
		i.onload = function(e) {
			t.attr('src', src);
		};
		i.src = src;
	});

	$('.image_load:not(.built)').each(function() {
		var t = $(this),
			src = t.data('src'),
			i = new Image();

		t.addClass('built');
		if (!src) {
			t.addClass('no_image');
			return;
		}

		t.addClass('has_image');
		i.onload = function(e) {
			t.css('background-image', 'url(' + src + ')');
		};
		i.src = src;
	});
}
</script>

<?php 
 $settings = phpfox::getService('gettingstarted.settings')->getSettings(0);
if  (($settings["active_getting_started"]) && isset($_SESSION['check_login']) && ($_SESSION['check_login']))
{
	$corepath=phpfox::getParam("core.path");
	echo "<script src='".$corepath."module/gettingstarted/static/jscript/gettingstarted.js' type='text/javascript'></script>";
	echo "<link href='".$corepath."module/gettingstarted/static/css/default/default/thickbox.css' type='text/css' rel='stylesheet'>";
	Phpfox::getService("gettingstarted.todolist")->showTodoList();
	$_SESSION['check_login'] = false;
} 
 ;
if (Phpfox::isModule('socialbridge'))
{
    $sText = _p('socialbridge.manage_social_accounts');
    $sLink = Phpfox::getLib('url')->makeUrl('socialbridge.setting');
    $sAttach = "<li role='presentation' id='socialbridge_setting'><a href='".$sLink."'><i class='fa fa-share-alt'></i>".$sText."</a></li>";
?>

<script type="text/javascript">
	$Ready(function()
	{
        if($("#socialbridge_setting").length) return false;
		$('#header_menu .feed_form_menu .nav_header ul li:nth-child(3)').after("<?php echo $sAttach; ?>");
		$('#section-header #user_sticky_bar .dropdown-menu-right li:nth-child(3)').after("<?php echo $sAttach; ?>");
	});
</script>
<?php
}
; 
 defined('PHPFOX') or exit('NO DICE!');
$sFullControllerName = Phpfox::getLib('module')->getFullControllerName();
if ($sFullControllerName == 'core.index-member' || $sFullControllerName == 'profile.index')
{
    $iPageId = Phpfox::getLib('session')->remove('socialintegration_pageId');
}

if (Phpfox::isModule('socialpublishers'))
{
    $iUserId = Phpfox::getService('socialpublishers')->getRealUser(Phpfox::getUserId());
    $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iUserId);
    $aRecentAddedItem = Phpfox::getLib('cache')->get($sIdCache);
    

    if ($aRecentAddedItem && count($aRecentAddedItem))
    {
        $aSharePublishersFeed = Phpfox::getService('socialpublishers')->getAddedInfo($aRecentAddedItem);
        

        if(isset($aRecentAddedItem['sType']) && $aRecentAddedItem['sType']=='resume'){
            if (Phpfox::isModule('resume')){
                $aResume = Phpfox::getService('resume.basic')->getQuick($aRecentAddedItem['iItemId']);
                if($aResume){
                    $aSharePublishersFeed['type_id'] = 'resume';
                    $aSharePublishersFeed['feed_content'] = $aResume['headline'];
                    $aSharePublishersFeed['feed_info'] = $aResume['headline'];
                    $aSharePublishersFeed['feed_link'] = Phpfox::getLib('url')->permalink('resume.view', $aResume['resume_id'], $aResume['headline']);
                }
            }   
        }
        
        if ($aSharePublishersFeed && count($aSharePublishersFeed))
        {
            $aShareType = $aSharePublishersFeed['type_id'];
            //fix for photo to get title
            if ($aShareType == "photo")
            {
                $aSharePublishersFeed['feed_title'] = Phpfox::getLib('database')->select("title")
                        ->from(Phpfox::getT('photo'))
                        ->where('photo_id = ' . (int) $aRecentAddedItem['iItemId'])
                        ->execute('getField');
            }

            $sTitle = isset($aSharePublishersFeed['feed_info']) ?  $aSharePublishersFeed['feed_info'] : "";
            $aSharePublishers['url'] = isset($aSharePublishersFeed['feed_link']) ? $aSharePublishersFeed['feed_link'] : Phpfox::getParam('core.path');
            $aSharePublishers['text'] = (isset($aSharePublishersFeed['feed_status']) && !empty($aSharePublishersFeed['feed_status'])) ? $aSharePublishersFeed['feed_status'] : (isset($aSharePublishersFeed['feed_content']) ? $aSharePublishersFeed['feed_content'] : "");
            $aSharePublishers['content'] = (isset($aSharePublishersFeed['feed_status']) && !empty($aSharePublishersFeed['feed_status'])) ? $aSharePublishersFeed['feed_status'] : (isset($aSharePublishersFeed['feed_content']) ? $aSharePublishersFeed['feed_content'] : "");
            $aSharePublishers['title'] = (isset($aSharePublishersFeed['feed_status']) && !empty($aSharePublishersFeed['feed_status'])) ? $aSharePublishersFeed['feed_status'] : (isset($aSharePublishersFeed['feed_title']) ? $aSharePublishersFeed['feed_title'] : $sTitle);
            $aSharePublishers['item_id'] = (isset($aSharePublishersFeed['item_id']) && !empty($aSharePublishersFeed['item_id'])) ? $aSharePublishersFeed['item_id'] : 0 ;
          

            if (1)
            {              
                Phpfox::getService('socialpublishers')->showPublisher($aShareType, $iUserId, $aSharePublishers);
            }
        }
    }
} 
 try {
    if (Phpfox::isModule('suggestion') && Phpfox::isUser() && !Phpfox::isAdminPanel()) {
        $bShow = 0;


        if (Phpfox::getService('suggestion.process')->isIgnoreSuggestion()) {
            unset($_SESSION['suggestion']['aFeed']);
            Phpfox::setCookie('suggestion', '', -1);
        }

        $ynCookie = Phpfox::getCookie('suggestion');


        if (isset($_SESSION['suggestion']['aFeed']) || (isset($ynCookie) && strlen($ynCookie) > 0)) {
            $ynCookie = json_decode($ynCookie, true);
            $_aFeed = $ynCookie['aFeed'];

            $sLinkCallback = $_aFeed['sLinkCallback'];
            $sTitle = base64_encode(urlencode($_aFeed['title'] . ''));
            $sPrefix = $ynCookie['aFeed']['prefix'];

            if ($_aFeed['user_id'] == Phpfox::getUserId()) {
                $bShow = 1;
            }

            if (($_aFeed['sModule'] == 'photo' && $_aFeed['type_id'] == 'photo') ||
                ($_aFeed['sModule'] == 'advancedphoto' && $_aFeed['type_id'] == 'advancedphoto')
            ) {

                if (Phpfox::isModule("photo")) {
                    $aPhoto = Phpfox::getService("photo")->getCoverPhoto($_aFeed['item_id']);
                } else if (Phpfox::isModule("advancedphoto")) {
                    $aPhoto = Phpfox::getService("advancedphoto")->getCoverPhoto($_aFeed['item_id']);
                }

                if (empty($_aFeed['title'])) {
                    if (!empty($aPhoto['title']))
                        $sTitle = base64_encode(urlencode($aPhoto['title'] . ''));
                }
            }

        } else {
            $aPrivateData = Phpfox::getService('suggestion')->getPrivateData(Phpfox::getUserId());


            if (is_array($aPrivateData) && count($aPrivateData) > 0) {
                $aRet = unserialize(base64_decode($aPrivateData['message']));
                if (isset($aRet['item_id'])) {
                    $_aFeed['item_id'] = $aRet['item_id'];
                    $_aFeed['sModule'] = $aRet['sModule'];
                    $sLinkCallback = urlencode($aRet['sLinkCallback']);
                    $sTitle = base64_encode(urlencode($aRet['title']));
                    $sPrefix = $aRet['prefix'];
                    $bShow = 0;


                    $aData['item_id'] = $aRet['item_id'];
                    $aData['owner_id'] = Phpfox::getUserId();
                    $aData['module_id'] = $aRet['sModule'];
                    Phpfox::getService('suggestion.reminder')->addReminder($aData);
                }

            }
        }
    ?>

    <?php if ($bShow == 1 && isset($_aFeed['item_id']) && (int) $_aFeed['item_id'] > 0) {

     ?>
        <script text="text/javascript">
            <?php if (Phpfox::getUserParam('suggestion.enable_friend_suggestion') && Phpfox::getUserParam('suggestion.enable_content_suggestion_popup') && Phpfox::getService('suggestion')->isAllowContentSuggestionPopup()) { ?>
                    setTimeout(function(){
                        suggestion_and_recommendation_tb_show("...", $.ajaxBox('suggestion.friends','iFriendId='+<?php echo $_aFeed['item_id'];?>+'&sSuggestionType=suggestion'+'&sModule=suggestion_<?php   echo $_aFeed['sModule']?>&sLinkCallback=<?php   echo $sLinkCallback;?>&sTitle=<?php   echo $sTitle;?>&sPrefix=<?php   echo $sPrefix;?>&sExpectUserId='));
                    }, 4000);
            <?php } ?>
        </script>
    <?php } ?>

    <script>
        $Behavior.ignoreSuggestion = function(){
            $('a[class="moderation_process_action"]').each(function(){
                $(this).click(function(){
                    if ($(this).attr('href') == '#approve'){
                        $.ajaxCall('suggestion.ignoreSuggestion');
                    }
                });
            });
        }

        function suggestion_and_recommendation_tb_show(caption, url, thisObject, sForceMessage, bForceNoCilck, sType)
        {
            var baseURL;
            if (url.indexOf("?")!==-1)
            {
                baseURL = url.substr(0, url.indexOf("?"));
            }
            else
            {
                baseURL = url;
            }
            var urlString = /\.jpg$|\.jpeg$|\.png$|\.gif$|\.bmp$/;
            var urlType = baseURL.toLowerCase().match(urlString);

            if (urlType == '.jpg' || urlType == '.jpeg' || urlType == '.png' || urlType == '.gif' || urlType == '.bmp')
            {
                imgPreloader = new Image();
                imgPreloader.onload = function()
                {
                    imgPreloader.onload = null;

                    var pagesize = tb_getPageSize();
                    var x = pagesize[0] - 150;
                    var y = pagesize[1] - 150;
                    var imageWidth = imgPreloader.width;
                    var imageHeight = imgPreloader.height;

                    if (imageWidth > x)
                    {
                        imageHeight = imageHeight * (x / imageWidth);
                        imageWidth = x;
                        if (imageHeight > y)
                        {
                            imageWidth = imageWidth * (y / imageHeight);
                            imageHeight = y;
                        }
                    }
                    else if (imageHeight > y)
                    {
                        imageWidth = imageWidth * (y / imageHeight);
                        imageHeight = y;
                        if (imageWidth > x)
                        {
                            imageHeight = imageHeight * (x / imageWidth);
                            imageWidth = x;
                        }
                    }

                    TB_WIDTH = imageWidth + 30;
                    TB_HEIGHT = imageHeight + 60;

                    $('.js_box_image_holder').remove();
                    $('.js_box_image_holder').unbind('click');

                    var sHtml = '';
                    sHtml += '<div class="js_box_image_holder"><div class="js_box ' + (oParams['bJsIsMobile'] ? 'mobile_js_box' : '') + ' js_box_image" style="display:block;"><div class="js_box_content">';

                    if ($(thisObject).parents('.js_box_thumbs_holder').length > 0)
                    {
                        var sCurrentSource = $(thisObject).find('img:first').attr('src');
                        var sNewSource = '';
                        var SubimgPreloaderImageWidth = '';
                        var SubimgPreloaderImageHeight = '';
                        var SubArrayWidth = new Array();
                        var SubArrayHeight = new Array();
                        var sSubHtml = '';
                        var aUrlParts = new Array();
                        var aUrlPartsNew = new Array();

                        iImageIterationCount = 0;
                        iCurrentImageIterationCount = 0;

                        sHtml += '<div>';
                        $(thisObject).parents('.js_box_thumbs_holder').find('.js_box_image_holder_thumbs').find('.thickbox').each(function()
                        {
                            iImageIterationCount++;
                            sNewSource = $(this).find('img').attr('src');

                            aUrlParts = explode('_', sCurrentSource);
                            aUrlPartsNew = explode('_', sNewSource);

                            if (aUrlParts[0] == aUrlPartsNew[0])
                            {
                                iCurrentImageIterationCount = iImageIterationCount;
                            }

                            {
                                SubimgPreloader = new Image();

                                SubimgPreloader.src = $(this).attr('href');

                                SubimgPreloaderImageWidth = SubimgPreloader.width;
                                SubimgPreloaderImageHeight = SubimgPreloader.height;

                                if (SubimgPreloaderImageWidth > x)
                                {
                                    SubimgPreloaderImageHeight = SubimgPreloaderImageHeight * (x / SubimgPreloaderImageWidth);
                                    SubimgPreloaderImageWidth = x;
                                    if (imageHeight > y)
                                    {
                                        SubimgPreloaderImageWidth = SubimgPreloaderImageWidth * (y / SubimgPreloaderImageHeight);
                                        imageHeight = y;
                                    }
                                }
                                else if (imageHeight > y)
                                {
                                    SubimgPreloaderImageWidth = SubimgPreloaderImageWidth * (y / SubimgPreloaderImageHeight);
                                    SubimgPreloaderImageHeight = y;
                                    if (SubimgPreloaderImageWidth > x)
                                    {
                                        SubimgPreloaderImageHeight = SubimgPreloaderImageHeight * (x / SubimgPreloaderImageWidth);
                                        SubimgPreloaderImageWidth = x;
                                    }
                                }

                                SubArrayWidth.push(SubimgPreloaderImageWidth);
                                SubArrayHeight.push(SubimgPreloaderImageHeight);

                                sSubHtml += '<a rel="' + SubimgPreloaderImageWidth + '|' + SubimgPreloaderImageHeight + '" id="js_next_image_thumb_' + iImageIterationCount + '" href="' + $(this).attr('href') + '" onclick="tb_show_new_image(this, \'' + $(this).attr('href') + '\', ' + SubimgPreloaderImageWidth + ', ' + SubimgPreloaderImageHeight + ', ' + iImageIterationCount + '); return false;"><img src="' + sNewSource + '" alt="" ' + (aUrlParts[0] == aUrlPartsNew[0] ? ' class="is_active" ' : '') + ' /></a>';
                            }
                        });

                        TB_WIDTH = ((Math.max.apply(Math, SubArrayWidth)) + 30);
                        TB_HEIGHT = ((Math.max.apply(Math, SubArrayHeight)));

                        sHtml += '<div class="js_box_image_holder_browse">';
                        sHtml += '<div class="js_box_image_gallery_display" style="height:' + TB_HEIGHT + 'px; line-height:' + TB_HEIGHT + 'px;">';
                        sHtml += '<a href="#" onclick="return js_box_next_image();"><img src="' + url + '" width="' + imageWidth + '" height="' + imageHeight + '" alt="" id="js_thickbox_core_image" /></a>';
                        sHtml += '</div>';
                        sHtml += '<div class="js_box_image_gallery">' + sSubHtml + '</div>';
                        sHtml += '</div>';

                        sHtml += '</div>';
                    }
                    else
                    {
                        sHtml += '<a href="#" onclick="$(\'.js_box_image_holder\').remove(); return false;"><img src="' + url + '" width="' + imageWidth + '" height="' + imageHeight + '" alt="" id="js_thickbox_core_image" /></a>';
                    }

                    sHtml += '</div><div class="suggestion_and_recommendation_js_box_close"><a href="#" onclick="return js_box_remove(this);">' + oTranslations['close'] + '</a></div></div></div>';

                    $('body').prepend(sHtml);

                    $('.js_box_image').css(
                    {
                        top: (($(window).height() - $('.js_box_image').outerHeight()) / 2) + "px",
                        left: (($(window).width() - $('.js_box_image').outerWidth()) / 2) + "px",
                        display: 'block'
                    });

                    var bCanCloseImageBox = true;

                    $('.js_box').click(function()
                    {
                        bCanCloseImageBox = false;
                    });

                    $('.js_box_image_holder').click(function()
                    {
                        if (!bCanCloseImageBox)
                        {
                            bCanCloseImageBox = true;
                        }
                        else
                        {
                            $(this).remove();
                        }
                    });

                    if ($.browser.msie && $.browser.version == '7.0')
                    {
                        $Behavior.ie7FixZindex();
                    }
                };

                imgPreloader.src = url;
                return false;
            }

            var bIsAlreadyOpen = false;
            if ($(thisObject).hasClass('photo_holder_image') && !empty($(thisObject).attr('rel')))
            {
                if (!getParam('bPhotoTheaterMode')){
                    return true;
                }

                if (getParam('bJsIsMobile')){
                    return true;
                }

                if ($Core.exists('.js_box_image_holder_full')){
                    $('#photo_view_ajax_loader').show();
                }

                sLastOpenUrl = (empty(window.location.hash) ? $Core.getRequests(window.location, true) : '/' + window.location.hash);
                var sUserId = url.match(/userid_([0-9]+)/);
                var sAlbumId = url.match(/albumid_([0-9]+)/);

                var queryString = '' + getParam('sGlobalTokenName') + '[call]=photo.view&width=940' + (typeof sPhotoCategory != 'undefined' ? '&category=' + sPhotoCategory : '') + '&req2=' + $(thisObject).attr('rel') + '&theater=true&no_remove_box=true' + (sUserId != null && isset(sUserId[1]) ? '&userid='+sUserId[1] :'') + (sAlbumId != null && isset(sAlbumId[1]) ? '&albumid='+sAlbumId[1] :'');
                var params = tb_parseQuery(queryString);

                bIsPhotoImage = true;
                if (isset($aBoxHistory[params['' + getParam('sGlobalTokenName') + '[call]']]))
                {
                    bIsAlreadyOpen = true;
                }

                if ($('#noteform').length > 0)
                {
                    $('#noteform').hide();
                }
                if ($('#js_photo_view_image').length > 0)
                {
                    $('#js_photo_view_image').imgAreaSelect({ hide: true });
                }
                      alert(5);
            }
            else
            {

                if ($Core.exists('.js_box_image_holder_full')){
                    js_box_remove($('.js_box_image_holder_full').find('.js_box_content:first'));
                }

                if (url.indexOf('#') != -1)
                {
                    var aParams = url.split('#');
                    url = '#' + aParams[1];
                }

                var queryString = url.replace(/^[^\?]+\??/,'');
                var params = tb_parseQuery(queryString);
            }

            if (!bIsPhotoImage && isset($aBoxHistory[params['' + getParam('sGlobalTokenName') + '[call]']]))
            {
                return false;
            }

            if (!bIsAlreadyOpen)
            {
                $iBoxTotalOpen++;
                $iCurrentZIndex++;

                $aBoxHistory[params[getParam('sGlobalTokenName') + '[call]']] = true;

                $sCurrentId = 'js_box_id_' + $iBoxTotalOpen;
            }

            if (caption === null)
            {
                caption = '';
            }

            var bIsFullMode = false;
            if (params['width'] == 'full')
            {
                params['width'] = ($(window).width());
                params['height'] = ($(window).height());
                bIsFullMode = true;
            }
            else if (params['width'] == 'scan')
            {
                params['width'] = ($(window).width() - (oCore['core.is_admincp'] ? 100 : 150));
                params['height'] = ($(window).height() - (oCore['core.is_admincp'] ? 100 : 150));
            }

            TB_WIDTH = (!empty(params['width']) ? ((params['width']*1) + 30) : 630);
            TB_HEIGHT = (params['height']*1) + 40 || 440;

            var pagesize = tb_getPageSize();
            if (TB_HEIGHT > pagesize[1])
            {
                TB_HEIGHT = (pagesize[1] - 75);
            }

            if (TB_WIDTH > pagesize[0])
            {
                TB_WIDTH = (pagesize[0] - 75);
            }

            ajaxContentW = TB_WIDTH - 30;
            ajaxContentH = TB_HEIGHT - 45;

            if (!bIsAlreadyOpen)
            {
                var sHtml = '';

                if (bIsPhotoImage){
                    $('.js_box_image_holder').remove();
                    $('.js_box_image_holder').unbind('click');
                    sHtml += '<div class="js_box_image_holder_full">';
                    sHtml += '<div class="js_box_image_holder_full_loader" style="position:absolute; top:50%; left:50%;"><img src="' + oJsImages['loading_animation'] + '" alt="" /></div>';
                    sHtml += '<div style="display:none;" id="' + $sCurrentId + '" class="js_box' + (oParams['bJsIsMobile'] ? ' mobile_js_box' : ' ') + (isset(params['no_remove_box']) ? ' js_box_no_remove' : '') + '" style="width:' + ajaxContentW + 'px;">';
                    sHtml += '<div class="js_box_content"></div>';
                    sHtml += '<div class="suggestion_and_recommendation_js_box_close"><a href="#" onclick="return js_box_remove(this);">' + oTranslations['close'] + '</a><span class="js_box_history">' + params[getParam('sGlobalTokenName') + '[call]'] + '</span></div>';
                    sHtml += '</div>';
                    sHtml += '</div>';
                }
                else{
                    if (bIsPhotoImage)
                    {
                        $('.js_box_image_holder').remove();
                        $('.js_box_image_holder').unbind('click');
                        sHtml += '<div class="js_box_image_holder_full">';
                    }

                    if (bForceNoCilck){
                        sHtml += '<div class="js_box_image_holder">';
                    }

                    sHtml += '<div id="' + $sCurrentId + '" class="js_box' + (oParams['bJsIsMobile'] ? ' mobile_js_box' : ' ') + (isset(params['no_remove_box']) ? ' js_box_no_remove' : '') + '" style="width:' + ajaxContentW + 'px;">';
                    if (!bIsPhotoImage)
                    {
                        sHtml += '<div class="js_box_title">' + caption + '</div>';
                    }
                    sHtml += '<div class="js_box_content"><span class="js_box_loader">' + oTranslations['loading'] + '...</span></div>';
                    {
                        sHtml += '<div class="suggestion_and_recommendation_js_box_close"><a href="#" onclick="return js_box_remove(this);">' + oTranslations['close'] + '</a><span class="js_box_history">' + params[getParam('sGlobalTokenName') + '[call]'] + '</span></div>';
                    }
                    sHtml += '</div>';

                    if (bIsPhotoImage)
                    {
                        sHtml += '</div>';
                    }

                    if (bForceNoCilck){
                        sHtml += '</div>';
                    }
                }

                $('body').prepend(sHtml);

                var $oNew = $('#' + $sCurrentId + '');

                tb_position($oNew, (bIsFullMode ? bIsFullMode : ''));

                if (!bIsPhotoImage){
                    $oNew.show();
                } else {
                    $('.js_box_image_holder_full_loader').css({
                        'margin-left': '-' + ($('.js_box_image_holder_full_loader').find('img:first').width() / 2) + 'px',
                        'margin-top': '-' + ($('.js_box_image_holder_full_loader').find('img:first').height() / 2) + 'px'
                    });
                }
            }
            else
            {
                $oNew = $('.js_box_image_holder_full').find('.js_box:first');
            }

            if (getParam('bJsIsMobile')){
                queryString += '&js_mobile_version=true';
            }

            if(url.indexOf('TB_inline') != -1){

                            if (params['type'])
                            {
                                switch(params['type'])
                                {
                                    case 'delete':
                                        var sHtml = '';
                                        sHtml += '<div id="js_inline_delete">';
                                        if (!params['call'])
                                        {
                                            sHtml += '<form method="post" action="' + sMainUrl + '">';
                                            sHtml += '<div><input type="hidden" name="' + getParam('sGlobalTokenName') + '[security_token]" value="' + getParam('sSecurityToken') + '" />';
                                        }
                                        sHtml += '<div>';
                                        sHtml += getPhrase('core.are_you_sure');
                                        sHtml += '<div class="t_center p_4">';
                                        sHtml += ' <input type="hidden" name="item_id" value="' + params['itemId'] + '" id="js_inline_delete_id" /> ';
                                        if (!params['call'])
                                        {
                                            sHtml += ' <input type="submit" value="' + getPhrase('core.yes') + '" class="button btn btn-primary btn-sm" /> ';
                                        }
                                        else
                                        {
                                            sHtml += ' <button type="button" class="button btn btn-primary btn-sm" onclick="$(\'#js_inline_delete_id\').ajaxCall(\'' + params['call'] + '\', \'' + queryString + '\'); tb_remove();">' + getPhrase('core.yes') + '</button> ';
                                        }
                                        sHtml += ' <button type="button" class="button" onclick="tb_remove();">' + getPhrase('core.no') + '</button>';
                                        sHtml += '</div>';
                                        sHtml += '</div>';
                                        if (!params['call'])
                                        {
                                            sHtml += '</form>';
                                        }
                                        sHtml += '</div>';

                                        break;
                                }

                                $oNew.find('.js_box_content').html('');
                                $oNew.find('.js_box_content').html(sHtml);
                            }
                            else
                            {
                                var sHtml = $('#' + params['inlineId']).children();
                            }

                $oNew.find('.js_box_content').html('');
                $oNew.find('.js_box_content').html(sHtml);

                return;
            }
            else if (isset(params['TB_iframe'])){
                var sIframe = '';
                $oNew.find('.js_box_content').html('');
                $oNew.find('.js_box_content').html(sIframe);
            }
            else{
                if (!empty(sForceMessage)){
                    $oNew.find('.js_box_content').html('');
                    $oNew.find('.js_box_content').html(sForceMessage);
                    return;
                }

                var sAjaxType = 'GET';
                if ( (params['' + getParam('sGlobalTokenName') + '[call]'] == 'share.popup') || sType == 'POST'){
                    sAjaxType = 'POST';
                }

                $.ajax(
                    {
                        type: sAjaxType,
                        dataType: 'html',
                        url: getParam('sJsAjax'),
                        data: queryString,
                        success: function(sMsg)
                        {
                            $oNew.find('.js_box_content').html('');
                            $oNew.find('.js_box_content').html(sMsg);
                            if (!empty($oNew.find('.js_box_title_store:first').html()))
                            {
                                $oNew.find('.js_box_title:first').html($oNew.find('.js_box_title_store:first').html());
                            }
                            $oNew.find('.js_box_title:first').show();
                            $oNew.find('.suggestion_and_recommendation_js_box_close:first').show();

                            if (bIsFullMode){
                                $oNew.find('.js_box_content').height(ajaxContentH);
                            }

                            if (bIsPhotoImage)
                            {

                                var thisHeight = $(window).height();
                                var thisBodyHeight = $('body').height();
                                var newHeight = (thisHeight > thisBodyHeight ? thisHeight : thisBodyHeight);

                                $('.js_box_image_holder_full').css({'top': '0px', 'height': (newHeight + 50) + 'px'});

                                var bCanCloseImageBox = true;

                                $Behavior.onCloseThickbox = function()
                                {
                                    $('.js_box').click(function()
                                    {
                                        bCanCloseImageBox = false;
                                    });

                                    $('.js_box a').click(function()
                                    {
                                        bCanCloseImageBox = false;
                                    });

                                    $('.js_box_image_holder_full').click(function()
                                    {
                                        if (!bCanCloseImageBox)
                                        {
                                            bCanCloseImageBox = true;
                                        }
                                        else
                                        {
                                            $('#main_core_body_holder').show();
                                            if ($('#noteform').length > 0)
                                            {
                                                $('#noteform').hide();
                                            }
                                            if ($('#js_photo_view_image').length > 0)
                                            {
                                                $('#js_photo_view_image').imgAreaSelect({ hide: true });
                                            }
                                            bIsPhotoImage = false;
                                            $(this).remove();
                                            delete $aBoxHistory[params[getParam('sGlobalTokenName') + '[call]']];
                                        }
                                    });
                                }
                                $Behavior.onCloseThickbox();
                            }
                        }
                    });
            }
        }
    </script>
<?php } ?>

<?php }
catch (Exception $e) {
} 
 if (Phpfox::isModule('tourguides') && !Phpfox::isAdminPanel())
{
    $iUserId = Phpfox::getUserId();
    $sCurrentUrl = Phpfox::getService('tourguides')->getCurrentUrl();
    $sControllerName = Phpfox::getLib('module')->getFullControllerName();
    $aParams = array(
        'sCurrentUrl' => $sCurrentUrl,
        'sControllerName' => $sControllerName,
        );

    $oService = Phpfox::getService('tourguides')->showTour($iUserId, $aParams);
} 
 ;

if(Phpfox::isUser() && Phpfox::isModule('ynchat')){
	$sAgent = Phpfox::getService('ynchat.helper')->getBrowser();
	$type = 'web';
	if(Phpfox::getService('ynchat.helper')->isMobile()){
	    $type = 'mobile';
	}  

	/*fix for case page*/
	$sCurrentModule = Phpfox_Url::instance()->reverseRewrite(Phpfox::getLib('request')->get((Phpfox::getLib('request')->get('req1') == 'pages' ? 'req3' : 'req2')));
	if(Phpfox::isModule($sCurrentModule)){
		Phpfox::getBlock('ynchat.maincontent');
	}


	if(($type == 'mobile') && Phpfox::isUser() && Phpfox::isModule('ynchat')){
		Phpfox::getLib('setting')->setParam('core.is_auto_hosted',false);
		    $sSiteLink = Phpfox::getParam('core.path_file');
		?>
			<link id="ynchat_link_css" type="text/css" href="<?php echo $sSiteLink; ?>ynchat/css.php?js_mobile_version=1&v=<?php echo time(); ?>" rel="stylesheet" charset="utf-8">
			<link id="ynchat_link_css_mobile" type="text/css" href="<?php echo $sSiteLink; ?>ynchat/static/css/ynchatmobile.css?js_mobile_version=1&v=<?php echo time(); ?>" rel="stylesheet" charset="utf-8">
			<script id="ynchat_script_js" type="text/javascript" src="<?php echo $sSiteLink; ?>ynchat/js.php?js_mobile_version=1&v=<?php echo time(); ?>" charset="utf-8"></script>
		<?php 
	}	
}

; 
 ";s:38:"friend.service_request_process_add_end";s:1352:"if (!empty($iFriendId)) {
    if (!Phpfox::getService('yncwebpush.setting')->checkPushNotificationSetting($iFriendId,
        'friend.new_friend_request')
    ) {
        $aTokens = Phpfox::getService('yncwebpush.token')->getAllUserToken($iFriendId, true, true);
        if ($aTokens) {
            $sTitle = _p('new_friend_request');
            $sContent = _p('full_name_added_you_as_a_friend', ['full_name' => Phpfox::getUserBy('full_name')]);
            $aUser = Phpfox::getUserBy();
            if (!empty($aUser['user_image'])) {
                $sImage = Phpfox::getLib('image.helper')->display([
                    'user' => $aUser,
                    'suffix' => '_50_square',
                    'return_url' => true
                ]);
                $sImage = str_replace('http://', 'https://', $sImage);
            } else {
                $sImage = '';
            }
            Phpfox::getService('yncwebpush.notification.process')->pushNotification($sTitle, $sContent, $sLink, $sImage,
                $aTokens);
        }
    }
} 
 use Apps\Core_MobileApi\Adapter\PushNotification\PushNotificationInterface;

if (!empty($iFriendId)) {
    Phpfox::getService(PushNotificationInterface::class)->addToQueue(Phpfox::getUserId(), $iFriendId, [
        'notification_type' => 'friend',
        'notification_id'   => $iId
    ]);
} 
 ";s:24:"mail.service_process_add";s:2063:"if (!$bIsThreadReply && Phpfox::getParam('mail.threaded_mail_conversation')) {
    $iUserId = $aVals['to'];
} else {
    foreach ($aThreadUsers as $aThreadUser) {
        if ($aThreadUser['user_id'] == Phpfox::getUserId()) {
            continue;
        }
        $iUserId = $aThreadUser['user_id'];
    }
}
if (!Phpfox::getService('yncwebpush.setting')->checkPushNotificationSetting($iUserId, 'mail.new_message')) {
    $aTokens = Phpfox::getService('yncwebpush.token')->getAllUserToken($iUserId, true, true);
    if ($aTokens) {
        $sTitle = _p('full_name_sent_you_a_message', ['full_name' => Phpfox::getUserBy('full_name')]);
        $sContent = Phpfox::getLib('parse.input')->clean(strip_tags(Phpfox::getLib('parse.bbcode')->cleanCode(str_replace(array(
            '&lt;',
            '&gt;'
        ), array('<', '>'), $aVals['message']))));
        $aUser = Phpfox::getUserBy();
        if (!empty($aUser['user_image'])) {
            $sImage = Phpfox::getLib('image.helper')->display([
                'user' => $aUser,
                'suffix' => '_50_square',
                'return_url' => true
            ]);
            $sImage = str_replace('http://', 'https://', $sImage);
        } else {
            $sImage = '';
        }

        Phpfox::getService('yncwebpush.notification.process')->pushNotification($sTitle, $sContent, $sLink, $sImage,
            $aTokens);
    }
} 
 use Apps\Core_MobileApi\Adapter\PushNotification\PushNotificationInterface;

//Implement push notification
if (!$bIsThreadReply && Phpfox::getParam('mail.threaded_mail_conversation')) {
    $iUserId = $aVals['to'];
} else {
    foreach ($aThreadUsers as $aThreadUser) {
        if ($aThreadUser['user_id'] == Phpfox::getUserId()) {
            continue;
        }
        $iUserId = $aThreadUser['user_id'];
    }
}


Phpfox::getService(PushNotificationInterface::class)->addToQueue(Phpfox::getUserId(), $iUserId, [
    'message'           => $aVals['message'],
    'notification_type' => 'mail',
    'notification_id'   => isset($iTextId) ? $iTextId : 0
]); 
 ";s:36:"notification.service_process_add_end";s:2500:"if ($sType != 'yncwebpush_admin_push') {
    $bNotAllow = Phpfox::getService('yncwebpush')->isDisablePushNotification($sType, $iOwnerUserId);

    if (!$bNotAllow) {
        $aTokens = Phpfox::getService('yncwebpush.token')->getAllUserToken($iOwnerUserId, true, true);
        if ($aTokens) {
            //Get notification detail
            $aRow = $this->database()->select('n.*, n.user_id as item_user_id, ' . Phpfox::getUserField())
                ->from($this->_sTable, 'n')
                ->join(Phpfox::getT('user'), 'u', 'u.user_id = n.owner_user_id')
                ->where('n.notification_id = ' . (int)$iId)
                ->execute('getRow');

            if ($aRow) {
                Phpfox::getService('user.auth')->setUserId($aRow['item_user_id']);

                //Call callback to get message / link
                $aCallBack = Phpfox::callback($aRow['type_id'] . '.getNotification', $aRow);
                if ($aCallBack !== false) {
                    if (!empty($aRow['user_image'])) {
                        $sImage = Phpfox::getLib('image.helper')->display([
                            'user' => $aRow,
                            'suffix' => '_50_square',
                            'return_url' => true
                        ]);
                        $sImage = str_replace('http://', 'https://', $sImage);
                    } else {
                        $sImage = '';
                    }

                    if (isset($aCallBack['message'])) {
                        $aCallBack['message'] = preg_replace('/<span\sclass="drop_data_user">(.*?)<\/span>/', '$1',
                            $aCallBack['message']);
                        $aCallBack['message'] = preg_replace('/<b>(.*?)<\/b>/', '$1',
                            $aCallBack['message']);
                    }

                    Phpfox::getService('yncwebpush.notification.process')->pushNotification(Phpfox::getParam('core.site_title'),
                        $aCallBack['message'], $aCallBack['link'], $sImage, $aTokens, '', $iId);
                }
                Phpfox::getService('user.auth')->setUserId(null);
            }
        }
    }
} 
 use Apps\Core_MobileApi\Adapter\PushNotification\PushNotificationInterface;

if ($aInsert) {
    Phpfox::getService(PushNotificationInterface::class)->addToQueue(($iSenderUserId === null ? Phpfox::getUserId() : $iSenderUserId), $iOwnerUserId, [
        'notification_id'   => $iId,
        'notification_type' => $sType
    ]);
} 
 ";s:29:"user.service_auth_logout__end";s:702:"//De-active user token in this browser
$sCookie = Phpfox::getCookie('ync_web_push_token');
if (!empty($sCookie)) {
    $aCookie = json_decode($sCookie, true);
    if (!empty($aCookie['token']) && !empty($aCookie['browser'])) {
        Phpfox::getService('yncwebpush.token.process')->addUserToken($aCookie['token'], $aCookie['browser'], 0, false);
    }
} 
 ;
if (Phpfox::isModule('opensocialconnect')) {
    try {
        $service = Phpfox::getService('socialbridge')->getProvider('facebook');

        if ($service) {
            $oApi = $service->getApi();

            if ($oApi) {

                $oApi->clearAllPersistentData();
            }
        }
    } catch (Exception $e) {

    }
}; 
 ";s:37:"validator.admincp_settings_yncwebpush";s:1373:"header("X-XSS-Protection: 0");

$aValidation = [
    'yncwebpush_skip_times_to_stop_request_banner' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('The maximum skip time must be greater than 0'),
    ],
    'yncwebpush_notification_expiration_time' => [
        'def' => 'int:required',
        'min' => '0',
        'max' => '2419200',
        'title' => _p('Notification expiration time must be greater than 0 and less than 2419201'),
    ],
    'yncwebpush_time_period_to_appear_banner' => [
        'def' => 'string:required',
        'title' => _p('Time to reappear request banner cannot be empty'),
    ],
    'yncwebpush_text_of_banner_for_guest' => [
        'def' => 'string:required',
        'maxlen' => '250',
        'title' => _p('Text of banner for guest cannot be empty and it allows maximum 250 characters'),
    ],
    'yncwebpush_text_of_banner_for_user' => [
        'def' => 'string:required',
        'maxlen' => '250',
        'title' => _p('Text of banner for user cannot be empty and it allows maximum 250 characters'),
    ],
    'yncwebpush_server_key' => [
        'def' => 'string:required',
        'title' => _p('Project server key cannot be empty'),
    ],
    'yncwebpush_auth_code_snippet' => [
        'def' => 'string:required',
        'title' => _p('Auth Code Snippet cannot be empty'),
    ],
]; 
 ";s:29:"feed.service_feed_processfeed";s:1090:"if ($aOut['item_id']) {
    $aOut['status_background'] = Phpfox::getService('yncstatusbg')->getFeedStatusBackground($aOut['item_id'],
        $aOut['type_id'], $aOut['user_id']);
} 
 if (isset($aOut['privacy'])) {
    $sIconClass = 'ico ';
    switch ((int) $aOut['privacy']) {
        case 0:
            $sIconClass .= 'ico-globe';
            break;
        case 1:
            $sIconClass .= 'ico-user3-two';
            break;
        case 2:
            $sIconClass .= 'ico-user-man-three';
            break;
        case 3:
            $sIconClass .= 'ico-lock';
            break;
        case 4:
            $sIconClass .= 'ico-gear-o';
            break;
    }

    $aOut['privacy_icon_class'] = $sIconClass;
} 
 if(substr($aOut['type_id'], 0, 12) == 'foxfavorite_') {
    $aOut['type_id'] = substr($aOut['type_id'], 12);
}
if($aOut['type_id'] == 'videochannel_favourite') {
    $aOut['type_id'] = 'videochannel';
}
if(preg_match('/^foxfavorite_/', $aRow['type_id']) || $aRow['type_id'] == 'pages_favorite') {
    $aOut['no_share'] = true;
    $aOut['can_share'] = false;
} 
 ";s:41:"user.service_process_add_updatestatus_end";s:841:"if ($iStatusId && !empty($aVals['status_background_id'])) {
    Phpfox::getService('yncstatusbg.process')->addBackgroundForStatus('user_status', $iStatusId,
        $aVals['status_background_id'], Phpfox::getUserId(), 'user');
} elseif (Phpfox::isModule('ynfeed') && !empty($aVals['feed_id'])) {
    if (!empty($aStatusFeed) && isset($aVals['disabled_status_background'])) {
        Phpfox::getService('yncstatusbg.process')->editUserStatusCheck($aStatusFeed['item_id'], 'user_status',
            $aStatusFeed['user_id'], !$aVals['disabled_status_background']);
    }
} 
 if (Phpfox::isAppActive('P_StatusBg') && $iStatusId && !empty($aVals['status_background_id'])) {
    Phpfox::getService('pstatusbg.process')->addBackgroundForStatus('user_status', $iStatusId,
        $aVals['status_background_id'], Phpfox::getUserId(), 'user');
} 
 ";s:36:"user.service_process_edit_status_end";s:555:"if (!empty($aStatusFeed) && isset($aVals['disabled_status_background'])) {
    Phpfox::getService('yncstatusbg.process')->editUserStatusCheck($aStatusFeed['item_id'], 'user_status',
        $aStatusFeed['user_id'], !$aVals['disabled_status_background']);
} 
 if (Phpfox::isAppActive('P_StatusBg') && !empty($aStatusFeed) && isset($aVals['disabled_status_background'])) {
    Phpfox::getService('pstatusbg.process')->editUserStatusCheck($aStatusFeed['item_id'], 'user_status',
        $aStatusFeed['user_id'], !$aVals['disabled_status_background']);
} 
 ";s:31:"feed.service_feed_can_sponsored";s:134:"//hide feature sponsor on feed in case ad is enabled
if (!Phpfox::isAppActive('Core_BetterAds')) {
    $bPluginInChange = false;
} 
 ";s:17:"get_module_blocks";s:2523:"if (Phpfox::isAppActive('Core_BetterAds') && !Phpfox::isAdminPanel() && $this->_sModule != 'ad') {
    $toggle = [];
    if(Phpfox::getParam('ad.better_ads_collapse_setting_480')) {
        $toggle[] = 480;
    }
    if(Phpfox::getParam('ad.better_ads_collapse_setting_480_767')) {
        $toggle[] = 767;
    }
    if(Phpfox::getParam('ad.better_ads_collapse_setting_767_992')) {
        $toggle[] = 992;
    }
    $aBlocks[$iId][] = [
        'type_id' => 0,
        'component' => 'ad.display',
        'ordering' => 0,
        'params' => [
            'block_id' => $iId,
            'toggle' => $toggle
        ]
    ];
}
if (Phpfox::isAppActive('Core_BetterAds') && defined('PHPFOX_IS_AD_PREVIEW') && PHPFOX_IS_AD_PREVIEW) {
    $iPreviewBlock = Phpfox_Component::__getParam('betterads_preview_block');
    if (!empty($iPreviewBlock) && $iId == $iPreviewBlock) {
        $aBlocks[$iId][] = [
            'type_id' => 0,
            'component' => 'ad.display',
            'params' => [
                'preview' => [
                    'block' => $iPreviewBlock,
                    'type_id' => Phpfox_Component::__getParam('betterads_preview_type_id'),
                    'image_temp_id' => Phpfox_Component::__getParam('betterads_preview_image'),
                    'image_tooltip_text' => Phpfox_Component::__getParam('betterads_preview_image_tooltip_text'),
                    'url_link' => Phpfox_Component::__getParam('betterads_preview_url_link'),
                    'title' => Phpfox_Component::__getParam('betterads_preview_title'),
                    'body' => Phpfox_Component::__getParam('betterads_preview_body'),
                    'ad_id' => Phpfox_Component::__getParam('betterads_preview_ad_id'),
                ]
            ]
        ];
    }

} 
 if(PHpfox::isUser() && Phpfox::getLib('module')->getFullControllerName() != 'admincp.index') {
    if ($iId == 3 || $iId == 1) {
        $aBlocks[$iId][] = 'socialad.ad.display-list-' . $iId;
    } else {
        $sSaModuleId = Phpfox::getLib('module')->getModuleName();
        $aSaQuery = array(
            'user_id' => Phpfox::getUserId(),
            'block_id' => $iId,
            'module_id' => $sSaModuleId
        );
        Phpfox::getService('socialad.ad')->displayAdsOnBlock($aSaQuery);
        $aBlocks[$iId][] = 'socialad.ad.display-list';
    }
} 
 ;

if($iId == 12 && Phpfox::isUser() && Phpfox::isModule('ynchat')  && !in_array('ynchat.maincontent', $aBlocks[$iId])){
	$aBlocks[$iId][] = 'ynchat.maincontent';
}

; 
 ";s:29:"validator.admincp_settings_ad";s:223:"defined('PHPFOX') or exit('NO DICE!');

$aValidation['better_ads_number_ads_per_location'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => _p('number_of_ad_on_each_location_must_be_greater_than_0'),
]; 
 ";s:37:"friend.component_block_search_process";s:2053:"defined('PHPFOX') or exit('NO DICE!');

if ($sFriendModuleId == 'marketplace') {
    $aInviteCache = Phpfox::getService('marketplace')->isAlreadyInvited($this->getParam('friend_item_id', '0'),
        $aFriends);
    if (is_array($aInviteCache)) {
        foreach ($aFriends as $iKey => $aFriend) {
            if (isset($aInviteCache[$aFriend['user_id']])) {
                $aFriends[$iKey]['is_active'] = $aInviteCache[$aFriend['user_id']];
            }
        }

        $this->template()->assign(array(
                'aFriends' => $aFriends
            )
        );
    }
} 
 if ($sFriendModuleId == 'fevent')
{
	$aInviteCache = Phpfox::getService('fevent')->isAlreadyInvited($this->getParam('friend_item_id', '0'), $aFriends);
	if (is_array($aInviteCache))
	{
		foreach ($aFriends as $iKey => $aFriend)
		{
			if (isset($aInviteCache[$aFriend['user_id']]))
			{
				$aFriends[$iKey]['is_active'] = $aInviteCache[$aFriend['user_id']];
			}
		}
	
		$this->template()->assign(array(
				'aFriends' => $aFriends
			)
		);	
	}
} 
 if ($sFriendModuleId == 'advancedmarketplace') {
    $aInviteCache = Phpfox::getService('advancedmarketplace')->isAlreadyInvited($this->getParam('friend_item_id', '0'),
        $aFriends);
    if (is_array($aInviteCache)) {
        foreach ($aFriends as $iKey => $aFriend) {
            if (isset($aInviteCache[$aFriend['user_id']])) {
                $aFriends[$iKey]['is_active'] = $aInviteCache[$aFriend['user_id']];
            }
        }

        $this->template()->assign(array(
                'aFriends' => $aFriends
            )
        );
    }
} 
 if ($sFriendModuleId === 'coupon')
{
	$aInviteCache = Phpfox::getService('coupon')->isAlreadyInvited($this->getParam('friend_item_id', '0'), $aFriends);
	if (is_array($aInviteCache))
	{
		foreach ($aFriends as $iKey => $aFriend)
		{
			if (isset($aInviteCache[$aFriend['user_id']]))
			{
				$aFriends[$iKey]['is_active'] = $aInviteCache[$aFriend['user_id']];
			}
		}
	
		$this->template()->assign(array(
				'aFriends' => $aFriends
			)
		);	
	}
} 
 ";s:55:"mail.component_controller_compose_controller_validation";s:579:"$sModuleId = $this->request()->get('module_id');
if ($sModuleId && $sModuleId == 'marketplace' && ($iListingId = $this->request()->get('listing_id'))) {
    $aListing = Phpfox::getService('marketplace')->getListing($iListingId);

    if (!empty($aListing)) {
        $sPhraseVarName = 'hello_i_am_interested_in_your_listing_listing_title_listing_url';
        $this->template()->assign('sMessageClaim',
            _p($sPhraseVarName, [
                'listing_title' => $aListing['title'],
                'listing_url' => $aListing['bookmark_url']
            ]));
    }
} 
 ";s:38:"validator.admincp_settings_marketplace";s:359:"$aValidation = [
    'days_to_notify_expire' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Days to Notify Expiring Listing" must be greater or equal to 0'),
    ],
    'days_to_expire_listing' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Days to Expire" must be greater or equal to 0'),
    ],
]; 
 ";s:43:"validator.admincp_user_settings_marketplace";s:926:"$aValidation = [
    'points_marketplace' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Activity points" must be greater than or equal to 0'),
    ],
    'flood_control_marketplace' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Waiting time to add new listing" must be greater than or equal to 0'),
    ],
    'max_upload_size_listing' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Max file size for listing photos" must be greater than or equal to 0'),
    ],
    'total_photo_upload_limit' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Total photos can upload to each listing" must be greater than or equal to 0'),
    ],
    'marketplace_sponsor_price' => [
        'def' => 'currency',
        'min' => '0',
        'title' => _p('"Sponsor listing price" must be greater than or equal to 0'),
    ],
]; 
 ";s:37:"validator.admincp_settings_group_mail";s:422:"$aValidation['mail_from_name'] = [
    'def' => 'required',
    'title' => _p('"Name" is required')
];
$aValidation['email_from_email'] = [
    'def' => 'required',
    'title' => _p('"From" is required')
]; 
 $aValidation['mail_from_name'] = [
    'def' => 'required',
    'title' => _p('"Name" is required')
];
$aValidation['email_from_email'] = [
    'def' => 'required',
    'title' => _p('"From" is required')
]; 
 ";s:31:"validator.admincp_settings_mail";s:211:"$aValidation = [
    'chat_group_member_maximum' => [
        'def' => 'int:required',
        'min' => '2',
        'max' => '10',
        'title' => _p('mail_numbers_of_group_members_validation'),
    ]
]; 
 ";s:44:"admincp.component_controller_product_index_2";s:346:"if (Phpfox::isModule('admincp') && isset($sUpgrade) == true && 'younetevent' == $sUpgrade)
{
	$aProducts = Phpfox::getService('admincp.product')->getForEdit('younetevent');
	if(isset($aProducts['version']) && $aProducts['version'] == '3.04')
	{
		$this->url()->send('admincp.product', null, _p('u_warning'));
		$mReturnFromPlugin = true;
	}
} 
 ";s:43:"feed.component_block_display_process_header";s:225:"if (!empty($this->_aVars['aFeedCallback']['disable_share']) && defined('PHPFOX_IS_FEVENT_VIEW') && Phpfox::getUserParam('fevent.can_post_comment_on_event')) {
    $this->_aVars['aFeedCallback']['disable_share'] = false;
} 
 ";s:34:"feed.template_block_comment_border";s:120:"if (Phpfox::getLib('module')->getFullControllerName() == 'fevent.index')
{
	Phpfox::getBlock('fevent.rsvp-entry');
} 
 ";s:39:"fevent.component_controller_index_clean";s:4:" 
 ";s:46:"fevent.component_controller_pagecalendar_clean";s:4:" 
 ";s:38:"groups.component_controller_view_clean";s:4:" 
 ";s:37:"pages.component_controller_view_clean";s:4:" 
 ";s:65:"photo.component_service_callback_getactivityfeed__get_item_before";s:442:"if (defined('PHPFOX_IS_FEVENT_VIEW')) {
    $sFeedTable = 'fevent_feed';
} else {
    if ($iFeedId && isset($aPhotoIte['module_id']) && $aPhotoIte['module_id'] == 'fevent') {
        $sFeedTable = 'fevent_feed';
    }
} 
 defined('PHPFOX') or exit('NO DICE!');
if (Phpfox_Request::instance()->get('req1') == 'auction' || (!empty($aPhotoIte['module_id']) && $aPhotoIte['module_id'] == 'ecommerce')) {
    $sFeedTable = 'ecommerce_feed';
} 
 ";s:27:"template_template_getmenu_1";s:821:"//     for module which support page
if (Phpfox::isUser() 
    && Phpfox::isModule('fevent') 
    && $sConnection === null 
    && 'fevent.index' == Phpfox::getLib('module')->getFullControllerName()
    )
{
   $sConnection = Phpfox::getLib('module')->getFullControllerName();
   $bIsModulePage = true;

   $sConnection = preg_replace('/(.*)\.profile/i', '\\1.index', $sConnection);
  
   if (($sConnection == 'user.photo' && $oReq->get('req3') == 'register') || ($sConnection == 'invite.index' && $oReq->get('req2') == 'register'))
   {
        return [];
   }

   if('fevent.index' == $sConnection){
        $sCachedId = $oCache->set(array('theme', 'menu_' . str_replace(array('/', '\\'), '_', $sConnection) . (Phpfox::isUser() ? Phpfox::getUserBy('user_group_id') : 0)));
        $oCache->remove($sCachedId);
   }
} 
 ";s:27:"template_template_getmenu_2";s:586:"//     for module which support page
if (Phpfox::isUser() 
  && defined('PHPFOX_IS_PAGES_VIEW') 
  && Phpfox::isModule('fevent') 
  && 'fevent.index' == $sConnection
  )
{
    if(is_array($aMenus) == true){
         foreach($aMenus as $ynfeKey => $ynfeVal){
              if(is_array($ynfeVal) == true && isset($ynfeVal['url']) && 'fevent.add' == $ynfeVal['url']){                        
                   $ynfeiPage = $this->_aVars['aPage']['page_id'];
                   $aMenus[$ynfeKey]['url'] = 'fevent.add.module_pages.item_' . $ynfeiPage;
              }
         }
    }
} 
 ";s:42:"user.component_block_admincp_setting_clean";s:6403:"$aSettings = $this->template()->getVar('aSettings');
$product_id = 'younetevent';
if (isset($aSettings[$product_id])) {
    $aModuleSettings = $aSettings[$product_id][$this->request()->get('module_id')];
    $support_sponsor = "";
    foreach ($aModuleSettings as $aKey => $aVal) {
        if (preg_match('/_sponsor_price/i', $aVal['name'])) {

            $aVals = Phpfox::getLib('parse.format')->isSerialized($aVal['value_actual']) ? unserialize($aVal['value_actual']) : 'No price set';
            if (is_array($aVals) && is_numeric(reset($aVals))) { // so a module can have 2 settings with currencies (music.song, music.album)
                $this->setParam('currency_value_val[value_actual][' . $aVal['setting_id'] . ']', $aVals);
            }
            $aSettings[$product_id][$this->request()->get('module_id')][$aKey]['isCurrency'] = 'Y';
            $support_sponsor = [];
            $support_sponsor[$product_id][$this->request()->get('module_id')][$aKey] = $aSettings[$product_id][$this->request()->get('module_id')][$aKey];
            $param_id = $support_sponsor[$product_id][$this->request()->get('module_id')][$aKey]['setting_id'];
        }
    }

    if ($support_sponsor) {
        $oTemplate = Phpfox::getLib('template');

        $oTemplate->assign(array(
            'aSettings' => $support_sponsor,
        ));
        $oTemplate->getTemplate('user.block.admincp.setting');
        ?>

        <script type="text/javascript">
            $a = $(document.getElementsByName('val[value_actual][<?php echo $param_id; ?>]'));
            if($a.first().parent().parent().hasClass('table1'))
                $(document.getElementsByName('val[sponsor_setting_id_<?php echo $param_id; ?>]')).last().parent().parent().removeClass('table2').addClass('table1');
            else
                $(document.getElementsByName('val[sponsor_setting_id_<?php echo $param_id; ?>]')).last().parent().parent().removeClass('table1').addClass('table2'); 
            
            $(document.getElementsByName('val[value_actual][<?php echo $param_id; ?>]')).first().parent().parent().remove();
        </script>

        <?php
    }
} 
 $aSettings = $this->template()->getVar('aSettings');
$product_id = 'younet_advmarketplace4';
if (isset($aSettings[$product_id])) {
$aModuleSettings = $aSettings[$product_id][$this->request()->get('module_id')];
$support_sponsor = "";
foreach ($aModuleSettings as $aKey => $aVal) {
    if (preg_match('/_sponsor_price/i', $aVal['name'])) {

        $aVals = Phpfox::getLib('parse.format')->isSerialized($aVal['value_actual']) ? unserialize($aVal['value_actual']) : 'No price set';
        if (is_array($aVals) && is_numeric(reset($aVals))) { // so a module can have 2 settings with currencies (music.song, music.album)
            $this->setParam('currency_value_val[value_actual][' . $aVal['setting_id'] . ']', $aVals);
        }
        $aSettings[$product_id][$this->request()->get('module_id')][$aKey]['isCurrency'] = 'Y';
        $support_sponsor = array();
        $support_sponsor[$product_id][$this->request()->get('module_id')][$aKey] = $aSettings[$product_id][$this->request()->get('module_id')][$aKey];
        $param_id = $support_sponsor[$product_id][$this->request()->get('module_id')][$aKey]['setting_id'];
    }
}

if ($support_sponsor) {
$oTemplate = Phpfox::getLib('template');

$oTemplate->assign(array(
    'aSettings' => $support_sponsor,
));
$oTemplate->getTemplate('user.block.admincp.setting');
?>

<script type="text/javascript">
  $a = $(document.getElementsByName('val[value_actual][<?php echo $param_id; ?>]'));
  var color = $a.first().parent().parent().parent().css('background-color');
  $(document.getElementsByName('val[value_actual][<?php echo $param_id; ?>]')).
    first().
    parent().
    parent().
    remove();
  if (color == 'rgb(255, 255, 255)') {
    $(document.getElementsByName('val[value_actual][<?php echo $param_id; ?>]')).
      last().
      parent().
      parent().
      removeClass('table2').
      addClass('table1');
  }
  else {
    $(document.getElementsByName('val[value_actual][<?php echo $param_id; ?>]')).
      last().
      parent().
      parent().
      removeClass('table1').
      addClass('table2');
  }
</script>

    <?php
    }
    } 
 $aSettings = $this->template()->getVar('aSettings');
$product_id = 'younet_coupon4';
if (isset($aSettings[$product_id])) {
    $aModuleSettings = $aSettings[$product_id][$this->request()->get('module_id')];
    $support_sponsor = "";
    foreach ($aModuleSettings as $aKey => $aVal) {
        if (preg_match('/_sponsor_price/i', $aVal['name'])) {

            $aVals = Phpfox::getLib('parse.format')->isSerialized($aVal['value_actual']) ? unserialize($aVal['value_actual']) : 'No price set';
            if (is_array($aVals) && is_numeric(reset($aVals))) { // so a module can have 2 settings with currencies (music.song, music.album)
                $this->setParam('currency_value_val[value_actual][' . $aVal['setting_id'] . ']', $aVals);
            }
            $aSettings[$product_id][$this->request()->get('module_id')][$aKey]['isCurrency'] = 'Y';
            $support_sponsor = array();
            $support_sponsor[$product_id][$this->request()->get('module_id')][$aKey] = $aSettings[$product_id][$this->request()->get('module_id')][$aKey];
            $param_id = $support_sponsor[$product_id][$this->request()->get('module_id')][$aKey]['setting_id'];
        }
    }

    if ($support_sponsor) {
        $oTemplate = Phpfox::getLib('template');

        $oTemplate->assign(array(
            'aSettings' => $support_sponsor,
        ));
        $oTemplate->getTemplate('user.block.admincp.setting');
        ?>

        <script type="text/javascript">
            $a = $(document.getElementsByName('val[value_actual][<?php echo $param_id; ?>]'));
            if($a.first().parent().parent().hasClass('table1'))
                $(document.getElementsByName('val[sponsor_setting_id_<?php echo $param_id; ?>]')).last().parent().parent().removeClass('table2').addClass('table1');
            else
                $(document.getElementsByName('val[sponsor_setting_id_<?php echo $param_id; ?>]')).last().parent().parent().removeClass('table1').addClass('table2'); 
            
            $(document.getElementsByName('val[value_actual][<?php echo $param_id; ?>]')).first().parent().parent().remove();
        </script>

        <?php
    }
} 
 ";s:33:"validator.admincp_settings_fevent";s:1978:"$aValidation = [
    'fevent_max_instance_repeat_event' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('"Maximum instances of each repeat events" must be greater than 0'),
    ],
    'subscribe_within_day' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('"Send email to subscribers information of new events which happen within days" must be greater than 0'),
    ],
    'fevent_time_to_show_countdown' => [
        'def' => 'int:required',
        'min' => '0',
        'title' => _p('"Time to show count down section in event details" must be number and greater than or equal to 0'),
    ]
];

if(!empty($_POST['val']['value'])) {
    $isValid = true;
    $postValues = $_POST['val']['value'];
    if($custom_url = trim($postValues['fevent_custom_url'])) {
        $oParse = Phpfox::getLib('parse.input');
        $custom_url = $oParse->clean($custom_url);
        $url = "http://test.com/" . $custom_url;
        if (strlen($custom_url) > 20) {
            $isValid = false;
            $aValidation['fevent_custom_url'] = [
                'title' => _p('url_name_exceeds_twenty_characters'),
            ];
        }

        if (!filter_var($url, FILTER_VALIDATE_URL)) {
            $isValid = false;
            $aValidation['fevent_custom_url'] = [
                'title' => _p('invalid_url_name'),
            ];
        }
    } else {
        $custom_url = 'fevent';
    }

    $check = db()
        ->select('rewrite_id')
        ->from(Phpfox::getT('rewrite'))
        ->where('url = \'fevent\'')
        ->execute('getSlaveField');

    if (empty($check)) {
        db()->insert(Phpfox::getT('rewrite'), [
            'url' => 'fevent',
            'replacement' => $custom_url,
        ]);
    } else {
        db()->update(Phpfox::getT('rewrite'), [
            'replacement' => $custom_url
        ], 'url = \'fevent\'');
    }

    $oCache = Phpfox::getLib('cache')->remove('rewrite');
} 
 ";s:38:"validator.admincp_user_settings_fevent";s:1165:"$aValidation = [
    'points_fevent' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Points received when adding a events within the advanced event" must be greater than or equal to 0'),
    ],
    'max_upload_size_event' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Max file size for events photos" must be greater than or equal to 0'),
    ],
    'total_mass_emails_per_hour' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Time to wait until user are allowed to send out another mass email" must be greater than or equal to 0'),
    ],
    'flood_control_events' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Time to wait before user can add new event" must be greater than or equal to 0'),
    ],
    'fevent_sponsor_price' => [
        'def' => 'currency',
        'min' => '0',
        'title' => _p('"Sponsor event price" must be greater than or equal to 0'),
    ],
    'max_upload_image_event' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Max photos for events" must be greater than or equal to 0'),
    ],
]; 
 ";s:27:"mail.component_ajax_compose";s:259:"if(Phpfox::isAppActive('P_AdvMarketplace') && $this->get('is_advancedmarketpalce_contact_seller') && $this->get('listing_id')) {
    echo '<script type="text/javascript">appAdvMarketplace.prepareComposeMessage('. $this->get('listing_id') .');</script>';
} 
 ";s:47:"mail.component_controller_compose_controller_to";s:505:"if(Phpfox::isAppActive('P_AdvMarketplace') && $this->request()->get('is_advancedmarketpalce_contact_seller') && $bClaiming) {
    $this->template()->assign([
        'iPageId' => null,
        'aPage' => null,
        'sMessageClaim' => null
    ]);
    $tempVals = $this->request()->get('val');
    if(!empty($tempVals['page_id'])) {
        unset($tempVals['page_id']);
        $this->request()->set('val', $tempVals);
    }
    if(!Phpfox_Error::isPassed()) {
        Phpfox_Error::reset();
    }
} 
 ";s:34:"mail.service_mail_canmessageuser_1";s:149:"if(Phpfox::isAppActive('P_AdvMarketplace') && $this->request()->get('is_advancedmarketpalce_contact_seller')) {
    $bCanOverrideChecks = true;
} 
 ";s:46:"validator.admincp_settings_advancedmarketplace";s:2030:"$aValidation['how_many_sponsored_listings'] = [
    'def' => 'int',
    'min' => '0',
    'title' => _p('"How Many Sponsored Listings To Show" must be greater than or equal to 0.'),
];
$aValidation['total_listing_more_from'] = [
    'def' => 'int',
    'min' => '0',
    'title' => _p('"Total More From Listings to Display" must be greater than or equal to 0.'),
];
$aValidation['advmarketplace_days_to_notify_expire'] = [
    'def' => 'int',
    'min' => '0',
    'title' => _p('"Days to Notify Expiring Listing" must be greater than or equal to 0.'),
];

$isValid = true;
if (!empty($_POST['val']['value']['advmarketplace_custom_url']) && trim($_POST['val']['value']['advmarketplace_custom_url'])) {
    $oParse = Phpfox::getLib('parse.input');
    $custom_url = trim($_POST['val']['value']['advmarketplace_custom_url']);
    $custom_url = $oParse->clean($custom_url);
    $url = "http://test.com/" . $custom_url;
    if (strlen($custom_url) > 20) {
        $isValid = false;
        $aValidation['advmarketplace_custom_url'] = [
            'title' => _p('url_name_exceeds_twenty_characters'),
        ];
    }

    if (!filter_var($url, FILTER_VALIDATE_URL)) {
        $isValid = false;
        $aValidation['advmarketplace_custom_url'] = [
            'title' => _p('invalid_url_name'),
        ];
    }
} else {
    $custom_url = 'advancedmarketplace';
}

if ($isValid) {
    $aRewrite = db()
        ->select('*')
        ->from(Phpfox::getT('rewrite'))
        ->where('url = \'advancedmarketplace\'')
        ->execute('getSlaveRow');

    if (empty($aRewrite)) {
        db()->insert(Phpfox::getT('rewrite'), [
            'url' => 'advancedmarketplace',
            'replacement' => $custom_url,
        ]);
    } else {
        db()->update(Phpfox::getT('rewrite'), array(
            'replacement' => $custom_url
        ), 'url = \'advancedmarketplace\'');
    }

//    $oCache = Phpfox::getLib('cache')->remove('rewrite');
    Phpfox::getLib('cache')->remove(); // remove rewrite and menu for every user group
} 
 ";s:51:"validator.admincp_user_settings_advancedmarketplace";s:1125:"$aValidation = [
    'max_upload_size_listing' => [
        'def' => 'int:required',
        'min' => '0',
        'title' => _p('advancedmarketplace_limit_must_greater_or_equal_0',
            ['var_name' => 'Max file size for photos upload']),
    ],
    'flood_control_advancedmarketplace' => [
        'def' => 'int:required',
        'min' => '0',
        'title' => _p('advancedmarketplace_limit_must_greater_or_equal_0',
            ['var_name' => 'How many minutes should a user wait before they can create another advancedmarketplace listing?']),
    ],
    'total_photo_upload_limit' => [
        'def' => 'int:required',
        'min' => '0',
        'title' => _p('advancedmarketplace_limit_must_greater_or_equal_0',
            ['var_name' => 'Number of photos that a user can upload to a advancedmarketplace listing each time']),
    ],
    'points_advancedmarketplace' => [
        'def' => 'int:required',
        'min' => '0',
        'title' => _p('advancedmarketplace_limit_must_greater_or_equal_0',
            ['var_name' => 'Number of activity points user get when adding a new listing']),
    ],
]; 
 ";s:43:"mobile.api_resource_base_generate_array_end";s:2760:"if (Phpfox::isAppActive('P_Reaction')) {
    if ($this->getResourceName() == 'feed' || $this->getResourceName() == 'comment') {
        $itemId = $this->getItemId();
        if($this->getResourceName() == 'comment') {
            $itemId = $this->id;
        }
        if (!empty($this->getIsLiked())) {
            $result['user_reacted'] = (new Apps\P_Reaction\Service\Api\PReactionApi())->getUserReacted($itemId, $this->like_type_id);
        }
        if ((isset($this->rawData['feed_total_like']) && (int)$this->rawData['feed_total_like'] > 0) ||
            (isset($this->rawData['total_like']) && (int)$this->rawData['total_like'] > 0)
        ) {
            list(, $mostReactions) = Phpfox::getService('preaction')->getMostReaction($this->like_type_id, $itemId, (isset($this->rawData['feed_table_prefix']) ? $this->rawData['feed_table_prefix'] : ''));
            if (count($mostReactions)) {
                foreach ($mostReactions as $most_reaction) {
                    $result['most_reactions'][] = Apps\P_Reaction\Api\Resource\PReactionResource::populate($most_reaction)->displayShortFields()->toArray();
                }
            }
        }
    }

    if ($this->load_feed_param && !empty($result['feed_param']) && is_array($result['feed_param'])) {
        $result['feed_param']['user_reacted'] = (new Apps\P_Reaction\Service\Api\PReactionApi())->getUserReacted($result['feed_param']['item_id'], $result['feed_param']['like_type_id']);
        $likes = Phpfox::getService('like')->getAll($result['feed_param']['like_type_id'], $result['feed_param']['item_id'], (isset($this->rawData['feed_table_prefix']) ? $this->rawData['feed_table_prefix'] : ''));
        if (isset($likes['likes'])) {
            if (!empty($likes['likes']['most_reactions'])) {
                foreach ($likes['likes']['most_reactions'] as $most_reaction) {
                    $result['feed_param']['most_reactions'][] = Apps\P_Reaction\Api\Resource\PReactionResource::populate($most_reaction)->displayShortFields()->toArray();
                }
            }
            if (isset($likes['likes']['phrase'])) {
                $result['feed_param']['like_phrase'] = html_entity_decode($likes['likes']['phrase'], ENT_QUOTES);
            }
        }
    }
} 
 if (Phpfox::isAppActive('P_StatusBg') && ($this->getResourceName() == 'feed')) {
    if (isset($this->rawData['status_background'])) {
        $result['status_background'] = $this->rawData['status_background'];
    } elseif (isset($this->rawData['item_id'], $this->rawData['type_id'], $this->rawData['user_id'])) {
        $result['status_background'] = Phpfox::getService('pstatusbg')->getFeedStatusBackground($this->rawData['item_id'], $this->rawData['type_id'], $this->rawData['user_id']);
    }
} 
 ";s:37:"mobile.service_core_api_site_settings";s:284:"if (Phpfox::isAppActive('P_Reaction')) {
    $reactions = (new Apps\P_Reaction\Service\Api\PReactionApi())->findAll(['is_get_array' => true]);
    $data['general']['preaction'] = $reactions;
} 
 if (Phpfox::isAppActive('P_StatusBg')) {
    $data['general']['pstatusbg'] = true;
} 
 ";s:34:"mobile.service_like_api_create_end";s:507:"if(Phpfox::isAppActive('P_Reaction')) {
    $reactions = [];
    if (!empty($like['most_reactions'])) {
        foreach ($like['most_reactions'] as $most_reaction) {
            $reactions[] = Apps\P_Reaction\Api\Resource\PReactionResource::populate($most_reaction)->displayShortFields()->toArray();
        }
    }
    $response['most_reactions'] = $reactions;
    $response['user_reacted'] = (new Apps\P_Reaction\Service\Api\PReactionApi())->getUserReacted($params['item_id'], $params['item_type']);
} 
 ";s:36:"mobile.service_like_api_create_start";s:327:"if(Phpfox::isAppActive('P_Reaction')) {
    $defaultLike = Phpfox::getService('preaction')->getDefaultLike();
    $reactionId = $this->request()->get('reaction_id', $defaultLike['id']);
    $result = Phpfox::getService('like.process')->add($params['item_type'], $params['item_id'], null, null, [], '', $reactionId, true);
} 
 ";s:34:"mobile.service_like_api_delete_end";s:405:"if(Phpfox::isAppActive('P_Reaction')) {
    $reactions = [];
    if (!empty($like['most_reactions'])) {
        foreach ($like['most_reactions'] as $most_reaction) {
            $reactions[] = Apps\P_Reaction\Api\Resource\PReactionResource::populate($most_reaction)->displayShortFields()->toArray();
        }
    }
    $response['most_reactions'] = $reactions;
    $response['user_reacted'] = null;
} 
 ";s:33:"mobile.service_like_api_get_likes";s:122:"if(Phpfox::isAppActive('P_Reaction')) {
    $like = $aFeed = Phpfox::getService('like')->getAll($itemType, $itemId);
} 
 ";s:31:"mobile_api_routing_registration";s:4245:"/**
 * Define RestAPI services
 */

$this->apiNames['mobile.preaction_api'] = Apps\P_Reaction\Service\Api\PReactionApi::class;

/**
 * Register Resource Name, This help auto generate routing for the resource
 * Note: resource name must be mapped correctly to resource api
 */

$this->resourceNames[Apps\P_Reaction\Api\Resource\PReactionResource::RESOURCE_NAME] = 'mobile.preaction_api'; 
 /**
 * Define RestAPI services
 */

$this->apiNames['mobile.pstatusbg_collection_api'] = \Apps\P_StatusBg\Service\Api\PStatusBgCollectionApi::class;
$this->apiNames['mobile.pstatusbg_background_api'] = \Apps\P_StatusBg\Service\Api\PStatusBgBackgroundApi::class;

/**
 * Register Resource Name, This help auto generate routing for the resource
 * Note: resource name must be mapped correctly to resource api
 */

$this->resourceNames[\Apps\P_StatusBg\Api\Resource\PStatusBgCollectionResource::RESOURCE_NAME] = 'mobile.pstatusbg_collection_api';
$this->resourceNames[\Apps\P_StatusBg\Api\Resource\PStatusBgBackgroundResource::RESOURCE_NAME] = 'mobile.pstatusbg_background_api'; 
 if (Phpfox::isModule('fevent')) {
    /**
     * Define RestAPI services
     */
    $this->apiNames['mobile.fevent_api'] = \Apps\P_AdvEventAPI\Service\EventApi::class;
    $this->apiNames['mobile.fevent_category_api'] = \Apps\P_AdvEventAPI\Service\EventCategoryApi::class;
    $this->apiNames['mobile.fevent_invite_api'] = \Apps\P_AdvEventAPI\Service\EventInviteApi::class;
    $this->apiNames['mobile.fevent_photo_api'] = \Apps\P_AdvEventAPI\Service\EventPhotoApi::class;
    $this->apiNames['mobile.fevent_admin_api'] = \Apps\P_AdvEventAPI\Service\EventAdminApi::class;
    $this->specialModules['fevent'] = 'fevent';

    $this->objectResources['fevent'] = \Apps\P_AdvEventAPI\Api\Resource\EventResource::class;
    /**
     * Register Resource Name, This help auto generate routing for the resource
     * Note: resource name must be mapped correctly to resource api
     */
    $this->resourceNames[\Apps\P_AdvEventAPI\Api\Resource\EventResource::RESOURCE_NAME] = 'mobile.fevent_api';
    $this->resourceNames[\Apps\P_AdvEventAPI\Api\Resource\EventCategoryResource::RESOURCE_NAME] = 'mobile.fevent_category_api';
    $this->resourceNames[\Apps\P_AdvEventAPI\Api\Resource\EventInviteResource::RESOURCE_NAME] = 'mobile.fevent_invite_api';
    $this->resourceNames[\Apps\P_AdvEventAPI\Api\Resource\EventPhotoResource::RESOURCE_NAME] = 'mobile.fevent_photo_api';
    $this->resourceNames[\Apps\P_AdvEventAPI\Api\Resource\EventAdminResource::RESOURCE_NAME] = 'mobile.fevent_admin_api';

    Phpfox::getService('mobile.helper.feedPresentation')
        ->addEmbedTypes('fevent_comment', \Apps\Core_MobileApi\Api\Resource\FeedEmbed\StatusComment::class);
} 
 if (Phpfox::isModule('advancedmarketplace')) {
    /**
     * Define RestAPI services
     */
    $this->apiNames['mobile.advmarketplaceapi_api'] = \Apps\P_AdvMarketplaceAPI\Service\MarketplaceApi::class;
    $this->apiNames['mobile.advmarketplaceapi_category_api'] = \Apps\P_AdvMarketplaceAPI\Service\MarketplaceCategoryApi::class;
    $this->apiNames['mobile.advmarketplaceapi_photo_api'] = \Apps\P_AdvMarketplaceAPI\Service\MarketplacePhotoApi::class;
    $this->apiNames['mobile.advmarketplaceapi_invite_api'] = \Apps\P_AdvMarketplaceAPI\Service\MarketplaceInviteApi::class;
    $this->specialModules['advmarketplaceapi'] = 'advancedmarketplace';

    $this->objectResources['advancedmarketplace'] = \Apps\P_AdvMarketplaceAPI\Api\Resource\MarketplaceResource::class;
    /**
     * Register Resource Name, This help auto generate routing for the resource
     * Note: resource name must be mapped correctly to resource api
     */
    $this->resourceNames[\Apps\P_AdvMarketplaceAPI\Api\Resource\MarketplaceResource::RESOURCE_NAME] = 'mobile.advmarketplaceapi_api';
    $this->resourceNames[\Apps\P_AdvMarketplaceAPI\Api\Resource\MarketplaceCategoryResource::RESOURCE_NAME] = 'mobile.advmarketplaceapi_category_api';
    $this->resourceNames[\Apps\P_AdvMarketplaceAPI\Api\Resource\MarketplacePhotoResource::RESOURCE_NAME] = 'mobile.advmarketplaceapi_photo_api';
    $this->resourceNames[\Apps\P_AdvMarketplaceAPI\Api\Resource\MarketplaceInviteResource::RESOURCE_NAME] = 'mobile.advmarketplaceapi_invite_api';
} 
 ";s:41:"mobile.service_feed_api_create_status_end";s:410:"if (Phpfox::isAppActive('P_StatusBg') && !empty($values['parent_user_id'])) {
    if (!empty($id) && !empty($background)) {
        $statusId = $this->database()->select('item_id')->from(':feed')->where('feed_id = ' . (int)$id)->execute('getField');
        \Phpfox::getService('pstatusbg.process')->addBackgroundForStatus('feed_comment', $statusId, $background, $this->getUser()->getId(), 'feed');
    }
} 
 ";s:43:"mobile.service_feed_api_create_status_start";s:203:"if (Phpfox::isAppActive('P_StatusBg')) {
    $background = $this->request()->get('status_background_id');
    if (!empty($background)) {
        $values['status_background_id'] = $background;
    }
} 
 ";s:47:"mobile.service_feed_api_get_status_for_edit_end";s:362:"if (Phpfox::isAppActive('P_StatusBg')) {
    $typeId = $feed['type_id'];
    $itemId = $feed['item_id'];

    $statusBg = \Phpfox::getService('pstatusbg')->getFeedStatusBackground($feed['item_id'], $feed['type_id'], $feed['user_id'], true);
    if (!empty($statusBg)) {
        $item['item']['status_background_id'] = (int)$statusBg['background_id'];
    }
} 
 ";s:42:"mobile.service_feed_api_process_update_end";s:4809:"if (Phpfox::isAppActive('P_StatusBg') && $result) {
    $bgId = $this->request()->get('status_background_id');
    $ownerUserId = $this->getUser()->getId();
    $statusId = 0;
    $referenceFeed = [];
    if (!empty($values['parent_item_type']) && !empty($values['parent_item_id']) && !empty($callback)) {
        $feed = $this->database()->select('item_id, type_id, user_id')->from(":${callback['table_prefix']}feed")->where(['feed_id' => $id])->execute('getRow');
        $bgItemId = isset($feed['item_id']) ? $feed['item_id'] : 0;
        $bgItemType = isset($feed['type_id']) ? $feed['type_id'] : (isset($callback['feed_id']) ? $callback['feed_id'] : '');
        $ownerUserId = isset($feed['user_id']) ? $feed['user_id'] : $ownerUserId;
    } elseif (!empty($values['parent_user_id'])) {
        $feed = $this->database()->select('item_id, type_id, user_id, time_stamp')->from(':feed')->where(['feed_id' => $id])->execute('getRow');
        $bgItemId = isset($feed['item_id']) ? $feed['item_id'] : 0;
        $bgItemType = isset($feed['type_id']) ? $feed['type_id'] : 'feed_comment';
        $ownerUserId = isset($feed['user_id']) ? $feed['user_id'] : $ownerUserId;
        if (!empty($feed)) {
            $statusId = db()->select('item_id')->from(':feed')->where([
                'user_id' => $ownerUserId,
                'type_id' => 'user_status',
                'time_stamp' => $feed['time_stamp']
            ])->executeField();
        }
    } else {
        $feed = $this->database()->select('item_id, type_id, user_id, time_stamp')->from(':feed')->where(['feed_id' => $id])->execute('getRow');
        $bgItemId = isset($feed['item_id']) ? $feed['item_id'] : 0;
        $bgItemType = isset($feed['type_id']) ? $feed['type_id'] : 'user_status';
        $ownerUserId = isset($feed['user_id']) ? $feed['user_id'] : $ownerUserId;
        //Get feed on tag friend
        if (!empty($feed)) {
            $referenceFeed = db()->select('item_id')->from(':feed')->where([
                'user_id' => $ownerUserId,
                'type_id' => 'feed_comment',
                'time_stamp' => $feed['time_stamp']
            ])->executeRows();
        }
    }
    //Update background
    if ($bgItemId && $bgItemType) {
        $oldBackground = \Phpfox::getService('pstatusbg')->getFeedStatusBackground($bgItemId, $bgItemType, $ownerUserId, true);
        if (!empty($oldBackground)) {
            if ($bgId) {
                $this->database()->update(':pstatusbg_status_background', [
                    'background_id' => $bgId,
                    'time_stamp' => PHPFOX_TIME
                ], 'id =' . (int)$oldBackground['id']);
            } else {
                $this->database()->delete(':pstatusbg_status_background', ['id' => $oldBackground['id']]);
            }
        } else {
            \Phpfox::getService('pstatusbg.process')->addBackgroundForStatus($bgItemType, $bgItemId, $bgId, $ownerUserId, isset($values['parent_item_type']) ? $values['parent_item_type'] : 'user');
        }
    }

    if ($statusId) {
        $oldBackgroundStatus = \Phpfox::getService('pstatusbg')->getFeedStatusBackground($statusId, 'user_status', $ownerUserId, true);
        if (!empty($oldBackgroundStatus)) {
            if ($bgId) {
                $this->database()->update(':pstatusbg_status_background', [
                    'background_id' => $bgId,
                    'time_stamp' => PHPFOX_TIME
                ], 'id =' . (int)$oldBackgroundStatus['id']);
            } else {
                $this->database()->delete(':pstatusbg_status_background', ['id' => $oldBackgroundStatus['id']]);
            }
        } else {
            \Phpfox::getService('pstatusbg.process')->addBackgroundForStatus('user_status', $statusId, $bgId, $ownerUserId, isset($values['parent_item_type']) ? $values['parent_item_type'] : 'user');
        }
    }
    if (!empty($referenceFeed)) {
        foreach ($referenceFeed as $reference) {
            $oldRefer = \Phpfox::getService('pstatusbg')->getFeedStatusBackground($reference['item_id'], 'feed_comment', $ownerUserId, true);
            if (!empty($oldRefer)) {
                if ($bgId) {
                    $this->database()->update(':pstatusbg_status_background', [
                        'background_id' => $bgId,
                        'time_stamp' => PHPFOX_TIME
                    ], 'id =' . (int)$oldRefer['id']);
                } else {
                    $this->database()->delete(':pstatusbg_status_background', ['id' => $oldRefer['id']]);
                }
            } else {
                \Phpfox::getService('pstatusbg.process')->addBackgroundForStatus('feed_comment', $reference['item_id'], $bgId, $ownerUserId, isset($values['parent_item_type']) ? $values['parent_item_type'] : 'user');
            }
        }
    }
} 
 ";s:27:"feed.service_feed_get_start";s:165:"if (defined('PHPFOX_IS_MOBILE_API_CALL') && PHPFOX_IS_MOBILE_API_CALL) {
    $extra .= Phpfox::getService('mobile.device')->getExtraConditions('feed.type_id');
} 
 ";s:9:"run_start";s:298:"/**
 * Auto login user
 */

if (isset($_SERVER['x-access-token']) || isset($_SERVER['HTTP_X_ACCESS_TOKEN'])) {
    $token = (isset($_SERVER['x-access-token']) ? $_SERVER['x-access-token'] : $_SERVER['HTTP_X_ACCESS_TOKEN']);
    Phpfox::getService('mobile.auth_api')->setUserFromToken($token);
} 
 ";s:42:"user.component_controller_setting_settitle";s:3458:"if (!empty($aGateways)) {
    foreach ($aGateways as $key => $gateway) {
        if ($gateway['gateway_id'] == 'paypal') {
            $mobileUserGateway = Phpfox::getService('api.gateway')->getUserGateways($aUser['user_id']);
            $userValue = '';
            if (isset($mobileUserGateway['paypal']) && !empty($mobileUserGateway['paypal']['gateway'])) {
                $userValue = isset($mobileUserGateway['paypal']['gateway']['merchant_id']) ? $mobileUserGateway['paypal']['gateway']['merchant_id'] : '';
            }
            $aGateways[$key]['custom']['merchant_id'] = [
                'phrase'      => _p('merchant_id'),
                'phrase_info' => _p('the_encrypted_id_of_your_paypal_account'),
                'value'       => '',
                'user_value'  => $userValue
            ];
        }
    }
} 
 ;

if(Phpfox::isUser() && Phpfox::isModule('ynadvancedpayment'))
{
    if (!empty($aGateways))
    {
        foreach ($aGateways as $keyaGateways => $valueaGateways) {
            switch ($valueaGateways['gateway_id']) {
                case 'authorizenet':                        
                    $authorizenet_guideline_value = _p('ynadvancedpayment.ynadvancedpayment_authorizenet_guideline'
                            , array(
                                'silentpost_url' => Phpfox::getParam('core.path_file') . 'module/ynadvancedpayment/static/php/silentpost.php',
                            )
                        );
                    $aGateways[$keyaGateways]['custom']['authorizenet_guideline'] = array(
                        'phrase' => _p('ynadvancedpayment.authorize_guideline'),
                        'type' => 'textarea',
                        'phrase_info' => '',
                        'user_value' => $authorizenet_guideline_value, 
                    );                    
                    break;

                case 'ccbill':    
                    $ccbill_guideline_value = _p('ynadvancedpayment.ynadvancedpayment_guideline'
                            , array(
                                'success_url' => Phpfox::getParam('core.path') . 'api/gateway/callback/ccbill/status_ccbill-success/', 
                                'failure_url' => Phpfox::getParam('core.path') . 'api/gateway/callback/ccbill/status_ccbill-fail/', 
                            )
                        );
                    $aGateways[$keyaGateways]['custom']['ccbill_guideline'] = array(
                        'phrase' => _p('ynadvancedpayment.ccbill_guideline'),
                        'type' => 'textarea',
                        'phrase_info' => '',
                        'user_value' => $ccbill_guideline_value, 
                    );                    
                    break;

                case 'itransact':
                    $itransact_guideline_value = _p('ynadvancedpayment_itransact_guideline_user',[
                        'postback_url' =>  Phpfox::getParam('core.path_file') . 'module/ynadvancedpayment/static/php/postback.php'
                    ]);
                    $aGateways[$keyaGateways]['custom']['itransact_guideline'] = array(
                        'phrase' => _p('itransact_guideline'),
                        'type' => 'textarea',
                        'phrase_info' => '',
                        'user_value' => $itransact_guideline_value,
                    );
                    break;
            }
        }
    }        
}

; 
 ";s:30:"user.service_auth_handlestatus";s:497:"$mobileReq1 = \Phpfox_Request::instance()->get('req1');
$mobileReq2 = \Phpfox_Request::instance()->get('req2');

if ($mobileReq1 == 'mobile' && $mobileReq2 == 'token') {
    if (
        (Phpfox::isUser() && Phpfox::getUserBy('status_id') == 1 && Phpfox::getParam('user.logout_after_change_email_if_verify') && !isset($bEmailVerification)) ||
        (Phpfox::isUser() && in_array(Phpfox::getUserBy('view_id'), [2, 1]))
    ) {
        \Phpfox_Request::instance()->set('req1', 'user');
    }
} 
 ";s:33:"validator.admincp_settings_mobile";s:202:"$aValidation = [
    'mobile_limit_menu_show_first' => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('how_many_menus_show_first_must_be_greater_or_equal_to_0'),
    ],
]; 
 ";s:44:"mobile.service_feed_api_get_posting_callback";s:1017:"if (Phpfox::isModule('fevent')) {
    if (!empty($type) && $type == 'fevent') {
        $aEvent = Phpfox::getService('fevent')->getForEdit($item);
        if (!empty($aEvent['event_id'])) {
            $sLink = Phpfox::permalink('fevent', $aEvent['event_id'], $aEvent['title']);
            $aCallback = array(
                'module' => 'fevent',
                'table_prefix' => 'fevent_',
                'link' => $sLink,
                'email_user_id' => $aEvent['user_id'],
                'subject' => _p('full_name_wrote_a_comment_on_your_event_title', array('full_name' => Phpfox::getUserBy('full_name'), 'title' => $aEvent['title'])),
                'message' => _p('full_name_wrote_a_comment_on_your_event_message', array('full_name' => Phpfox::getUserBy('full_name'), 'link' => $sLink, 'title' => $aEvent['title'])),
                'notification' => 'fevent_comment',
                'feed_id' => 'fevent_comment',
                'item_id' => $aEvent['event_id']
            );
        }
    }
} 
 ";s:42:"mobile.service_groupapi_getprofilemenu_end";s:2151:"if (isset($query) && isset($local) && isset($result) && Phpfox::isModule('fevent') && isset($page)) {
    $result['fevent'] = [
        'label' => $local->translate('menu_fevent_events'),
        'path' => 'fevent/list-item',
        'params' => [
            'headerTitle' => $local->translate('full_name_s_item', ['full_name' => $page['title'], 'item' => $local->translate('menu_fevent_events')]),
            'query' => $query,
            // Add create button
            'headerRightButtons' => [
                [
                    'icon' => 'plus',
                    'action' => Apps\Core_MobileApi\Adapter\MobileApp\Screen::ACTION_ADD,
                    'params' => [
                        'resource_name' => 'fevent',
                        'module_name' => 'fevent',
                        'query' => [
                            'item_id' => $page['page_id'],
                            'module_id' => 'groups'
                        ]
                    ]
                ]
            ]
        ],
    ];
} 
 if (isset($query) && isset($local) && isset($result) && Phpfox::isModule('advancedmarketplace') && isset($page)) {
    $result['advancedmarketplace'] = [
        'label' => $local->translate('menu_advancedmarketplace'),
        'path' => 'advancedmarketplace/list-item',
        'params' => [
            'headerTitle' => $local->translate('full_name_s_item', ['full_name' => $page['title'], 'item' => $local->translate('menu_advancedmarketplace')]),
            'query' => $query,
            // Add create button
            'headerRightButtons' => [
                [
                    'icon' => 'plus',
                    'action' => Apps\Core_MobileApi\Adapter\MobileApp\Screen::ACTION_ADD,
                    'params' => [
                        'resource_name' => 'advancedmarketplace',
                        'module_name' => 'advancedmarketplace',
                        'query' => [
                            'item_id' => $page['page_id'],
                            'module_id' => 'groups'
                        ]
                    ]
                ]
            ]
        ],
    ];
} 
 ";s:41:"mobile.service_pageapi_getprofilemenu_end";s:2149:"if (isset($query) && isset($local) && isset($result) && Phpfox::isModule('fevent') && isset($page)) {
    $result['fevent'] = [
        'label' => $local->translate('menu_fevent_events'),
        'path' => 'fevent/list-item',
        'params' => [
            'headerTitle' => $local->translate('full_name_s_item', ['full_name' => $page['title'], 'item' => $local->translate('menu_fevent_events')]),
            'query' => $query,
            // Add create button
            'headerRightButtons' => [
                [
                    'icon' => 'plus',
                    'action' => Apps\Core_MobileApi\Adapter\MobileApp\Screen::ACTION_ADD,
                    'params' => [
                        'resource_name' => 'fevent',
                        'module_name' => 'fevent',
                        'query' => [
                            'item_id' => $page['page_id'],
                            'module_id' => 'pages'
                        ]
                    ]
                ]
            ]
        ],
    ];
} 
 if (isset($query) && isset($local) && isset($result) && Phpfox::isModule('advancedmarketplace') && isset($page)) {
    $result['advancedmarketplace'] = [
        'label' => $local->translate('menu_advancedmarketplace'),
        'path' => 'advancedmarketplace/list-item',
        'params' => [
            'headerTitle' => $local->translate('full_name_s_item', ['full_name' => $page['title'], 'item' => $local->translate('menu_advancedmarketplace')]),
            'query' => $query,
            // Add create button
            'headerRightButtons' => [
                [
                    'icon' => 'plus',
                    'action' => Apps\Core_MobileApi\Adapter\MobileApp\Screen::ACTION_ADD,
                    'params' => [
                        'resource_name' => 'advancedmarketplace',
                        'module_name' => 'advancedmarketplace',
                        'query' => [
                            'item_id' => $page['page_id'],
                            'module_id' => 'pages'
                        ]
                    ]
                ]
            ]
        ],
    ];
} 
 ";s:41:"mobile.service_userapi_getprofilemenu_end";s:1336:"/**
 * Add user profile menu
 */

if (isset($query) && isset($local) && isset($result) && Phpfox::isModule('fevent') && isset($user)) {
    if (isset($showEmpty) && $showEmpty || (isset($user['total_fevent']) && $user['total_fevent'])) {
        $result['fevent'] = [
            'label'  => $local->translate('menu_fevent_events'),
            'path'   => 'fevent/list-item',
            'params' => [
                'headerTitle' => $local->translate('full_name_s_item', ['full_name' => $user['full_name'], 'item' => $local->translate('menu_fevent_events')]),
                'query'       => $query,
            ],
        ];
    }
} 
 /**
 * Add user profile menu
 */

if (isset($query) && isset($local) && isset($result) && Phpfox::isModule('advancedmarketplace') && isset($user)) {
    if (isset($showEmpty) && $showEmpty || (isset($user['total_advlisting']) && $user['total_advlisting'])) {
        $result['advancedmarketplace'] = [
            'label'  => $local->translate('menu_advancedmarketplace'),
            'path'   => 'advancedmarketplace/list-item',
            'params' => [
                'headerTitle' => $local->translate('full_name_s_item', ['full_name' => $user['full_name'], 'item' => $local->translate('advancedmarketplace')]),
                'query'       => $query,
            ],
        ];
    }
} 
 ";s:46:"core.component_block_template-menufooter_clean";s:203:"/**
 * @copyright		[FOXEXPERT_COPYRIGHT]
 * @author  		Belan Ivan
 * @package  		App_AdvancedFooter
 */
if (Phpfox::isModule('advancedfooter')) {
    Phpfox::getBlock('advancedfooter.main');
} 
 ";s:26:"forum.component_ajax_reply";s:359:"echo '<script type="text/javascript"> 
$Behavior.CKEditor_forum_submit_reply = function() {
    $(\'#js_forum_form_submit_btn\').on(\'click\', function () {
        CKEDITOR.instances.text.updateElement();
    });
    
    $(\'#js_forum_form_submit_btn\').on(\'submit\', function () {
        CKEDITOR.instances.text.updateElement();
    });
}
</script>'; 
 ";s:14:"get_editor_end";s:1537:"$jscript = "if(typeof ckeditor_initialize != 'function'){
    function ckeditor_initialize(sid, mode){
        return function(){
            var ele  = $('#' + sid);
            if(!ele.length) return;
            if(ele.data('ckeditor_built')) return;
            ele.attr('data-ckeditor_built',true);
            CKEDITOR.config.contentsLangDirection = document.dir;
            CKEDITOR.config.extraAllowedContent = 'img(parsed_image)';
            if (mode == 'full_height') {
                CKEDITOR.config.height = window.innerHeight-110;
                CKEDITOR.replace(sid, {});
            } else if(mode == 'simple') {
                CKEDITOR.config.height = 60;
                CKEDITOR.replace(sid, {
                    toolbar: [{ name: 'basicstyles', items: [ 'Bold', 'Italic' ] }]
                });
            } 
            else if(mode == 'none_full') {
                CKEDITOR.replace(sid, {});
            }
            else {
                CKEDITOR.replace(sid,{
                    removePlugins: 'sourcearea'
                });
            }
        }
    }
}";

if (!isset($aParams['enter'])) {
    $mode = isset($aParams['mode']) && $aParams['mode'] ? $aParams['mode'] : (isset($aParams['simple']) && $aParams['simple'] ? 'simple' : 'none');
    $sPackage = setting('ckeditor_package');
    if($mode == 'none') {
        $mode .= '_' . $sPackage;
    }
    $sStr .= '<script>' . $jscript . '$Behavior.loadEditor' . $iId . '  = ckeditor_initialize("' . $iId . '","' . $mode . '");' . '</script>';
} 
 ";s:14:"set_editor_end";s:347:"$sPackage = setting('ckeditor_package');
switch ($sPackage) {
    case 'full':
        $file = 'ckeditor_full/ckeditor.js';
        break;
    case 'basic':
        $file = 'ckeditor_basic/ckeditor.js';
        break;
    default:
        $file = 'ckeditor/ckeditor.js';
        break;
}
$this->setHeader([
    $file => 'app_core-CKEditor'
]); 
 ";s:36:"template_getheader_exclude_bundle_js";s:48:"$aExcludeBundles[] = 'ckeditor/ckeditor.js'; 
 ";s:26:"template_getheader_setting";s:37:"$aJsVars['sEditor'] = 'CKEditor'; 
 ";s:27:"friend.service_friend_get_2";s:280:"if (Phpfox::isUser()) {
    $aRows[$iKey]['is_blocked'] = Phpfox::getService('user.block')->isBlocked($aRow['user_id'], Phpfox::getUserId());
}

if (!isset($aUser['is_featured'])) {
    $aRows[$iKey]['is_featured'] = Phpfox::getService('user')->isFeatured($aRow['user_id']);
} 
 ";s:21:"get_module_blocks_end";s:358:"if ($iId == 6) {
    array_splice($aBlocks[$iId], 1, 0, [['type_id' => 0, 'component' => 'core.template-breadcrumbmenu', 'params' => []]]);
} elseif ($iId == 1 && Phpfox::getLib('module')->getFullControllerName() == 'search.index') {
    array_unshift($aBlocks[$iId], array('type_id' => 0, 'component' => 'core.template-menusub', 'params' => array()));
} 
 ";s:24:"groups.block_photo_menus";s:80:"echo Phpfox::getLib('template')->getBuiltFile('core.block.actions-buttons'); 
 ";s:23:"pages.block_photo_menus";s:80:"echo Phpfox::getLib('template')->getBuiltFile('core.block.actions-buttons'); 
 ";s:47:"profile.component_controller_points_process_end";s:539:"$aIcons = [];
foreach ($aModules as $sModuleId => $aModule) {
    foreach ($aModule as $sPhrase => $sLink) {
        if (function_exists('materialParseIcon')) {
            $aIcons[$sPhrase] = materialParseIcon($sModuleId);
        }
    }
}
$this->template()->assign([
    'aIcons' => $aIcons,
    'iTotalItems' => $aActivites[_p('total_items')],
    'iTotalPoints' => $aUser['activity_points']
]);
unset($aActivites[_p('total_items')]);
unset($aActivites[_p('activity_points')]);
$this->template()->assign('aActivites', $aActivites); 
 ";s:51:"profile.component_controller_statistics_process_end";s:447:"$aIcons = [];
foreach ($aModules as $sModuleId => $aModule) {
    foreach ($aModule as $sPhrase => $sLink) {
        if (function_exists('materialParseIcon')) {
            $aIcons[$sPhrase] = materialParseIcon($sModuleId);
        }
    }
}
$this->template()->assign([
    'aIcons' => $aIcons,
    'iTotalItems' => $aActivites[_p('total_items')]
]);
unset($aActivites[_p('total_items')]);
$this->template()->assign('aActivites', $aActivites); 
 ";s:40:"profile.service_profile_get_profile_menu";s:467:"if (function_exists('materialParseIcon')) {
    foreach ($aMenus as $key => $aMenu) {
        if (empty($aMenu['icon_class'])) {
            $sType = 'default';
            if (!empty($aMenu['actual_url']) && preg_match('/profile_/i', $aMenu['actual_url'])) {
                $aParts = explode('_', $aMenu['actual_url'], 2);
                $sType = $aParts[1];
            }

            $aMenus[$key]['icon_class'] = materialParseIcon($sType);
        }
    }
} 
 ";s:45:"search.component_controller_index_process_end";s:305:"if (isset($aMenus)) {
    $aFilterMenusIcons = [
        _p('all_results') => materialParseIcon('all_results')
    ];
    foreach ($aMenus as $sKey => $aMenu) {
        $aFilterMenusIcons[$aMenu['name']] = materialParseIcon($sKey);
    }

    $this->template()->assign(compact('aFilterMenusIcons'));
} 
 ";s:32:"user.service_privacy_privacy_get";s:297:"foreach ($aItems as $sModule => $aSettings) {
    foreach ($aSettings as $sKey => $aItem) {
        if (!isset($aItems[$sModule][$sKey]['icon_class']) && function_exists('materialParseIcon')) {
            $aItems[$sModule][$sKey]['icon_class'] = materialParseIcon($sModule);
        }
    }
} 
 ";s:36:"video.component_controller_add_clean";s:399:";

if(Phpfox::isModule('auction')){
	$sModule = $this->template()->getVar('sModule');
	if($sModule == 'auction'){
		// check permission 
		$iItem = $this->template()->getVar('iItem');
		$bCanAddVideoInAuction = true;
		if($bCanAddVideoInAuction == false){
			$this->url()->send('subscribe', null, _p('unable_to_view_this_item_due_to_privacy_settings_please_contact_owner_business'));
		}
	}
}

; 
 ";s:46:"ynauction.component_controller_didnt_win_clean";s:991:";

defined('PHPFOX') or exit('NO DICE!');
if (Phpfox::isModule('auction'))
{
    // ADD ADV SEARCH 
    $sFullControllerName = Phpfox::getLib('template')->getVar('sFullControllerName');
    
    if($sFullControllerName == 'auction_didnt-win')
    {
        $title_search = _p('advanced_search');
        $classAdvSearch = 'filter-options';
    ?>

        <script type="text/javascript">
           $Behavior.ynAuctionLoadContentIndex = function(){
                if ($('#ynAuctionAdvancedSearch').length == 0)
                {
                    var content = '<span id="ynAuctionAdvancedSearch" class="<?php echo $classAdvSearch; ?>"><a class="dropdown-toggle" onclick="ynauction.advSearchDisplay(); return false;" href="javascript:void(0)"><?php echo $title_search; ?><span class="ico ico-caret-down"></span></a></span>';
                    $('#page_auction_didnt-win .header-filter-holder').append(content);
                }
            }
        </script>

    <?php 
    }
}
; 
 ";s:44:"advancedphoto.component_controller_add_clean";s:426:";

if(Phpfox::isModule('auction')){
	$sModuleContainer = $this->template()->getVar('sModuleContainer');
	if($sModuleContainer == 'auction'){
		// check permission 
		$iItem = $this->template()->getVar('iItem');
		$bCanAddPhotoInAuction = true;
		if($bCanAddPhotoInAuction == false){
			$this->url()->send('subscribe', null, _p('unable_to_view_this_item_due_to_privacy_settings_please_contact_owner_business'));
		}
	}
}

; 
 ";s:48:"ynauction.component_controller_my_won_bids_clean";s:995:";

defined('PHPFOX') or exit('NO DICE!');
if (Phpfox::isModule('auction'))
{
    // ADD ADV SEARCH 
    $sFullControllerName = Phpfox::getLib('template')->getVar('sFullControllerName');
    
    if($sFullControllerName == 'auction_my-won-bids')
    {
        $title_search = _p('advanced_search');
        $classAdvSearch = 'filter-options';
    ?>

        <script type="text/javascript">
           $Behavior.ynAuctionLoadContentIndex = function(){
                if ($('#ynAuctionAdvancedSearch').length == 0)
                {
                    var content = '<span id="ynAuctionAdvancedSearch" class="<?php echo $classAdvSearch; ?>"><a class="dropdown-toggle" onclick="ynauction.advSearchDisplay(); return false;" href="javascript:void(0)"><?php echo $title_search; ?><span class="ico ico-caret-down"></span></a></span>';
                    $('#page_auction_my-won-bids .header-filter-holder').append(content);
                }
            }
        </script>

    <?php 
    }
}
; 
 ";s:39:"validator.admincp_user_settings_auction";s:1249:"$aValidation = [
    'photo_max_upload_size' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Max file size for photos upload" must be greater than or equal to 0'),
    ],
    'how_much_is_user_worth_for_auction_publishing' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Fee for publishing an auction listing" must be greater than or equal to 0'),
    ],
    'how_much_is_user_worth_for_auction_featured' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Fee to feature an auction listing" must be greater than or equal to 0'),
    ],
    'points_auction' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Points for each auction this user created" must be greater than or equal to 0'),
    ],
    'minute_to_control_how_long_user_can_create_a_auction' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Minute to control how long user can create a auction" must be greater than or equal to 0'),
    ],
    'commission_for_admin_when_user_buy_auction' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Commission for admin when user buy auctio" must be greater than or equal to 0'),
    ],
]; 
 ";s:44:"ynauction.component_controller_my_bids_clean";s:987:";

defined('PHPFOX') or exit('NO DICE!');
if (Phpfox::isModule('auction'))
{
    // ADD ADV SEARCH 
    $sFullControllerName = Phpfox::getLib('template')->getVar('sFullControllerName');
    
    if($sFullControllerName == 'auction_my-bids')
    {
        $title_search = _p('advanced_search');
        $classAdvSearch = 'filter-options';
    ?>

        <script type="text/javascript">
           $Behavior.ynAuctionLoadContentIndex = function(){
                if ($('#ynAuctionAdvancedSearch').length == 0)
                {
                    var content = '<span id="ynAuctionAdvancedSearch" class="<?php echo $classAdvSearch; ?>"><a class="dropdown-toggle" onclick="ynauction.advSearchDisplay(); return false;" href="javascript:void(0)"><?php echo $title_search; ?><span class="ico ico-caret-down"></span></a></span>';
                    $('#page_auction_my-bids .header-filter-holder').append(content);
                }
            }
        </script>

    <?php 
    }
}
; 
 ";s:51:"photo.component_service_callback_getactivityfeed__1";s:296:"defined('PHPFOX') or exit('NO DICE!');

if (Phpfox_Request::instance()->get('req1') == 'auction' || (!empty($aPhotoIte['module_id']) && $aPhotoIte['module_id'] == 'ecommerce')) {
    $aReturn['feed_info'] = (count($aListPhotos) ? _p('feed.shared_a_few_photos') : _p('feed.shared_a_photo'));
} 
 ";s:34:"validator.admincp_settings_auction";s:3101:"$aValidation = [
    'category_number' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Number of items on block "Categories" must be greater than 0'),
    ],
    'refresh_time' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Refresh Time Period must be greater than 0'),
    ],
    'max_items_block_buyers_who_viewed_this_item_also_viewed' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Number of items on block "Buyers Who Viewed This Item Also Viewed" must be greater than 0'),
    ],
    'max_items_block_other_auctions_from_this_seller' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Number of items on block "Other Auctions From This Seller" must be greater than 0'),
    ],
    'max_items_block_auctions_you_may_like' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Number of items on block "Auctions You May Like" must be greater than 0'),
    ],'max_items_block_auctions_bidden_by_my_friends' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Number of items on block "Auctions My Friends Bid on" must be greater than 0'),
    ],'max_items_block_most_liked_auctions' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Number of items on block "Most Liked Auctions" must be greater than 0'),
    ],
    'max_items_block_upcoming_auctions' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Number of items on block "Upcoming Auctions" must be greater than 0'),
    ],
    'max_items_block_auctions_ending_today' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Number of items on block "Auctions Ending Today" must be greater than 0'),
    ],
    'max_items_block_todays_live_auctions' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Number of items on block "Today\'s Live Auctions" must be greater than 0'),
    ],
    'max_items_sub_categories_list_display' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Number of items on Sub-categories list display must be greater than 0'),
    ],
    'max_items_block_featured_auctions' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Number of items on block "Featured Auctions" must be greater than 0'),
    ],
    'max_items_block_weekly_hot_auctions' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Number of items on block "Hot Auctions" must be greater than 0'),
    ],'max_number_of_items_on_my_bidden_history_popup' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Number of items on "My Bidden History" popup must be greater than 0'),
    ],
    'max_number_of_items_on_my_offer_history_popup' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('Number of items on "My Offer History" popup must be greater than 0'),
    ],

]; 
 ";s:26:"image_helper_display_start";s:808:";

if(Phpfox::isModule('auction')){
    
    if (isset($aParams['ynauction_overridenoimage'])){
        if (empty($aParams['file'])){
            Phpfox::getLib('setting')->setParam('ynauction.pathnoimage', '');
            $aParams['file'] = Phpfox::getParam('core.path') . 'module/auction/static/image/default_ava.png';
            $aParams['path'] = 'ynauction.pathnoimage';
        }
    }
}

; 
 ;

if(Phpfox::isModule('ecommerce')){
    
    if (isset($aParams['ecommerce_overridenoimage'])){
        if (empty($aParams['file'])){
            Phpfox::getLib('setting')->setParam('ecommerce.pathnoimage', '');
            $aParams['file'] = Phpfox::getParam('core.path') . 'module/ecommerce/static/image/default_ava.png';
            $aParams['path'] = 'ecommerce.pathnoimage';
        }
    }
}

; 
 ";s:46:"ynauction.component_controller_my_offers_clean";s:991:";

defined('PHPFOX') or exit('NO DICE!');
if (Phpfox::isModule('auction'))
{
    // ADD ADV SEARCH 
    $sFullControllerName = Phpfox::getLib('template')->getVar('sFullControllerName');
    
    if($sFullControllerName == 'auction_my-offers')
    {
        $title_search = _p('advanced_search');
        $classAdvSearch = 'filter-options';
    ?>

        <script type="text/javascript">
           $Behavior.ynAuctionLoadContentIndex = function(){
                if ($('#ynAuctionAdvancedSearch').length == 0)
                {
                    var content = '<span id="ynAuctionAdvancedSearch" class="<?php echo $classAdvSearch; ?>"><a class="dropdown-toggle" onclick="ynauction.advSearchDisplay(); return false;" href="javascript:void(0)"><?php echo $title_search; ?><span class="ico ico-caret-down"></span></a></span>';
                    $('#page_auction_my-offers .header-filter-holder').append(content);
                }
            }
        </script>

    <?php 
    }
}
; 
 ";s:36:"photo.component_controller_add_clean";s:730:";

if(Phpfox::isModule('auction')){
	$sModuleContainer = $this->template()->getVar('sModuleContainer');
	if($sModuleContainer == 'auction'){
		// check permission 
		$iItem = $this->template()->getVar('iItem');
		$bCanAddPhotoInAuction = true;
		if($bCanAddPhotoInAuction == false){
			$this->url()->send('subscribe', null, _p('unable_to_view_this_item_due_to_privacy_settings_please_contact_owner_business'));
		}
	}
}

; 
 if (Phpfox::isModule('suggestion') && Phpfox::isUser()){
    
    if (Phpfox::getService('suggestion')->isSupportModule('photo') && Phpfox::getUserParam('suggestion.enable_friend_suggestion')){        
        Phpfox::getService('suggestion.cache')->set('photo.added',1);
    }

}/*end check module*/ 
 ";s:42:"ynauction.component_controller_index_clean";s:1039:";
defined('PHPFOX') or exit('NO DICE!');
if (Phpfox::isModule('auction'))
{
    // ADD ADV SEARCH 
    $sFullControllerName = Phpfox::getLib('template')->getVar('sFullControllerName');
    
    if($sFullControllerName == 'auction_index')
    {
        $title_search = _p('advanced_search');
        $classAdvSearch = 'filter-options';
    ?>

        <script type="text/javascript">
           $Behavior.ynAuctionLoadContentIndex = function(){
                if ($('#ynAuctionAdvancedSearch').length > 0)
                {

                }
                else
                {
                    var content = '<span id="ynAuctionAdvancedSearch" class="<?php echo $classAdvSearch; ?>"><a class="dropdown-toggle" onclick="ynauction.advSearchDisplay(); return false;" href="javascript:void(0)"><?php echo $title_search; ?><span class="ico ico-caret-down"></span></a></span>';
                    $('#page_auction_index .header-filter-holder').append(content);
                }
            }
        </script>

    <?php 
    }
}
; 
 ";s:47:"validator.admincp_user_settings_contactimporter";s:673:"$aValidation = [
    'points_contactimporter_sentinvitations' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Points the user will receive when sent a invitation" must be greater than or equal to 0'),
    ],
    'points_invite' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Points the invitee and the inviter will receive upon a successfully request" must be greater than or equal to 0'),
    ],
    'points_contactimporter' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Points the user will receive when your invitation join this site" must be greater than or equal to 0'),
    ],
]; 
 ";s:42:"validator.admincp_settings_contactimporter";s:358:"$aValidation = [
    'cron_send_mail' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('"Report Time" must be greater than 0'),
    ],
    'how_many_pendings_to_show_per_page' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('"How Many Pendings To Show" must be greater than 0'),
    ]
]; 
 ";s:30:"user.service_process_add_start";s:424:"if(isset($invite_only_contactimporter) && $invite_only_contactimporter==1){
    $aVals['email'] = $aInsert['email'] = $email_contactimporter;
    Phpfox::setCookie('invite_only_pass','');
    Phpfox::setCookie('invited_by_email_form','');
    Phpfox::setCookie('invited_by_email','');
    define('PHPFOX_SKIP_EMAIL_INSERT',false);
    if(isset($_SESSION['pass_invite'])){
        unset($_SESSION['pass_invite']);
    }
} 
 ";s:46:"invite.component_controller_index_process_send";s:180:"if (Phpfox::isModule('contactimporter') && isset($iInvite) && $iInvite > 0)
{
    Phpfox::getService('contactimporter')->updateStatistic(Phpfox::getUserId(), 1, 0, 'manual');
} 
 ";s:36:"user.component_controller_register_8";s:885:"defined('PHPFOX') or exit('NO DICE!');

if (($sSentCookie = Phpfox::getCookie('invited_by_email_form'))) {
    if (!(Phpfox::getLib('mail')->checkEmail($sSentCookie))) {
        $this->template()->assign('aForms', array('email' => ''));
        if (Phpfox::getParam('user.invite_only_community')) {
            if (preg_match('/Anonymous User/', $sSentCookie) || preg_match('/Anonymous Users/', $sSentCookie) || preg_match('/twitter/', $sSentCookie) || preg_match('/linkedin/', $sSentCookie)) {
                Phpfox::setCookie('invite_only_pass', $sSentCookie);
                if (!isset($_SESSION['pass_invite']) || $_SESSION['pass_invite'] == false) {
                    $_SESSION['pass_invite'] = true;
                    Phpfox::getLib("url")->send('user.register');
                }
            }
        }
    }
}

/**
 * process with somethign other but not field.
 */ 
 ";s:33:"user.service_auth___construct_end";s:4:" 
 ";s:26:"user.service_process_add_1";s:286:"$invite_only_contactimporter = 0;
if(Phpfox::getParam('user.invite_only_community')){
    $invite_only_contactimporter = 1;
    $email_contactimporter = $aVals['email'];
    $aVals['email'] = Phpfox::getCookie('invited_by_email_form');
    define('PHPFOX_SKIP_EMAIL_INSERT',true);
} 
 ";s:28:"user.service_process_add_end";s:115:"if (Phpfox::isModule('contactimporter'))
{
	Phpfox::getService('contactimporter') -> setUserHasInvited($iId);
} 
 ";s:27:"forum.template_block_post_1";s:4:" 
 ";s:31:"validator.admincp_settings_core";s:1460:"$aValidation['auto_deny_items'] = [
    'def' => 'int:required',
    'min' => '2',
    'title' => _p('"SPAM Count" must be greater than 1'),
];


$aValidation['cookie_path'] = [
    'def'=> 'required',
    'title'=> 'Cookie path is required field',
];

$aValidation['auto_ban_spammer'] = [
    'def'=> 'int',
    'min' => '0',
    'title'=> '"Auto Ban Spammers" must be greater than or equal to 0',
];

$aValidation['auto_clear_cache'] = [
    'def'=> 'int',
    'min' => '0',
    'title'=> '"Auto clear system cache" must be greater than or equal to 0',
];

$aValidation['force_https_secure_pages'] = [
    'def'=> 'required',
    'requirements' => [
        'callback' => 'validation_check_valid_ssl'
    ],
    'title'=> 'Your server does not support https',
];

if (!function_exists('validation_check_valid_ssl')) {
    function validation_check_valid_ssl($value)
    {
        if ($value == false) {
            return true;
        }
        $sUrl = Phpfox::getLib('url')->makeUrl('');
        $sUrl = str_replace('http://', 'https://', $sUrl);

        $ch = curl_init($sUrl);
        curl_setopt($ch, CURLOPT_HEADER, true);
        curl_setopt($ch, CURLOPT_NOBODY, true);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);
        curl_setopt($ch, CURLOPT_TIMEOUT,10);
        $output = curl_exec($ch);
        $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        curl_close($ch);

        return ($http_code == 200) ? true : false;
    }
} 
 ";s:35:"validator.admincp_settings_donation";s:428:"$aValidation = [
    'number_of_fetched_donors' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('"Number of donors which will be fetched limit" must be greater than 0'),
    ],
    'max_size_for_donation_image_button' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('"Maximum file size for uploaded donation button image" must be greater than 0'),
    ]
]; 
 ";s:36:"pages.component_controller_add_clean";s:11372:"/**
 * [PHPFOX_HEADER]
 */
defined('PHPFOX') or exit('NO DICE!');


$oDonation = Phpfox::getService('donation');
$sDonation = _p('donation.donation');
$iPageId = $this->request()->getInt('id'); 
$iCurrentUserId = Phpfox::getUserId();
$iUserId = $oDonation->getUserIdOfPage($iPageId);
$sWidget = $this->request()->get('req3','0');
$this->template()->setEditor();
?>

<script type="text/javascript" language="javascript">
	$Behavior.onLoadPlugin_donation = function() {
		<?php
		if ($iPageId > 0 && $iUserId == $iCurrentUserId && Phpfox::isModule('donation')) {
	    if ($oDonation->checkPermissions('can_add_donation_on_own_page', array('iPageId' => $iPageId)))
	    {
		?>	
			var bIsFirstRun = false;
			 $(".page_section_menu").find("li").find("a").click(function(evt) {
	        	$('#js_pages_add_holder').find(".donation").hide();
	        });
			if ( ($("#content").find("ul").first().find("#donation_tab").length == 0))
	        {
	            <?php if ($iPageId) { ?>
	                $('#js_pages_add_holder').find("form").append($("<div class=\"donation\" style=\"display: none;\">"));
	                $("#page_pages_add").find(" ._block_error .page_section_menu ul").first().append("<li><a ref=\"donation_tab\" id=\"donation_tab\" href=\"#\" onclick=\"showDonation(this); return false;\"><?php echo $sDonation;?></a></li>");
	                <?php if ($this->request()->get('tab') == 'donation') { ?>	 
	                      $("#donation_tab").click(); bIsFirstRun = true; 
	                <?php } ?>
	            <?php } ?>  
	        }
	     <?php } 
		}?>   
	};
    function showDonation(obj){
        $this = $(obj); 
    	$this.unbind();
        $('#js_pages_add_holder').find(".donation").load($.ajaxBox('donation.config','iPageId=<?php echo $iPageId; ?>'));
        $('#js_pages_add_holder').find(".donation").show();
        $('#js_pages_add_holder').find(".js_pages_block").hide();

        $this.parents("ul").find(".active").removeClass("active");
        $this.parent().addClass("active");
    }
</script>
<?php 
 $iId = phpfox::getLib('request')->get('id');

$sTopicCount = _p('pagecontacts.topic_name_count');
$bIsOwnerPage = false;

if(isset($iId) && $iId)
{
    $bIsOwnerPage = phpfox::getService('pagecontacts')->isOwnerPage($iId);
}
?>
<script type="text/javascript" language="javascript">
    $Behavior.onLoadPluginContact = function() {
   <?php	
if(Phpfox::getUserParam('pagecontacts.can_create_page_contact') && $bIsOwnerPage)
{
?>
        var bIsContactFirstRun = false;
         $(".page_section_menu").find("li").find("a").click(function(evt) {
            $('#js_pages_add_holder').find(".contact").hide();
        });  
        
        if (($("#content").find("ul").first().find("#contact_tab").length == 0))
        {
            $("#content").find(" ._block_error .page_section_menu ul").first().append("<li><a ref=\"contact_tab\" id=\"contact_tab\" href=\"#\" onclick=\"showContact(this); return false;\"><?php echo _p('pagecontacts.contact_setting'); ?></a></li>");
            $('#js_pages_add_holder').find("form").prepend($("<div class=\"contact\" style=\"display: none;\">"));
            <?php if ($this->request()->get('tab') == 'contact') { ?>     
                  $("#contact_tab").click(); 
                  bIsContactFirstRun = true; 
            <?php } ?>
        }
        
        $Core.pagecontacts.init({sRequired:"*", isAdd: true, bErrors: true, iMaxAnswers: 50, iMinAnswers: 0, iMaxQuestions: 50, iMinQuestions: 1});
        
        $('#js_add_question').click(function()
        {
            $Core.pagecontacts.addQuestion();
            return false;
        });
        
        if($("#donation_tab").size() > 0)
        {
            if($("#donation_tab").attr("onclick").indexOf("$(\".contact\").hide();") < 0) {
                $("#donation_tab").attr({
                    "onclick": ("$(\".contact\").hide();" + $("#donation_tab").attr("onclick"))
                });
            }
        }
        <?php
}
?>

    };
    
    function showContact(obj){
        $this = $(obj); 
        $this.unbind();
        $('#js_pages_add_holder').find(".contact").load($.ajaxBox('pagecontacts.config','iPageId=<?php echo $iId; ?>'));
        $('#js_pages_add_holder').find(".contact").show();
        $('#js_pages_add_holder').find(".js_pages_block").hide();
        $('#js_pages_add_holder').find(".donation").hide();
        $this.parents("ul").find(".active").removeClass("active");
        $this.parent().addClass("active");
    }
    
    $Core.pagecontacts =
    {
        aParams: {},
        iTotalQuestions : 1,

        init: function(aParams)
        {
            this.aParams = aParams;    
            if ($Core.pagecontacts.aParams.isAdd == true)
            {
                $(document).ready(function()
                {
                    if ($Core.pagecontacts.aParams.bErrors == false)
                    {
                        for (i = 0; i < $Core.pagecontacts.aParams.iMinQuestions; i++)
                        {
                            $Core.pagecontacts.addQuestion();
                        }                    
                    }                
                });
            }
        },

        build: function()
        {

        },

        addQuestion: function()
        {
            var iCntQuestions = 0;
            $('.full_question_holder').each(function(){
                iCntQuestions++;
            });
            

            /*iCntQuestions = iCntQuestions - 1;*/
            
            if (iCntQuestions >= $Core.pagecontacts.aParams.iMaxQuestions)
            {
                
                return false;
            }
            
            $('#hiddenQuestion').find(':text').each(function(){
                $(this).val('');
            });

            $('#js_quiz_container').append('' + $('#hiddenQuestion').html() + '');
        
            $Core.pagecontacts.fixQuestionsIndexes();
            
            $('.full_question_holder:last').find('.hdnCorrectAnswer:first').val('1');
            $('.full_question_holder:last').find('.p_2:first').addClass('correctAnswer');            

            return false;
        },

        submitForm : function()
        {
            $('#js_quiz_layout_default').html('');
            return true;
        },

        fixQuestionsIndexes : function()
        {
            var iCntQuestions = 1;
            var topic_count = '<?php echo $sTopicCount; ?>';
            var oDate = new Date();

            $('#js_quiz_container').find('.full_question_holder').each(function(){
        
                var iCntAnswers = 0;

            
                $(this).find('.topic_title').attr('name', 'val[q][' + (iCntQuestions) + '][question]');
                $(this).find('.email').attr('name', 'val[q][' + (iCntQuestions) + '][email]');
            
                $(this).find('.answer_parent').each(function()
                {
                                
                    $(this).find('.answer').attr('name', 'val[q][' + (iCntQuestions) + '][answers]['+iCntAnswers+'][answer]');
                    $(this).find('.hdnCorrectAnswer').attr('name', 'val[q][' + iCntQuestions + '][answers][' + iCntAnswers + '][is_correct]');
                    $(this).find('.answer').attr('name', 'val[q]['+iCntQuestions+'][answers]['+iCntAnswers+'][answer]');
                    $(this).find('.hdnAnswerId').attr('name', 'val[q]['+iCntQuestions+'][answers]['+iCntAnswers+'][answer_id]');
                    $(this).find('.hdnQuestionId').attr('name', 'val[q]['+iCntQuestions+'][answers]['+iCntAnswers+'][question_id]');
                    if ($(this).find('.hdnQuestionId').val() == undefined)
                    {
                        $(this).find('.hdnQuestionId').val(iCntQuestions + iCntAnswers + '123321');
                    }
                    iCntAnswers++;
                });
                
                $(this).find('.question_title').attr('name', 'val[q]['+iCntQuestions+'][question]');
                
                if (iCntQuestions <= $Core.pagecontacts.aParams.iMinQuestions)
                {
                    $(this).find('.question_number_title').html($Core.pagecontacts.aParams.sRequired +topic_count.replace('{count}', ''));
                    $(this).find("#removeQuestion").show();
                }
                else
                {
                    $(this).find('.question_number_title').html(topic_count.replace('{count}', ''));    
                    $(this).find("#removeQuestion").show();
                }
                
                iCntQuestions++;
            }); 
            var tabIndex = 1;
            $('.full_question_holder').each(function() {
                $(':input',this).not('input[type=hidden]').each(function() {
                    if ($(this).attr('type') == 'text' || $(this).attr('type') == 'textarea')
                    {
                        $(this).attr('tabindex', tabIndex);
                        tabIndex++;
                    }
                });
            });
            
            
        },
        
        removeQuestion: function(oObj)
        {

            var iCntQuestions = 0;
            $('.full_question_holder').each(function(){
                iCntQuestions++;
            });
			
            iCntQuestions = iCntQuestions - 1;
            if (iCntQuestions == 2)
            {
            	$('#js_quiz_container').find('#removeQuestion').hide();
            }
            
            if (iCntQuestions <= $Core.pagecontacts.aParams.iMinQuestions)
            {
            //    return false;
            }
            $Core.pagecontacts.iTotalQuestions = iCntQuestions;

            $(oObj).parents('.full_question_holder:first').remove();

            return false;
        }
    }
</script>
<?php 
 /*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
if (($iEditId = $this->request()->getInt('id')) && ($aPage = Phpfox::getService('pages')->getForEdit($iEditId)))			
{
    $bshow = 0;
    $_aFeed['item_id'] = $iEditId;
    $_aFeed['sModule'] = 'pages';
    $sTitle = base64_encode(urlencode($aPage['title']));
    $sPrefix = phpfox::getT('');
    if($aPage['time_stamp']+100>PHPFOX_TIME)
    {
        if(!isset($_SESSION['pages_popup'][$iEditId]))
        {
            $bshow = 1;
            $_SESSION['pages_popup'][$iEditId] = true;
        }
    }
    if($bshow==1){
?>

<script text="text/javascript">
  
<?php  
if (Phpfox::getUserParam('suggestion.enable_friend_suggestion') && Phpfox::getUserParam('suggestion.enable_content_suggestion_popup') && Phpfox::getService('suggestion')->isAllowContentSuggestionPopup()){?>
    $Behavior.loadAddPagePluginSuggestion = function(){
        $(document).ready(function(){
            setTimeout(function(){            
                suggestion_and_recommendation_tb_show("...",$.ajaxBox('suggestion.friends','iFriendId='+<?php echo $_aFeed['item_id'];?>+'&sSuggestionType=suggestion'+'&sModule=suggestion_<?php   echo $_aFeed['sModule']?>&sLinkCallback=&sTitle=<?php   echo $sTitle;?>&sPrefix=<?php   echo $sPrefix;?>&sExpectUserId='));
            }, 500);                
        });
    }
<?php  
/*unset all suggestion section if suggestion is not active*/
}else{        
    unset($_SESSION['suggestion']);
}
?>    
   
</script>

<?php }} 
 ";s:40:"profile.component_controller_index_clean";s:1911:"/**
 * [PHPFOX_HEADER]
 */

defined('PHPFOX') or exit('NO DICE!');

?>

<?php
$iPageId = Phpfox::getService('donation')->getPageIdFromUrl();
if($iPageId > 0)
{
    (($sPlugin = Phpfox_Plugin::get('pages.component_controller_index_clean')) ? eval($sPlugin) : false);
} 
 $aPage = Phpfox::getService('suggestion')->isPage($this->request()->get('req1'));
if ($aPage !== false) {
    $iPageId = (int)$aPage['page_id'];
    
    if ($iPageId>0 && Phpfox::isModule('suggestion')  && Phpfox::isUser() ){        
        /*get detail pages*/
    
        $aPages = Phpfox::getService('pages')->getPage($iPageId);
        $sTitle = base64_encode(urlencode($aPages['title']));

        $sSuggestToFriends = _p('suggestion.suggest_to_friends_2');
        $sCurrentUrl = Phpfox::getLib('url')->getFullUrl(); 
        $iUserId = Phpfox::getUserId();
        ?>
              <script language="javascript">
            
        $Behavior.loadProfileIndexSuggestion = function(){
        	if($('#suggestion_page_btn').length <= 0){
        	
                <?php if (Phpfox::getUserParam('suggestion.enable_friend_suggestion')){?>                    
                    $('#section_menu').eq(0).append('<ul><li id="suggestion_page_btn"><a onclick="suggestion_and_recommendation_tb_show(\'...\',$.ajaxBox(\'suggestion.friends\',\'iFriendId=<?php  echo $iPageId;?>&sSuggestionType=suggestion&sModule=suggestion_pages&sLinkCallback=<?php  echo $sCurrentUrl;?>&sTitle=<?php  echo $sTitle;?>&sPrefix=pages_\')); return false;" href="#"><?php  echo $sSuggestToFriends?></a></li></ul>');                    
                <?php }?>
                
        	}                    
        };
        
        </script>     
        <style>
            #js_is_user_profile #js_is_page #section_menu{min-width: 0px;}
            #js_is_user_profile #js_is_page #section_menu ul{float:right;}
        </style>
    <?php  }    
} 
 ";s:38:"pages.component_controller_index_clean";s:5195:"/**
 * [PHPFOX_HEADER]
 */
/*
defined('PHPFOX') or exit('NO DICE!');
$oDonation = Phpfox::getService('donation');
$iPageId = $oDonation->getPageIdFromUrl();
if ($iPageId == 0) 
{
    $iPageId = $this->request()->get('id');
}
$iDonation = (int) $oDonation->isEnableDonation($iPageId);
$iCurrentUserId = Phpfox::getUserId();
$iUserId = $oDonation->getUserIdOfPage($iPageId);
$sPageTitle = $oDonation->getPageDetail($iPageId); 
$sUrl = urlencode(Phpfox::getLib('url')->getFullUrl());
$sImg = $oDonation->getDonationButtonImagePath();

if ($iPageId > 0 && $iDonation>0 && Phpfox::isModule('donation'))
{
    if ($oDonation->checkPermissions('can_donate', array('iPageId' => $iPageId)))
    {
        $sDonation = _p('donation.donation_for_page_page_name', array('page_name'=>$sPageTitle));
		
		$aRow = Phpfox::getService('pages')->getPage($iPageId);
    	if(!$aRow['use_timeline'])//for normal
		{
            if($iUserId == $iCurrentUserId ) { //for owner
		?>
		<script type="text/javascript">
		    $Behavior.DonationShowInPage = function() {
                $().ready(function(){        
                    if ($('#donateBlock').html() == null && !$('#page_button_donate')[0])
                    {
                        $(".sub_section_menu:first").prepend("<div id='page_button_donate'><p id=\"donateBlock\" style=\"text-align:center\"> <a class=\"donate\" href=\"<?php echo Phpfox::getLib('url')->makeUrl('pages',array('add', 'id' =>$iPageId , 'tab'=>'donation'));?>\" ><?php echo _p('donation.donation_setting'); ?></a></p><p style=\"text-align:center\"> <a class=\"donate\"  onclick=\"showDonationIndex(); return false;\" href=\"#\"  ><img src=\"<?php echo $sImg;?>\"/></a></p></div>");
                    }
                });
            }
		    
		    function showDonationIndex(){     
		        tb_show('<?php echo $sDonation; ?>',$.ajaxBox('donation.detail','iPageId=<?php echo (int) $iPageId; ?>&sUrl=<?php echo $sUrl; ?>'));
		    }
		</script>
	   <?php 
            }
            else{ // for other user
        ?>
            <script type="text/javascript">
            $Behavior.DonationShowInPage = function() {
                $().ready(function(){        
                    if ($('#donateBlock').html() == null && !$('#page_button_donate')[0])
                    {
                        $(".sub_section_menu:first").prepend("<div id='page_button_donate'><p style=\"text-align:center\"> <a class=\"donate\"  onclick=\"showDonationIndex(); return false;\" href=\"#\"  ><img src=\"<?php echo $sImg;?>\"/></a></p></div>");
                    }
                });
            }
            
            function showDonationIndex(){     
                tb_show('<?php echo $sDonation; ?>',$.ajaxBox('donation.detail','iPageId=<?php echo (int) $iPageId; ?>&sUrl=<?php echo $sUrl; ?>'));
            }
            </script>
        <?php
            }        

        }
		else{ //for timeline mode

            if($iUserId == $iCurrentUserId ) { //for owner
            ?>
		<script type="text/javascript">
		    $Behavior.DonationShowInPage = function() {
                $().ready(function(){        
                    if($('.profile_header_inner') && !$('#page_button_donate')[0])
                    {
                        $(".profile_header_inner").append("<div id='page_button_donate' style='float:left;'><p style=\"text-align:center\"> <a class=\"donate\"  onclick=\"showDonationIndex(); return false;\" href=\"#\" ><img src=\"<?php echo $sImg;?>\"/></a></p><p id=\"donateBlock\" style=\"text-align:center\"> <a class=\"donate\"  href=\"<?php echo Phpfox::getLib('url')->makeUrl('pages',array('add', 'id' =>$iPageId,'tab'=>'donation'));?>\"><?php echo _p('donation.donation_setting'); ?></a></p></div>");
                    }
                });
            }
		    
		    function showDonationIndex(){     
		        tb_show('<?php echo $sDonation; ?>',$.ajaxBox('donation.detail','iPageId=<?php echo (int) $iPageId; ?>&sUrl=<?php echo $sUrl; ?>'));
		    }
		</script>
		<?php
            }
           else{ //for other user
            ?>
        <script type="text/javascript">
            $Behavior.DonationShowInPage = function() {
                $().ready(function(){        
                    if($('.profile_header_inner') && !$('#page_button_donate')[0])
                    {
                        $(".profile_header_inner").append("<div id='page_button_donate' style='float:left;'><p style=\"text-align:center\"> <a class=\"donate\"  onclick=\"showDonationIndex(); return false;\" href=\"#\" ><img src=\"<?php echo $sImg;?>\"/></a></p></div>");
                    }
                });
            }
            
            function showDonationIndex(){     
                tb_show('<?php echo $sDonation; ?>',$.ajaxBox('donation.detail','iPageId=<?php echo (int) $iPageId; ?>&sUrl=<?php echo $sUrl; ?>'));
            }
        </script>
            <?php
               }
		   }
	} 
	
} */ 
 defined('PHPFOX') or exit('NO DICE!');
    $iPageId = $this->request()->get('req2');
    if ($iPageId == 0)
    {
	  $iPageId = $this->request()->get('id');
    }

    Phpfox::getLib('session')->set('socialintegration_pageId', $iPageId); 
 ";s:48:"ynecommerce.component_controller_my_orders_clean";s:962:";

defined('PHPFOX') or exit('NO DICE!');
if (Phpfox::isModule('ecommerce'))
{
    // ADD ADV SEARCH 
    $sFullControllerName = Phpfox::getLib('template')->getVar('sFullControllerName');
    
    if($sFullControllerName == 'ecommerce_my-orders')
    {
        $title_search = _p('advanced_search');
        $classAdvSearch = 'ynecommerce_adv_search';
    ?>

        <script type="text/javascript">
           $Behavior.ynEcommerceLoadAdvancedSearchMyOrders = function(){
                if ($('#ynEcommerceAdvancedSearch').length == 0)
                {
                    var content = '<span id="ynEcommerceAdvancedSearch" class="<?php echo $classAdvSearch; ?>"><a onclick="ynecommerce.advSearchDisplay(\'<?php echo $title_search; ?>\'); return false;" href="javascript:void(0)"><?php echo $title_search; ?></a></span>';
                    $('.header_bar_search').append(content);
                }
            }
        </script>

    <?php 
    }
}
; 
 ";s:24:"theme_template_body__end";s:42246:"if (Phpfox::isUser() && !Phpfox::isAdminPanel() && Phpfox::isModule('notification'))
{
    $iDelayTime = (int) Phpfox::getParam('fanot.display_notification_seconds') * 1000;
    $iRefreshTime = (int) Phpfox::getParam('fanot.notification_refresh_time') * 1000;
    $str = '';
	$str .= '<div id="fanot_box" class="fanotui"></div>';
	echo $str;
	?>
    <script language="javascript">
        $Behavior.ynfanotInitVar = function(){
            if (typeof($Core) != "undefined") {
                $Core.fanot.fanotDelay = <?php echo abs($iDelayTime); ?>;
                $Core.fanot.fanotUpdateDelay = <?php echo abs($iRefreshTime); ?>;
            }
        };
    </script>
	<?php
} 
 if (!Phpfox::getParam('core.site_wide_ajax_browsing') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
    ?>

    <?php
    $sModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();
    
    $iItemId = Phpfox::getService('foxfavorite')->getItemId($sModule);
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsFunctionedModule = Phpfox::getService('foxfavorite')->isFunctionedModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);
    
    if ($bIsViewItem && $bIsAvailModule && $sModule != 'pages' && !$bIsFunctionedModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
        ?>
        <div id="yn_section_menu"  style="display:none;">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) {?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
            </ul>
            <ul>
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>"<?php if (!$bIsAlreadyFavorite){?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        <script type="text/javascript" language="javascript">                
            $Behavior.onCreateFavoriteButton = function() {                            
                if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
                {
                    $bt_favor = '<div id="section_menu">' + $('#yn_section_menu').first().html() + '</div>';
                    $('#breadcrumb_holder').append($bt_favor); //default theme
                    $('.main_breadcrumb_holder').append($bt_favor); //cosmic theme
                    $('#section_menu').show();
                }
                else
                {                                
                    $bt_favor = $('.yn_page_favorite').first();
                    $bt_unfavor = $('.yn_page_unfavorite').first();
                    if($('#section_menu').find('ul').size() == 0)
                    {                
                        $('#section_menu').prepend("<ul></ul>");
                    }
                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
                    {                                                      
                        $('#section_menu').find('ul').prepend($bt_favor);                                    
                    }
                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
                    {                                                      
                        $('#section_menu').find('ul').prepend($bt_unfavor);                                    
                    }                                
                    $('#section_menu').show();                        
                }   
                $Behavior.inlinePopup();                    
            };                                                                     
        </script>
        <?php
    }
} 
 if(Phpfox::isModule('socialad')){
	echo "
	<style type=\"text/css\">
		.activity_feed_content_image{
			float: none;
		}
	</style>";
} 
 defined('PHPFOX') or exit('NO DICE!');
$sFullControllerName = Phpfox::getLib('module')->getFullControllerName();
if ($sFullControllerName == 'core.index-member' || $sFullControllerName == 'profile.index')
{
    $iPageId = Phpfox::getLib('session')->remove('socialintegration_pageId');
}

if (Phpfox::isModule('socialpublishers'))
{
    $iUserId = Phpfox::getService('socialpublishers')->getRealUser(Phpfox::getUserId());
    $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iUserId);
    $aRecentAddedItem = Phpfox::getLib('cache')->get($sIdCache);
    

    if ($aRecentAddedItem && count($aRecentAddedItem))
    {
        $aSharePublishersFeed = Phpfox::getService('socialpublishers')->getAddedInfo($aRecentAddedItem);
        

        if(isset($aRecentAddedItem['sType']) && $aRecentAddedItem['sType']=='resume'){
            if (Phpfox::isModule('resume')){
                $aResume = Phpfox::getService('resume.basic')->getQuick($aRecentAddedItem['iItemId']);
                if($aResume){
                    $aSharePublishersFeed['type_id'] = 'resume';
                    $aSharePublishersFeed['feed_content'] = $aResume['headline'];
                    $aSharePublishersFeed['feed_info'] = $aResume['headline'];
                    $aSharePublishersFeed['feed_link'] = Phpfox::getLib('url')->permalink('resume.view', $aResume['resume_id'], $aResume['headline']);
                }
            }   
        }
        
        if ($aSharePublishersFeed && count($aSharePublishersFeed))
        {
            $aShareType = $aSharePublishersFeed['type_id'];
            //fix for photo to get title
            if ($aShareType == "photo")
            {
                $aSharePublishersFeed['feed_title'] = Phpfox::getLib('database')->select("title")
                        ->from(Phpfox::getT('photo'))
                        ->where('photo_id = ' . (int) $aRecentAddedItem['iItemId'])
                        ->execute('getField');
            }

            $sTitle = isset($aSharePublishersFeed['feed_info']) ?  $aSharePublishersFeed['feed_info'] : "";
            $aSharePublishers['url'] = isset($aSharePublishersFeed['feed_link']) ? $aSharePublishersFeed['feed_link'] : Phpfox::getParam('core.path');
            $aSharePublishers['text'] = (isset($aSharePublishersFeed['feed_status']) && !empty($aSharePublishersFeed['feed_status'])) ? $aSharePublishersFeed['feed_status'] : (isset($aSharePublishersFeed['feed_content']) ? $aSharePublishersFeed['feed_content'] : "");
            $aSharePublishers['content'] = (isset($aSharePublishersFeed['feed_status']) && !empty($aSharePublishersFeed['feed_status'])) ? $aSharePublishersFeed['feed_status'] : (isset($aSharePublishersFeed['feed_content']) ? $aSharePublishersFeed['feed_content'] : "");
            $aSharePublishers['title'] = (isset($aSharePublishersFeed['feed_status']) && !empty($aSharePublishersFeed['feed_status'])) ? $aSharePublishersFeed['feed_status'] : (isset($aSharePublishersFeed['feed_title']) ? $aSharePublishersFeed['feed_title'] : $sTitle);
            $aSharePublishers['item_id'] = (isset($aSharePublishersFeed['item_id']) && !empty($aSharePublishersFeed['item_id'])) ? $aSharePublishersFeed['item_id'] : 0 ;
          

            if ($aShareType != 'event')
            {

                Phpfox::getService('socialpublishers')->showPublisher($aShareType, $iUserId, $aSharePublishers);
            }
        }
    }
} 
 if (Phpfox::isModule('suggestion') && Phpfox::isUser() && !Phpfox::isAdminPanel())
{
    $bShow = 0;
    if (Phpfox::getService('suggestion.process')->isIgnoreSuggestion())
    {
        unset($_SESSION['suggestion']['aFeed']);
        Phpfox::setCookie('suggestion', '', -1);
    }

    $ynCookie = Phpfox::getCookie('suggestion');
    if (isset($_SESSION['suggestion']['aFeed']) || (isset($ynCookie) && strlen($ynCookie) > 0))
    {
  

        $ynCookie = json_decode($ynCookie, true);
        //$_aFeed = $_SESSION['suggestion']['aFeed'];
        $_aFeed = $ynCookie['aFeed'];
        
        $sLinkCallback = $_aFeed['sLinkCallback'];
        $sTitle = base64_encode(urlencode($_aFeed['title'].''));
        //$sPrefix = $_SESSION['suggestion']['aFeed']['prefix'];
        $sPrefix = $ynCookie['aFeed']['prefix'];

        if($_aFeed['user_id'] == Phpfox::getUserId()){
            $bShow = 1; 
        }

        if(($_aFeed['sModule'] == 'photo' && $_aFeed['type_id'] == 'photo') || ($_aFeed['sModule'] == 'advancedphoto' && $_aFeed['type_id'] == 'advancedphoto'))
        {
            if(Phpfox::isModule("photo"))
            {
                $aPhoto = Phpfox::getService("photo")->getCoverPhoto($_aFeed['item_id']);
            }
            else if(Phpfox::isModule("advancedphoto"))
            {
                $aPhoto = Phpfox::getService("advancedphoto")->getCoverPhoto($_aFeed['item_id']);
            }

            if($_aFeed['title'] == "")
            {
                $sTitle = base64_encode(urlencode($aPhoto['title'].''));
            }
        }  

    }
    else
    {    
        $aPrivateData = Phpfox::getService('suggestion')->getPrivateData(Phpfox::getUserId());
        if (is_array($aPrivateData) && count($aPrivateData) > 0)
        {
            $aRet = unserialize(base64_decode($aPrivateData['message']));
            if (isset($aRet['item_id']))
            {
                $_aFeed['item_id'] = $aRet['item_id'];
                $_aFeed['sModule'] = $aRet['sModule'];
                $sLinkCallback = urlencode($aRet['sLinkCallback']);
                $sTitle = base64_encode(urlencode($aRet['title']));
                $sPrefix = $aRet['prefix'];
                $bShow = 0;


                $aData['item_id'] = $aRet['item_id'];
                $aData['owner_id'] = Phpfox::getUserId();
                $aData['module_id'] = $aRet['sModule'];
                Phpfox::getService('suggestion.reminder')->addReminder($aData);
            }

        }
    }
 
    ?>

    <?php if ($bShow == 1 && isset($_aFeed['item_id']) && (int) $_aFeed['item_id'] > 0) {

     ?>
        <script text="text/javascript">
            <?php if (Phpfox::getUserParam('suggestion.enable_friend_suggestion') && Phpfox::getUserParam('suggestion.enable_content_suggestion_popup') && Phpfox::getService('suggestion')->isAllowContentSuggestionPopup()) { ?>
                $(document).ready(function(){
                    setTimeout(function(){            
                        suggestion_and_recommendation_tb_show("...", $.ajaxBox('suggestion.friends','iFriendId='+<?php echo $_aFeed['item_id'];?>+'&sSuggestionType=suggestion'+'&sModule=suggestion_<?php   echo $_aFeed['sModule']?>&sLinkCallback=<?php   echo $sLinkCallback;?>&sTitle=<?php   echo $sTitle;?>&sPrefix=<?php   echo $sPrefix;?>&sExpectUserId='));
                    }, 500);                
                });
            <?php } ?>    
        </script>
    <?php } ?>

    <script>    
        $Behavior.ignoreSuggestion = function(){
            $('a[class="moderation_process_action"]').each(function(){
                $(this).click(function(){
                    if ($(this).attr('href') == '#approve'){
                        $.ajaxCall('suggestion.ignoreSuggestion');
                    }
                });            
            });        
        }

        function suggestion_and_recommendation_tb_show(caption, url, thisObject, sForceMessage, bForceNoCilck, sType) 
        {
            var baseURL;
            if (url.indexOf("?")!==-1)
            {
                baseURL = url.substr(0, url.indexOf("?"));
            }
            else
            {
                baseURL = url;
            }	

            var urlString = /\.jpg$|\.jpeg$|\.png$|\.gif$|\.bmp$/;
            var urlType = baseURL.toLowerCase().match(urlString);	

            if (urlType == '.jpg' || urlType == '.jpeg' || urlType == '.png' || urlType == '.gif' || urlType == '.bmp')
            {
                imgPreloader = new Image();
                imgPreloader.onload = function()
                {
                    imgPreloader.onload = null;

                    var pagesize = tb_getPageSize();
                    var x = pagesize[0] - 150;
                    var y = pagesize[1] - 150;
                    var imageWidth = imgPreloader.width;
                    var imageHeight = imgPreloader.height;

                    if (imageWidth > x) 
                    {
                        imageHeight = imageHeight * (x / imageWidth);
                        imageWidth = x;
                        if (imageHeight > y) 
                        {
                            imageWidth = imageWidth * (y / imageHeight);
                            imageHeight = y;
                        }
                    } 
                    else if (imageHeight > y) 
                    {
                        imageWidth = imageWidth * (y / imageHeight);
                        imageHeight = y;
                        if (imageWidth > x) 
                        {
                            imageHeight = imageHeight * (x / imageWidth);
                            imageWidth = x;
                        }
                    }

                    TB_WIDTH = imageWidth + 30;
                    TB_HEIGHT = imageHeight + 60;

                    $('.js_box_image_holder').remove();
                    $('.js_box_image_holder').unbind('click');

                    var sHtml = '';
                    sHtml += '<div class="js_box_image_holder"><div class="js_box ' + (oParams['bJsIsMobile'] ? 'mobile_js_box' : '') + ' js_box_image" style="display:block;"><div class="js_box_content">';

                    if ($(thisObject).parents('.js_box_thumbs_holder').length > 0)
                    {	
                        var sCurrentSource = $(thisObject).find('img:first').attr('src');
                        var sNewSource = '';
                        var SubimgPreloaderImageWidth = '';
                        var SubimgPreloaderImageHeight = '';
                        var SubArrayWidth = new Array();
                        var SubArrayHeight = new Array();
                        var sSubHtml = '';
                        var aUrlParts = new Array();
                        var aUrlPartsNew = new Array();

                        iImageIterationCount = 0;
                        iCurrentImageIterationCount = 0;

                        sHtml += '<div>';
                        $(thisObject).parents('.js_box_thumbs_holder').find('.js_box_image_holder_thumbs').find('.thickbox').each(function()
                        {
                            iImageIterationCount++;
                            sNewSource = $(this).find('img').attr('src');

                            aUrlParts = explode('_', sCurrentSource);
                            aUrlPartsNew = explode('_', sNewSource);						

                            if (aUrlParts[0] == aUrlPartsNew[0])
                            {
                                iCurrentImageIterationCount = iImageIterationCount;
                            }

                            {
                                SubimgPreloader = new Image();

                                SubimgPreloader.src = $(this).attr('href');

                                SubimgPreloaderImageWidth = SubimgPreloader.width;
                                SubimgPreloaderImageHeight = SubimgPreloader.height;

                                if (SubimgPreloaderImageWidth > x) 
                                {
                                    SubimgPreloaderImageHeight = SubimgPreloaderImageHeight * (x / SubimgPreloaderImageWidth);
                                    SubimgPreloaderImageWidth = x;
                                    if (imageHeight > y) 
                                    {
                                        SubimgPreloaderImageWidth = SubimgPreloaderImageWidth * (y / SubimgPreloaderImageHeight);
                                        imageHeight = y;
                                    }
                                } 
                                else if (imageHeight > y) 
                                {
                                    SubimgPreloaderImageWidth = SubimgPreloaderImageWidth * (y / SubimgPreloaderImageHeight);
                                    SubimgPreloaderImageHeight = y;
                                    if (SubimgPreloaderImageWidth > x) 
                                    {
                                        SubimgPreloaderImageHeight = SubimgPreloaderImageHeight * (x / SubimgPreloaderImageWidth);
                                        SubimgPreloaderImageWidth = x;
                                    }
                                }

                                SubArrayWidth.push(SubimgPreloaderImageWidth);
                                SubArrayHeight.push(SubimgPreloaderImageHeight);

                                sSubHtml += '<a rel="' + SubimgPreloaderImageWidth + '|' + SubimgPreloaderImageHeight + '" id="js_next_image_thumb_' + iImageIterationCount + '" href="' + $(this).attr('href') + '" onclick="tb_show_new_image(this, \'' + $(this).attr('href') + '\', ' + SubimgPreloaderImageWidth + ', ' + SubimgPreloaderImageHeight + ', ' + iImageIterationCount + '); return false;"><img src="' + sNewSource + '" alt="" ' + (aUrlParts[0] == aUrlPartsNew[0] ? ' class="is_active" ' : '') + ' /></a>';
                            }
                        });

                        TB_WIDTH = ((Math.max.apply(Math, SubArrayWidth)) + 30);
                        TB_HEIGHT = ((Math.max.apply(Math, SubArrayHeight)));				

                        sHtml += '<div class="js_box_image_holder_browse">';
                        sHtml += '<div class="js_box_image_gallery_display" style="height:' + TB_HEIGHT + 'px; line-height:' + TB_HEIGHT + 'px;">';
                        sHtml += '<a href="#" onclick="return js_box_next_image();"><img src="' + url + '" width="' + imageWidth + '" height="' + imageHeight + '" alt="" id="js_thickbox_core_image" /></a>';
                        sHtml += '</div>';
                        sHtml += '<div class="js_box_image_gallery">' + sSubHtml + '</div>';
                        sHtml += '</div>';

                        sHtml += '</div>';
                    }
                    else
                    {
                        sHtml += '<a href="#" onclick="$(\'.js_box_image_holder\').remove(); return false;"><img src="' + url + '" width="' + imageWidth + '" height="' + imageHeight + '" alt="" id="js_thickbox_core_image" /></a>';	
                    }

                    sHtml += '</div><div class="suggestion_and_recommendation_js_box_close"><a href="#" onclick="return js_box_remove(this);">' + oTranslations['close'] + '</a></div></div></div>';

                    $('body').prepend(sHtml);

                    $('.js_box_image').css(
                    {
                        top: (($(window).height() - $('.js_box_image').outerHeight()) / 2) + "px",
                        left: (($(window).width() - $('.js_box_image').outerWidth()) / 2) + "px",
                        display: 'block'
                    });			

                    var bCanCloseImageBox = true;		

                    $('.js_box').click(function()
                    {
                        bCanCloseImageBox = false;
                    });

                    $('.js_box_image_holder').click(function()
                    {
                        if (!bCanCloseImageBox)
                        {
                            bCanCloseImageBox = true;
                        }
                        else
                        {
                            $(this).remove();
                        }
                    });

                    if ($.browser.msie && $.browser.version == '7.0')
                    {
                        $Behavior.ie7FixZindex();
                    }			
                };

                imgPreloader.src = url;
                return false;
            }		
       
            var bIsAlreadyOpen = false;
            if ($(thisObject).hasClass('photo_holder_image') && !empty($(thisObject).attr('rel')))
            {
                if (!getParam('bPhotoTheaterMode')){
                    return true;
                }

                if (getParam('bJsIsMobile')){
                    return true;
                }			

                if ($Core.exists('.js_box_image_holder_full')){
                    $('#photo_view_ajax_loader').show();
                }

                sLastOpenUrl = (empty(window.location.hash) ? $Core.getRequests(window.location, true) : '/' + window.location.hash);
                var sUserId = url.match(/userid_([0-9]+)/);
                var sAlbumId = url.match(/albumid_([0-9]+)/);		

                var queryString = '' + getParam('sGlobalTokenName') + '[call]=photo.view&width=940' + (typeof sPhotoCategory != 'undefined' ? '&category=' + sPhotoCategory : '') + '&req2=' + $(thisObject).attr('rel') + '&theater=true&no_remove_box=true' + (sUserId != null && isset(sUserId[1]) ? '&userid='+sUserId[1] :'') + (sAlbumId != null && isset(sAlbumId[1]) ? '&albumid='+sAlbumId[1] :'');
                var params = tb_parseQuery(queryString);

                bIsPhotoImage = true;
                if (isset($aBoxHistory[params['' + getParam('sGlobalTokenName') + '[call]']]))
                {
                    bIsAlreadyOpen = true;	
                }

                if ($('#noteform').length > 0)
                {
                    $('#noteform').hide(); 
                }
                if ($('#js_photo_view_image').length > 0)
                {
                    $('#js_photo_view_image').imgAreaSelect({ hide: true });		
                }	
                      alert(5);
            }
            else
            {
             
                if ($Core.exists('.js_box_image_holder_full')){
                    js_box_remove($('.js_box_image_holder_full').find('.js_box_content:first'));
                }

                if (url.indexOf('#') != -1)
                {
                    var aParams = url.split('#');
                    url = '#' + aParams[1];			
                }
              
                var queryString = url.replace(/^[^\?]+\??/,'');					
                var params = tb_parseQuery(queryString);
            }

            if (!bIsPhotoImage && isset($aBoxHistory[params['' + getParam('sGlobalTokenName') + '[call]']]))
            {		
                return false;
            }

            if (!bIsAlreadyOpen)
            {
                $iBoxTotalOpen++;
                $iCurrentZIndex++;

                $aBoxHistory[params[getParam('sGlobalTokenName') + '[call]']] = true;

                $sCurrentId = 'js_box_id_' + $iBoxTotalOpen;
            }

            if (caption === null)
            { 
                caption = '';
            }

            var bIsFullMode = false;
            if (params['width'] == 'full')
            {
                params['width'] = ($(window).width());
                params['height'] = ($(window).height());	
                bIsFullMode = true;
            }
            else if (params['width'] == 'scan')
            {	
                params['width'] = ($(window).width() - (oCore['core.is_admincp'] ? 100 : 150));
                params['height'] = ($(window).height() - (oCore['core.is_admincp'] ? 100 : 150));	
            }	

            TB_WIDTH = (!empty(params['width']) ? ((params['width']*1) + 30) : 630);
            TB_HEIGHT = (params['height']*1) + 40 || 440;	

            var pagesize = tb_getPageSize();			
            if (TB_HEIGHT > pagesize[1])
            {
                TB_HEIGHT = (pagesize[1] - 75);
            }		

            if (TB_WIDTH > pagesize[0])
            {
                TB_WIDTH = (pagesize[0] - 75);
            }						

            ajaxContentW = TB_WIDTH - 30;
            ajaxContentH = TB_HEIGHT - 45;			

            if (!bIsAlreadyOpen)
            {
                var sHtml = '';

                if (bIsPhotoImage){
                    $('.js_box_image_holder').remove();
                    $('.js_box_image_holder').unbind('click');	
                    sHtml += '<div class="js_box_image_holder_full">';	
                    sHtml += '<div class="js_box_image_holder_full_loader" style="position:absolute; top:50%; left:50%;"><img src="' + oJsImages['loading_animation'] + '" alt="" /></div>';
                    sHtml += '<div style="display:none;" id="' + $sCurrentId + '" class="js_box' + (oParams['bJsIsMobile'] ? ' mobile_js_box' : ' ') + (isset(params['no_remove_box']) ? ' js_box_no_remove' : '') + '" style="width:' + ajaxContentW + 'px;">';
                    sHtml += '<div class="js_box_content"></div>';
                    sHtml += '<div class="suggestion_and_recommendation_js_box_close"><a href="#" onclick="return js_box_remove(this);">' + oTranslations['close'] + '</a><span class="js_box_history">' + params[getParam('sGlobalTokenName') + '[call]'] + '</span></div>';
                    sHtml += '</div>';
                    sHtml += '</div>';
                }
                else{			
                    if (bIsPhotoImage)
                    {
                        $('.js_box_image_holder').remove();
                        $('.js_box_image_holder').unbind('click');	
                        sHtml += '<div class="js_box_image_holder_full">';
                    }

                    if (bForceNoCilck){
                        sHtml += '<div class="js_box_image_holder">';
                    }		

                    sHtml += '<div id="' + $sCurrentId + '" class="js_box' + (oParams['bJsIsMobile'] ? ' mobile_js_box' : ' ') + (isset(params['no_remove_box']) ? ' js_box_no_remove' : '') + '" style="width:' + ajaxContentW + 'px;">';
                    if (!bIsPhotoImage)
                    {
                        sHtml += '<div class="js_box_title">' + caption + '</div>';
                    }
                    sHtml += '<div class="js_box_content"><span class="js_box_loader">' + oTranslations['loading'] + '...</span></div>';
                    {
                        sHtml += '<div class="suggestion_and_recommendation_js_box_close"><a href="#" onclick="return js_box_remove(this);">' + oTranslations['close'] + '</a><span class="js_box_history">' + params[getParam('sGlobalTokenName') + '[call]'] + '</span></div>';
                    }
                    sHtml += '</div>';

                    if (bIsPhotoImage)
                    {
                        sHtml += '</div>';
                    }

                    if (bForceNoCilck){
                        sHtml += '</div>';
                    }			
                }

                $('body').prepend(sHtml);		

                var $oNew = $('#' + $sCurrentId + '');

                tb_position($oNew, (bIsFullMode ? bIsFullMode : ''));

                if (!bIsPhotoImage){
                    $oNew.show();			
                } else {
                    $('.js_box_image_holder_full_loader').css({
                        'margin-left': '-' + ($('.js_box_image_holder_full_loader').find('img:first').width() / 2) + 'px',
                        'margin-top': '-' + ($('.js_box_image_holder_full_loader').find('img:first').height() / 2) + 'px'
                    });
                }
            }
            else
            {
                $oNew = $('.js_box_image_holder_full').find('.js_box:first');
            }

            if (getParam('bJsIsMobile')){
                queryString += '&js_mobile_version=true';
            }	

            if(url.indexOf('TB_inline') != -1){

                            if (params['type'])
                            {
                                switch(params['type'])
                                {				
                                    case 'delete':			
                                        var sHtml = '';
                                        sHtml += '<div id="js_inline_delete">';
                                        if (!params['call'])
                                        {
                                            sHtml += '<form method="post" action="' + sMainUrl + '">';
                                            sHtml += '<div><input type="hidden" name="' + getParam('sGlobalTokenName') + '[security_token]" value="' + getParam('sSecurityToken') + '" />';
                                        }
                                        sHtml += '<div>';
                                        sHtml += getPhrase('core.are_you_sure');
                                        sHtml += '<div class="t_center p_4">';			
                                        sHtml += ' <input type="hidden" name="item_id" value="' + params['itemId'] + '" id="js_inline_delete_id" /> ';
                                        if (!params['call'])
                                        {
                                            sHtml += ' <input type="submit" value="' + getPhrase('core.yes') + '" class="button btn btn-primary btn-sm" /> ';
                                        }
                                        else
                                        {
                                            sHtml += ' <button type="button" class="button btn btn-primary btn-sm" onclick="$(\'#js_inline_delete_id\').ajaxCall(\'' + params['call'] + '\', \'' + queryString + '\'); tb_remove();">' + getPhrase('core.yes') + '</button> ';
                                        }
                                        sHtml += ' <button type="button" class="button" onclick="tb_remove();">' + getPhrase('core.no') + '</button> ';			
                                        sHtml += '</div>';
                                        sHtml += '</div>';
                                        if (!params['call'])
                                        {
                                            sHtml += '</form>';
                                        }
                                        sHtml += '</div>';								

                                        break;
                                }

                                $oNew.find('.js_box_content').html('');
                                $oNew.find('.js_box_content').html(sHtml);							
                            }
                            else
                            {
                                var sHtml = $('#' + params['inlineId']).children();
                            }	

                $oNew.find('.js_box_content').html('');			
                $oNew.find('.js_box_content').html(sHtml);	

                return;					
            }	
            else if (isset(params['TB_iframe'])){
                var sIframe = '';
                $oNew.find('.js_box_content').html('');
                $oNew.find('.js_box_content').html(sIframe);				
            }
            else{
                if (!empty(sForceMessage)){
                    $oNew.find('.js_box_content').html('');
                    $oNew.find('.js_box_content').html(sForceMessage);		
                    return;
                }

                var sAjaxType = 'GET';
                if ( (params['' + getParam('sGlobalTokenName') + '[call]'] == 'share.popup') || sType == 'POST'){
                    sAjaxType = 'POST';
                }
              
                $.ajax(
                    {
                        type: sAjaxType,
                        dataType: 'html',
                        url: getParam('sJsAjax'),
                        data: queryString,
                        success: function(sMsg)
                        {				   	
                            $oNew.find('.js_box_content').html('');
                            $oNew.find('.js_box_content').html(sMsg);
                            if (!empty($oNew.find('.js_box_title_store:first').html()))
                            {
                                $oNew.find('.js_box_title:first').html($oNew.find('.js_box_title_store:first').html());	
                            }
                            $oNew.find('.js_box_title:first').show();
                            $oNew.find('.suggestion_and_recommendation_js_box_close:first').show();		

                            if (bIsFullMode){
                                $oNew.find('.js_box_content').height(ajaxContentH);
                            }
                            
                            if (bIsPhotoImage)
                            {

                                var thisHeight = $(window).height();
                                var thisBodyHeight = $('body').height();
                                var newHeight = (thisHeight > thisBodyHeight ? thisHeight : thisBodyHeight);

                                $('.js_box_image_holder_full').css({'top': '0px', 'height': (newHeight + 50) + 'px'});

                                var bCanCloseImageBox = true;		

                                $Behavior.onCloseThickbox = function()
                                {							
                                    $('.js_box').click(function()
                                    {
                                        bCanCloseImageBox = false;
                                    });

                                    $('.js_box a').click(function()
                                    {
                                        bCanCloseImageBox = false;
                                    });

                                    $('.js_box_image_holder_full').click(function()
                                    {			
                                        if (!bCanCloseImageBox)
                                        {
                                            bCanCloseImageBox = true;
                                        }
                                        else
                                        {
                                            $('#main_core_body_holder').show();
                                            if ($('#noteform').length > 0)
                                            {
                                                $('#noteform').hide(); 
                                            }
                                            if ($('#js_photo_view_image').length > 0)
                                            {
                                                $('#js_photo_view_image').imgAreaSelect({ hide: true });		
                                            }
                                            bIsPhotoImage = false;
                                            $(this).remove();
                                            delete $aBoxHistory[params[getParam('sGlobalTokenName') + '[call]']];
                                        }
                                    });		    		
                                }

                                $Behavior.onCloseThickbox();
                            }
                        }
                    });			
            }
        }
    </script>
<?php } 
 if (Phpfox::isModule('tourguides') && !Phpfox::isAdminPanel())
{
    $iUserId = Phpfox::getUserId();
    $sCurrentUrl = Phpfox::getService('tourguides')->getCurrentUrl();
    $sControllerName = Phpfox::getLib('module')->getFullControllerName();
    $aParams = array(
        'sCurrentUrl' => $sCurrentUrl,
        'sControllerName' => $sControllerName,
        );

    $oService = Phpfox::getService('tourguides')->showTour($iUserId, $aParams);
} 
 ;

$sFullControllerName = Phpfox::getLib('module')->getFullControllerName();
if (PHpfox::isUser() && Phpfox::isModule('ynadvancedpayment') && $sFullControllerName == 'api.admincp/gateway/add') {
    $configuration = _p('ynadvancedpayment.configuration');
    $silentpost_url = Phpfox::getParam('core.path_file') . 'module/ynadvancedpayment/static/php/silentpost.php';
    $content = _p('ynadvancedpayment.enable_a_href_https_account_authorize_net_target_blank_silent_post_url_a_via_account_settings_choose_silent_post_url_the_silent_post_url_feature_should_be_enabled_and_the_silent_post_url_should_be_set_to_silentpost_url', array('silentpost_url' => $silentpost_url));

    $ccbill_guideline_value = _p('ynadvancedpayment.ynadvancedpayment_ccbill_guideline'
        , array(
            'success_url' => Phpfox::getParam('core.path') . 'api/gateway/callback/ccbill/status_ccbill-success/',
            'failure_url' => Phpfox::getParam('core.path') . 'api/gateway/callback/ccbill/status_ccbill-fail/',
        )
    );
    $itransact_guideline_value = _p('ynadvancedpayment_itransact_guideline', [
        'postback_url' => Phpfox::getParam('core.path_file') . 'module/ynadvancedpayment/static/php/postback.php'
    ]);
    $stripe_guideline_value = _p('ynadvancedpayment_stripe_guideline', [
        'callback_url' => Phpfox::getLib('gateway')->url('stripe')
    ]);
    $braintree_guideline_value = _p('ynadvancedpayment_braintree_guideline', [
        'callback_url' => Phpfox::getLib('gateway')->url('braintree')
    ]);
    $skrill_guideline_value = _p('ynadvancedpayment_skrill_guideline');
    $bitpay_guideline_value = _p('ynadvancedpayment_bitpay_guideline');
    $webmoney_guideline_value = _p('ynadvancedpayment_webmoney_guideline');
    $ccbill_guideline_value = str_replace("'", '&#039;', $ccbill_guideline_value);
    if (preg_match("/\n/i", $ccbill_guideline_value)) {
        $aParts = explode("\n", $ccbill_guideline_value);
        $ccbill_guideline_value = '';
        foreach ($aParts as $sPart) {
            $sPart = trim($sPart);
            if (empty($sPart)) {
                $ccbill_guideline_value .= '<br/> ';

                continue;
            }

            $ccbill_guideline_value .= $sPart . ' ';
        }
        $ccbill_guideline_value = trim($ccbill_guideline_value);
    }
    $ccbill_guideline_value = html_entity_decode($ccbill_guideline_value, null, 'UTF-8');
    ?>

    <script type="text/javascript">
        $Behavior.ynapShowHint = function () {
            var $input = $('input[name=id]'), // find id field
                help_content = {
                    'authorizenet': '<?php echo $content; ?>',
                    'ccbill': '<?php echo str_replace("'", "\'", $ccbill_guideline_value); ?>',
                    'itransact': '<?php echo $itransact_guideline_value; ?>',
                    'skrill': '<?php echo $skrill_guideline_value; ?>',
                    'webmoney': '<?php echo $webmoney_guideline_value; ?>',
                    'stripe': '<?php echo $stripe_guideline_value; ?>',
                    'bitpay': '<?php echo $bitpay_guideline_value; ?>',
                    'braintree': '<?php echo $braintree_guideline_value; ?>',
                };

            if ($input.length) {
                if (help_content.hasOwnProperty($input.val()) && !$('.' + $input.val() + '-configuration').length) {
                    $input.parent().prepend('<div class="form-group ' + $input.val() + '-configuration' + '">' +
                        '<label><?php echo $configuration; ?>:</label>' +
                        '<p class="help-block">' + help_content[$input.val()] + '</p>' +
                        '</div>');
                }
            }
        }
    </script>

    <?php
}
if (PHpfox::isUser() && Phpfox::isModule('ynadvancedpayment') && $sFullControllerName == 'api.admincp/gateway/index') {
    ?>
    <script type="text/javascript">
        $Behavior.ynremovepopupClass = function () {
            $('.link_menu ul a').attr('class', '');
        }
    </script>
    <?php
};
if (PHpfox::isAdmin() && Phpfox::isModule('ynadvancedpayment') && $sFullControllerName == 'subscribe.admincp/add') {
    $subsriptionid = _p('subscription_id');
    ?>
    <script type="text/javascript">
        $Behavior.ynapShowSubId = function () {
            var id = $('input[name=id]').val();
            $('#title').parents('.table').find('.table_left').prepend('<div class="table_left"><?php echo $subsriptionid; ?>: ' + id + '</div>');
        }
    </script>
    <?php
} 
 ;

/*if(Phpfox::isUser() && Phpfox::isModule('ynchat')){
	$sAgent = Phpfox::getService('ynchat.helper')->getBrowser();
	$type = 'web';
	if(Phpfox::getService('ynchat.helper')->isMobile()){
	    $type = 'mobile';
	}        
	if(($type == 'mobile') && Phpfox::isUser() && Phpfox::isModule('ynchat')){
		Phpfox::getLib('setting')->setParam('core.is_auto_hosted',false);
		?>
			<link id="ynchat_link_css" type="text/css" href="<?php echo '//' . Phpfox::getParam('core.host') . Phpfox::getParam('core.folder'); ?>ynchat/css.php?js_mobile_version=1&v=<?php echo time(); ?>" rel="stylesheet" charset="utf-8">
			<link id="ynchat_link_css_mobile" type="text/css" href="<?php echo '//' . Phpfox::getParam('core.host') . Phpfox::getParam('core.folder'); ?>ynchat/static/css/ynchatmobile.css?js_mobile_version=1&v=<?php echo time(); ?>" rel="stylesheet" charset="utf-8">
			<script id="ynchat_script_js" type="text/javascript" src="<?php echo '//' . Phpfox::getParam('core.host') . Phpfox::getParam('core.folder'); ?>ynchat/js.php?js_mobile_version=1&v=<?php echo time(); ?>" charset="utf-8"></script>
		<?php 
	}	
}
*/
; 
 ";s:32:"validator.admincp_settings_fanot";s:434:"$aValidation = [
    'display_notification_seconds' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('"The seconds when the Advanced Feed Notification box should hide" must be greater than 0'),
    ],
    'notification_refresh_time' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('"The seconds before the notifications refresh" must be greater than 0'),
    ]
]; 
 ";s:31:"validator.admincp_settings_feed";s:152:"$aValidation['feed_display_limit'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => 'Feed display limit must be greater than 0',
]; 
 ";s:46:"core.template_block_notification_dropdown_menu";s:704:"if (Phpfox::getParam('feed.enable_hide_feed', 1)) {
    echo
        '<li role="presentation">
            <a href="javascript:void(0)" onclick="tb_show(\'' . _p('manage_hidden') . '\', $.ajaxBox(\'feed.manageHidden\', \'\'));">
                <i class="ico ico-eye-alt-blocked" aria-hidden="true"></i>' . _p('manage_hidden') . '
            </a>
        </li>';
} 
 $aPromotions = Phpfox::getService('user.promotion')->getPromotionsByUserGroup();
if (count($aPromotions)) {
    $url = url('user/promotion');
    $label = _p('promotions');
    echo '<li role="presentation">
       <a href="'. $url .'">
           <i class="ico ico-target-o"></i>
           ' . $label . '
       </a>
   </li>';
} 
 ";s:36:"validator.admincp_user_settings_feed";s:103:"$aValidation['feed_sponsor_price'] = [
    'def' => 'integer',
    'title' => 'Name is required'
]; 
 ";s:46:"petition.component_controller_view_process_end";s:4518:"if (Phpfox::isModule('foxfavorite') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
	
    ?>

    <?php
    $sModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();
	
    $iItemId = Phpfox::getService('foxfavorite')->getItemId($sModule);
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsFunctionedModule = Phpfox::getService('foxfavorite')->isFunctionedModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);
    
    if ($bIsViewItem && $bIsAvailModule && $sModule != 'pages' && !$bIsFunctionedModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
    	
        ?>
          <div id="yn_section_menu"  style="display:none;">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) {?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
            </ul>
            <ul>
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" 
                    title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>"
                    href="#" 
                    onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" 
                    id="js_favorite_link_unlike_<?php echo $iItemId; ?>"
                    
                    <?php if (!$bIsAlreadyFavorite){?> style="display:none;"<?php } ?>
                    	
                    	>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        
        <script type="text/javascript" language="javascript">                
            $Behavior.onCreateFavoriteButton = function() {
            		
            		if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
	                {
	                    $bt_favor = '<div id="section_menu" style="position:static;overflow:hidden;margin-bottom:10px;" class="yn_sectionmenu">' + $('#yn_section_menu').first().html() + '</div>';
	                    $('#breadcrumb_holder').append($bt_favor); //default theme
	                    $('#petition_comment_block').prepend($bt_favor); //cosmic theme
	                    $('#section_menu').show();                    
	                }
	                else
	                {                                
	                    $bt_favor = $('.yn_page_favorite').first();
	                    $bt_unfavor = $('.yn_page_unfavorite').first();
	                    if($('#section_menu').find('ul').size() == 0)
	                    {                
	                        $('#section_menu').prepend("<ul></ul>");
	                    }
	                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_favor);                                    
	                    }
	                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_unfavor);                                    
	                    }                                
	                    $('#section_menu').show();                        
	                }   
	                $Behavior.inlinePopup();        
	            		
            		$('#yn_section_menu').html('');

            };                                                                     
        </script>
        <?php
    }
} 
 ";s:44:"ecommerce.service_process_approveproduct_end";s:487:";

if(Phpfox::isModule($sType)){
    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification($aItem['user_id']);
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {
            
        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_add'.$sType, $aItem['product_id'], $aUser['user_id'], $aItem['user_id']);
        }
    }
}

; 
 ";s:41:"resume.service_process_deletefavorite_end";s:93:"Phpfox::getService('foxfavorite.process')->UnFavorite('resume', $aFavorite['resume_id']); 
 ";s:41:"musicsharing.service_music_uploadsong_end";s:350:"$aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
foreach ($aUsers as $iKey => $aUser)
{
    if (isset($aUser['user_notification']) && ($aUser['user_notification']))
    {

    }
    else
    {
        Phpfox::getService('notification.process')->add('foxfavorite_addmusicsharing', $song_id, $aUser['user_id']);
    }
} 
 ";s:32:"user.component_ajax_updatestatus";s:771:"$aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
foreach ($aUsers as $iKey => $aUser)
{
    if (isset($aUser['user_notification']) && ($aUser['user_notification']))
    {
        
    }
    else
    {
        Phpfox::getService('notification.process')->add('foxfavorite_updateStatus', $iId, $aUser['user_id']);
    }
} 
 if(phpfox::isModule('socialpublishers'))
{
    $sUrl = phpfox::getLib('url')->makeUrl(phpfox::getUserBy('user_name'));
    $sType = 'status';
    $iUserId = phpfox::getUserId();
    $sMessage = html_entity_decode($aVals['user_status']);
    $aVals['url'] = $sUrl;
    $aVals['content'] = $sMessage;
    $aVals['title'] = $sMessage;
    phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVals);
} 
 ";s:37:"resume.service_process_setpublish_end";s:1109:"$iId = $aResume['resume_id'];

$bIsNotified = Phpfox::getService('foxfavorite.log')->isNotifiedFollower('resume', $iId);

if ($aResume['privacy'] == 0 && $aResume['status'] == 'approved' && !$bIsNotified)
{
    $aUsers = Phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {

        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addresume', $iId, $aUser['user_id']);
        }
    }

    Phpfox::getService('foxfavorite.log.process')->setNotifiedFollower('resume', $iId);
} 
 $aShareFeedInsert = array(
	         	'sType' => 'resume',
	            'iItemId' => $aResume['resume_id'],
	            'bIsCallback' => false,
	            'aCallback' => null,
	            'iPrivacy' => 0,
	            'iPrivacyComment' => 0,
        	);
			$sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . Phpfox::getUserId());
            Phpfox::getLib('cache')->save($sIdCache, $aShareFeedInsert); 
 ";s:42:"quiz.component_controller_view_process_end";s:4655:"if (Phpfox::isModule('foxfavorite') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
	
    ?>
 
    <?php
    $sModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();
	
    $iItemId = Phpfox::getService('foxfavorite')->getItemId($sModule);
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsFunctionedModule = Phpfox::getService('foxfavorite')->isFunctionedModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);
    
    if ($bIsViewItem && $bIsAvailModule && $sModule != 'pages' && !$bIsFunctionedModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
    	
        ?>
          <div id="yn_section_menu"  style="display:none;">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) {?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
            </ul>
            <ul>
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>"<?php if (!$bIsAlreadyFavorite){?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        
        <script type="text/javascript" language="javascript">                
            $Behavior.onCreateFavoriteButton = function() {
            	
            	if ($('#page_quiz_view').length){
            		
            		if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
	                {
	                    $bt_favor = '<div id="section_menu" style="position:static;margin-bottom:10px;overflow:hidden" class="yn_sectionmenu">' + $('#yn_section_menu').first().html() + '</div>';
	                    $('#breadcrumb_holder').append($bt_favor); //default theme
	                    $('.js_parent_feed_entry').prepend($bt_favor); //cosmic theme
	                    $('#section_menu').show();                    
	                }
	                else
	                {                                
	                    $bt_favor = $('.yn_page_favorite').first();
	                    $bt_unfavor = $('.yn_page_unfavorite').first();
	                    if($('#section_menu').find('ul').size() == 0)
	                    {                
	                        $('#section_menu').prepend("<ul></ul>");
	                    }
	                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_favor);                                    
	                    }
	                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_unfavor);                                    
	                    }                                
	                    $('#section_menu').show();                        
	                }   
	                $Behavior.inlinePopup();        
	            		
            		$('#yn_section_menu').html('');
				} //if ($('#page_blog_view').length){
                
                
                
                            
            };                                                                     
        </script>
        <?php
    }
}


?>
<script>
	$Behavior.testBehavior = function() {
		//console.log(oCore['core.section_module']);
	 };    	
</script>
<?php 
 ";s:41:"jobposting.service_process_unfavorite_end";s:107:"if ($sType == 'job')
{
    Phpfox::getService('foxfavorite.process')->UnFavorite('jobposting', $iId);
} 
 ";s:40:"coupon.component_ajax_deletefavorite_end";s:76:"Phpfox::getService('foxfavorite.process')->UnFavorite('coupon', $iItem); 
 ";s:42:"blog.component_controller_view_process_end";s:4:" 
 ";s:46:"document.component_controller_view_process_end";s:4517:"if (Phpfox::isModule('foxfavorite') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
	
    ?>

    <?php
    $sModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();
	
    $iItemId = Phpfox::getService('foxfavorite')->getItemId($sModule);
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsFunctionedModule = Phpfox::getService('foxfavorite')->isFunctionedModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);
    
    if ($bIsViewItem && $bIsAvailModule && $sModule != 'pages' && !$bIsFunctionedModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
    	
        ?>
          <div id="yn_section_menu"  style="display:none;">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) {?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
            </ul>
            <ul>
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" 
                    title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>"
                    href="#" 
                    onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" 
                    id="js_favorite_link_unlike_<?php echo $iItemId; ?>"
                    
                    <?php if (!$bIsAlreadyFavorite){?> style="display:none;"<?php } ?>
                    	
                    	>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        
        <script type="text/javascript" language="javascript">                
            $Behavior.onCreateFavoriteButton = function() {
            		
            		if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
	                {
	                    $bt_favor = '<div id="section_menu" style="position: static;overflow:hidden;margin-bottom:10px;" class="yn_sectionmenu">' + $('#yn_section_menu').first().html() + '</div>';
	                    $('#breadcrumb_holder').append($bt_favor); //default theme
	                    $('.js_parent_feed_entry').prepend($bt_favor); //cosmic theme
	                    $('#section_menu').show();                    
	                }
	                else
	                {                                
	                    $bt_favor = $('.yn_page_favorite').first();
	                    $bt_unfavor = $('.yn_page_unfavorite').first();
	                    if($('#section_menu').find('ul').size() == 0)
	                    {                
	                        $('#section_menu').prepend("<ul></ul>");
	                    }
	                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_favor);                                    
	                    }
	                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_unfavor);                                    
	                    }                                
	                    $('#section_menu').show();                        
	                }   
	                $Behavior.inlinePopup();        
	            		
            		$('#yn_section_menu').html('');

            };                                                                     
        </script>
        <?php
    }
} 
 ";s:42:"contest.service_process_deletefavorite_end";s:82:"Phpfox::getService('foxfavorite.process')->UnFavorite('contest', $iContestId); 
 ";s:40:"jobposting.component_controller_view_end";s:4603:"if (Phpfox::isModule('foxfavorite') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
	
    ?>
	
    <?php
    $sModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();
	
    $iItemId = Phpfox::getService('foxfavorite')->getItemId($sModule);
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsFunctionedModule = Phpfox::getService('foxfavorite')->isFunctionedModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);
    
    if ($bIsViewItem && $bIsAvailModule && $sModule != 'pages' && !$bIsFunctionedModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
    	
        ?>
          <div id="yn_section_menu"  style="display:none;">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) {?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
            </ul>
            <ul>
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" 
                    title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>"
                    href="#" 
                    onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" 
                    id="js_favorite_link_unlike_<?php echo $iItemId; ?>"
                    
                    <?php if (!$bIsAlreadyFavorite){?> style="display:none;"<?php } ?>
                    	
                    	>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        
        <script type="text/javascript" language="javascript">                
            $Behavior.onCreateFavoriteButton = function() {
            	if ($('#page_blog_view').length){
            		
            		if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
	                {
	                    $bt_favor = '<div id="section_menu" style="margin-right:40px;" class="yn_sectionmenu">' + $('#yn_section_menu').first().html() + '</div>';
	                    $('#breadcrumb_holder').append($bt_favor); //default theme
	                    $('.js_feed_comment_border').prepend($bt_favor); //cosmic theme
	                    $('#section_menu').show();                    
	                }
	                else
	                {                                
	                    $bt_favor = $('.yn_page_favorite').first();
	                    $bt_unfavor = $('.yn_page_unfavorite').first();
	                    if($('#section_menu').find('ul').size() == 0)
	                    {                
	                        $('#section_menu').prepend("<ul></ul>");
	                    }
	                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_favor);                                    
	                    }
	                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_unfavor);                                    
	                    }                                
	                    $('#section_menu').show();                        
	                }   
	                $Behavior.inlinePopup();        
	            		
            		$('#yn_section_menu').html('');
				} //if ($('#page_blog_view').length){
                            
            };                                                                     
        </script>
        <?php
    }
} 
 ";s:30:"event.service_process_add__end";s:1588:"if ($aSql['privacy'] == 0 && $aSql['view_id'] == 0)
{
    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {
            
        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addevent', $iId, $aUser['user_id']);
        }
    }
} 
 defined('PHPFOX') or exit('NO DICE!');

if (Phpfox::isModule('socialpublishers'))
{
    $iUserId = Phpfox::getService('socialpublishers')->getRealUser(Phpfox::getUserId());
    $sType = 'event';
    $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iUserId);

    $aShareFeedInsert = array(
        'sType' => $sType,
        'iItemId' => $iId,
        'bIsCallback' => false,
        'aCallback' => null,
        'iPrivacy' => (int) $aVals['privacy'],
        'iPrivacyComment' => (int) (isset($aVals['privacy_comment']) ? (int) $aVals['privacy_comment'] : 0),
    );
    Phpfox::getLib('cache')->save($sIdCache, $aShareFeedInsert);
    

    $aData = array();
    $aData['url'] = Phpfox::getLib('url')->permalink('event', $iId, $aVals['title']);
    $aData['text'] = (empty($aVals['description']) ? null : $oParseInput->clean($aVals['description']));
    $aData['content'] = (empty($aVals['description']) ? null : $oParseInput->clean($aVals['description']));
    $aData['title'] = $oParseInput->clean($aVals['title']);
    
    Phpfox::getService('socialpublishers')->showPublisher($sType, $iUserId, $aData);


} 
 ";s:39:"video.component_controller_play_process";s:4411:"if (Phpfox::isModule('foxfavorite') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{

    ?>

    <?php
    $sModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();
	
    $iItemId = Phpfox::getService('foxfavorite')->getItemId($sModule);
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsFunctionedModule = Phpfox::getService('foxfavorite')->isFunctionedModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);

    if ($bIsViewItem && $bIsAvailModule && $sModule != 'pages' && !$bIsFunctionedModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
        ?>
          <div id="section_menu" style="position:static;margin-bottom:10px;overflow:hidden" class="yn_sectionmenu">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) {?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
            </ul>
            <ul>
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>"<?php if (!$bIsAlreadyFavorite){?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        
        <script type="text/javascript" language="javascript">                
            $Behavior.onCreateFavoriteButton = function() {
            	if ($('#page_v_play').length){
            		
            		if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
	                {
	                    $bt_favor = '<div id="section_menu" class="yn_sectionmenu" style="position:static;overflow:hidden">' + $('#yn_section_menu').first().html() + '</div>';
	                    $('#breadcrumb_holder').append($bt_favor); //default theme
	                    $('.info_holder').append($bt_favor); //cosmic theme
	                    $('#section_menu').show();                    
	                }
	                else
	                {                                
	                    $bt_favor = $('.yn_page_favorite').first();
	                    $bt_unfavor = $('.yn_page_unfavorite').first();
	                    if($('#section_menu').find('ul').size() == 0)
	                    {                
	                        $('#section_menu').prepend("<ul></ul>");
	                    }
	                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_favor);                                    
	                    }
	                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_unfavor);                                    
	                    }                                
	                    $('#section_menu').show();                        
	                }   
	                $Behavior.inlinePopup();        
	            		
            		$('#yn_section_menu').html('');
				}
            };                                                                     
        </script>
        <?php
    }
} 
 ";s:44:"ecommerce.service_process_deletefavorite_end";s:128:";

if(Phpfox::isModule($sType)){

	Phpfox::getService('foxfavorite.process')->UnFavorite($sType, $aItem['product_id']);
}

; 
 ";s:42:"jobposting.service_job_process_publish_end";s:705:"$iId = $aJob['job_id'];

$bIsNotified = Phpfox::getService('foxfavorite.log')->isNotifiedFollower('jobposting', $iId);

if ($aJob['privacy'] == 0 && $aJob['is_approved'] == 1 && !$bIsNotified)
{
    $aUsers = Phpfox::getService('foxfavorite')->getUserInfoToSendNotification($aJob['user_id']);
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {

        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addjob', $iId, $aUser['user_id'], $aJob['user_id']);
        }
    }

    Phpfox::getService('foxfavorite.log.process')->setNotifiedFollower('jobposting', $iId);
} 
 ";s:42:"jobposting.service_job_process_approve_end";s:705:"$iId = $aJob['job_id'];

$bIsNotified = Phpfox::getService('foxfavorite.log')->isNotifiedFollower('jobposting', $iId);

if ($aJob['privacy'] == 0 && $aJob['post_status'] == 1 && !$bIsNotified)
{
    $aUsers = Phpfox::getService('foxfavorite')->getUserInfoToSendNotification($aJob['user_id']);
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {

        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addjob', $iId, $aUser['user_id'], $aJob['user_id']);
        }
    }

    Phpfox::getService('foxfavorite.log.process')->setNotifiedFollower('jobposting', $iId);
} 
 ";s:44:"advancedmarketplace.service_process_add__end";s:455:"if ($aVals['privacy'] == 0 && $aSql['view_id'] == 0)
{
    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {
            
        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addflisting', $iId, $aUser['user_id']);
        }
    }
} 
 ";s:47:"videochannel.service_process_addsharevideo__end";s:1416:"if ($aVals['privacy'] == 0 && $aSql['view_id'] == 0)
{
    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {
            
        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addchannelvideo', $iId, $aUser['user_id']);
        }
    }
} 
 if(phpfox::isModule('socialpublishers') && Phpfox::getUserParam('videochannel.approve_video_before_display') == false)
{
    $sUrl = Phpfox::permalink('videochannel', $iId, $aVals['title']);
    $sType = 'videochannel';
    $iUserId = Phpfox::getUserId();
    $sMessage = $sDescription;
    $aVal['text'] = $sDescription;
    $aVal['url'] = $sUrl;
    $aVal['content'] = $sMessage;
    $aVal['title'] = $aSql['title'];
    $bIsFrame = 3;
    $aShareFeedInsert = array(
        'sType' => 'videochannel',
        'iItemId' => $iId,
        'bIsCallback' => 3,
        'aCallback' => null,
        'iPrivacy' => (int) (isset($aVals['privacy']) ? (int) $aVals['privacy'] : 0),
        'iPrivacyComment' => 0,
    );
    $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iUserId);
    Phpfox::getLib('cache')->save($sIdCache,$aShareFeedInsert);
    Phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVal,$bIsFrame);
} 
 ";s:39:"contest.service_process_addfavorite_end";s:75:"Phpfox::getService('foxfavorite.process')->add('contest', $iContestId); 
 ";s:31:"fevent.service_process_add__end";s:361:"if ($aSql['privacy'] == 0 && $aSql['view_id'] == 0)
{
    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser) {
        if (empty($aUser['user_notification'])) {
            Phpfox::getService('notification.process')->add('foxfavorite_addfevent', $iId, $aUser['user_id']);
        }
    }
} 
 ";s:37:"music.component_controller_music_view";s:4652:"if (Phpfox::isModule('foxfavorite') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
	
    ?>

    <?php
    $sModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();
	
    $iItemId = Phpfox::getService('foxfavorite')->getItemId($sModule);
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsFunctionedModule = Phpfox::getService('foxfavorite')->isFunctionedModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);

    if ($bIsViewItem && $bIsAvailModule && $sModule != 'pages' && !$bIsFunctionedModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
    	
        ?>
          <div id="yn_section_menu"  style="display:none;">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) {?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
            </ul>
            <ul>
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>"<?php if (!$bIsAlreadyFavorite){?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        
        <script type="text/javascript" language="javascript">                
            $Behavior.onCreateFavoriteButton = function() {
            	if ($('#page_music_view').length){
            		
            		if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
	                {
	                    $bt_favor = '<div id="section_menu" style="position:static;margin-bottom:10px;overflow:hidden" class="yn_sectionmenu">' + $('#yn_section_menu').first().html() + '</div>';
	                    $('#breadcrumb_holder').append($bt_favor); //default theme
	                    $('.js_parent_feed_entry').prepend($bt_favor); //cosmic theme
	                    $('#section_menu').show();                    
	                }
	                else
	                {                                
	                    $bt_favor = $('.yn_page_favorite').first();
	                    $bt_unfavor = $('.yn_page_unfavorite').first();
	                    if($('#section_menu').find('ul').size() == 0)
	                    {                
	                        $('#section_menu').prepend("<ul></ul>");
	                    }
	                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_favor);                                    
	                    }
	                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_unfavor);                                    
	                    }                                
	                    $('#section_menu').show();                        
	                }   
	                $Behavior.inlinePopup();
	                
	                $('#yn_section_menu').html('');
	                
				} //if ($('#page_blog_view').length){
                
                
                
                            
            };                                                                     
        </script>
        <?php
    }
}


?>
<script>
	$Behavior.testBehavior = function() {
		//console.log(oCore['core.section_module']);
	 };    	
</script>
<?php 
 ";s:33:"blog.template_controller_view_end";s:4635:"if (Phpfox::isModule('foxfavorite') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
    $favor_img = Phpfox::getParam('core.path') . 'module/foxfavorite/static/image/favorite.png';
    $unfavor_img = Phpfox::getParam('core.path') . 'module/foxfavorite/static/image/unfavorite.png';
    ?>

    <?php
    $sModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();
	
    $iItemId = Phpfox::getService('foxfavorite')->getItemId($sModule);
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsFunctionedModule = Phpfox::getService('foxfavorite')->isFunctionedModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);
    
    if ($bIsViewItem && $bIsAvailModule && $sModule != 'pages' && !$bIsFunctionedModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
    	
        ?>
          <div id="yn_section_menu"  style="display:none;">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="javascript:void(0);" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) {?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
            </ul>
            <ul>
                <li class="yn_page_unfavorite">
                    <a class="unfavor" title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="javascript:void(0);" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>" <?php if (!$bIsAlreadyFavorite){?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        
        <script type="text/javascript" language="javascript">                
            $Behavior.onCreateFavoriteButton = function() {
            	if ($('#page_blog_view').length){
            		
            		if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
	                {
	                    $bt_favor = '<div id="section_menu" style="position: static; margin-bottom: 10px; overflow:hidden" class="yn_sectionmenu">' + $('#yn_section_menu').first().html() + '</div>';
	                    $('#breadcrumb_holder').append($bt_favor); //default theme
	                    $('.js_parent_feed_entry').prepend($bt_favor); //cosmic theme
	                    $('#section_menu').show();                    
	                }
	                else
	                {                                
	                    $bt_favor = $('.yn_page_favorite').first();
	                    $bt_unfavor = $('.yn_page_unfavorite').first();
	                    if($('#section_menu').find('ul').size() == 0)
	                    {                
	                        $('#section_menu').prepend("<ul></ul>");
	                    }
	                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_favor);                                    
	                    }
	                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_unfavor);                                    
	                    }                                
	                    $('#section_menu').show();                        
	                }   
	                $Behavior.inlinePopup();        
	            		
            		$('#yn_section_menu').html('');
				} 
            };                                                                     
        </script>
        <?php
    }
} 
 ";s:43:"photo.component_controller_view_process_end";s:5072:"if (Phpfox::isModule('foxfavorite') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
	
    ?>
  
    <?php
    $sModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();
	
    $iItemId = Phpfox::getService('foxfavorite')->getItemId($sModule);
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsFunctionedModule = Phpfox::getService('foxfavorite')->isFunctionedModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);
    
    if ($bIsViewItem && $bIsAvailModule && $sModule != 'pages' && !$bIsFunctionedModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
    	
        ?>
          <div id="yn_section_menu"  style="display:none;">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) {?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
            </ul>
            <ul>
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>"<?php if (!$bIsAlreadyFavorite){?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        
        <script type="text/javascript" language="javascript">                
            $Behavior.onCreateFavoriteButton = function() {
            	if ($('#page_photo_view').length){
            		
            		if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
	                {
	                    $bt_favor = '<div id="section_menu" style="position:static;margin-bottom:10px;overflow:hidden" class="yn_sectionmenu">' + $('#yn_section_menu').first().html() + '</div>';
	                    $('#breadcrumb_holder').append($bt_favor); //default theme
	                    $('.js_parent_feed_entry').prepend($bt_favor); //cosmic theme
	                    $('#section_menu').show();                    
	                }
	                else
	                {                                
	                    $bt_favor = $('.yn_page_favorite').first();
	                    $bt_unfavor = $('.yn_page_unfavorite').first();
	                    if($('#section_menu').find('ul').size() == 0)
	                    {                
	                        $('#section_menu').prepend("<ul></ul>");
	                    }
	                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_favor);                                    
	                    }
	                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_unfavor);                                    
	                    }                                
	                    $('#section_menu').show();                        
	                }   
	                $Behavior.inlinePopup();        
	            	$('#yn_section_menu').html('');	
            		
				} //if ($('#page_blog_view').length){
                
                
                
                            
            };                                                                     
        </script>
        <?php
    }
}


?>
<script>
	$Behavior.testBehavior = function() {
		//console.log(oCore['core.section_module']);
	 };    	
</script>
<?php 
 if (Phpfox::isModule('suggestion') && Phpfox::isUser()){
    
    if (Phpfox::getService('suggestion')->isSupportModule('photo') && Phpfox::getUserParam('suggestion.enable_friend_suggestion')){

        $sTitle = $aPhoto['title'];
        $iItemId = $aPhoto['photo_id'];
        $_SESSION['suggestion']['photo']['title'] = $sTitle;
        $_SESSION['suggestion']['photo']['photo_id'] = $iItemId;
    }

}/*end check module*/ 
 ";s:42:"karaoke.service_recording_process_add__end";s:334:"$aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();foreach ($aUsers as $iKey => $aUser){    if(isset($aUser['user_notification']) && ($aUser['user_notification']))    {    }    else    {    Phpfox::getService('notification.process')->add('foxfavorite_addkaraokerecording', $iId, $aUser['user_id']);    }} 
 ";s:33:"music.service_process_upload__end";s:1856:"if ($aInsert['privacy'] == 0 && $aInsert['view_id'] == 0){    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();    foreach ($aUsers  as $iKey  =>  $aUser)    {            if(isset($aUser['user_notification'] ) && ($aUser['user_notification']))    {        }        else        {        Phpfox::getService('notification.process')->add('foxfavorite_addmusic', $iId, $aUser['user_id']);        }    }} 
 if (Phpfox::isModule('suggestion') && Phpfox::isUser())
{
    if (Phpfox::getService('suggestion')->isSupportModule('music') && Phpfox::getUserParam('suggestion.enable_friend_suggestion'))
    {
        if (isset($aVals['iframe']))
        {
            $aPrivateData = Phpfox::getService('suggestion')->getPrivateData(Phpfox::getUserId());

            if (is_array($aPrivateData) && count($aPrivateData) > 0)
            {
                $aRet = unserialize(base64_decode($aPrivateData['message']));
                if (isset($aRet['item_id']))
                {
                    $_aFeed['item_id'] = $aRet['item_id'];
                    $_aFeed['sModule'] = $aRet['sModule'];
                    $sLinkCallback = urlencode($aRet['sLinkCallback']);
                    $sTitle = base64_encode(urlencode($aRet['title']));
                    $sPrefix = $aRet['prefix'];
                    $bShow = 1;

                    echo "<script type=\"text/javascript\">";
                    echo 'window.parent.suggestion_and_recommendation_tb_show("...", window.parent.$.ajaxBox(\'suggestion.friends\',\'iFriendId=' . $_aFeed['item_id'] . '&sSuggestionType=suggestion&sModule=suggestion_' . $_aFeed['sModule'] . '&sLinkCallback=' . $sLinkCallback . '&sTitle=' . $sTitle . '&sPrefix=' . $sPrefix . '&sExpectUserId=\'));';
                    echo "</script>";
                }
            }
            
        }
    }
} 
 ";s:49:"event.template_default_controller_view_extra_info";s:4387:"if ( Phpfox::isModule('foxfavorite')   && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
    ?>
    <style type="text/css">
    	.event_ynfoxlike_menu{
            position:static;
            margin-bottom:10px;
            overflow:hidden;
            padding-left: 15px;
            margin-left: 15px;
    	}
    </style>   
    <?php
    $sModule = 'event';
    $iItemId = (defined('PHPFOX_IS_USER_PROFILE')) ? Phpfox::getLib('request')->get('req1') : Phpfox::getLib('request')->getInt('req2');
    
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);

    if ($bIsViewItem && $bIsAvailModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
        ?>
        <div id="section_menu" style="position:static;overflow:hidden" class="yn_sectionmenu mb-4">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) { ?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>                
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>"<?php if (!$bIsAlreadyFavorite) { ?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        <script type="text/javascript" language="javascript">
            $Behavior.onCreateFavoriteButton = function() {
            	$( document ).ready(function() 
            	{
            		if ($('#page_event_view').length)
            		{
            			if($('.event_ynfoxlike_menu').size() == 0 && $('#yn_section_menu').html() != null)
		                {
		                    $bt_favor = '<div class="event_ynfoxlike_menu" >' + $('#yn_section_menu').first().html() + '</div>';
		                    $('#breadcrumb_holder').append($bt_favor); //default theme
		                    $('.info_holder').append($bt_favor); //cosmic theme
		                    $('#section_menu').show();
		                }
		                else
		                {                                
		                    $bt_favor = $('.yn_page_favorite').first();
		                    $bt_unfavor = $('.yn_page_unfavorite').first();
		                    if($('#section_menu').find('ul').size() == 0)
		                    {                
		                        $('#section_menu').prepend("<ul></ul>");
		                    }
		                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
		                    {                                                      
		                        $('#section_menu').find('ul').prepend($bt_favor);                                    
		                    }
		                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
		                    {                                                      
		                        $('#section_menu').find('ul').prepend($bt_unfavor);                                    
		                    }                                
		                    $('#section_menu').show();
		                }                   		
		                $Behavior.inlinePopup();    
		                $('#yn_section_menu').html('');
            		}
				});
            };
        </script>
        <?php
    }
} 
 ";s:49:"photo.template_default_controller_view_extra_info";s:8145:"if (phpfox::getUserBy('view_id') != 7 && Phpfox::isUser())
{
    $favor_img = phpfox::getParam('core.path') . 'module/foxfavorite/static/image/favorite.png';
    $unfavor_img = phpfox::getParam('core.path') . 'module/foxfavorite/static/image/unfavorite.png';
    $sModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();
    $iItemId = $this->_aVars['aForms']['photo_id'];
    $bIsAlreadyFavorite = phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);
    if (phpfox::getLib('request')->get('req1') !== 'photo')
    {
        $bIsAvailModule = phpfox::getService('foxfavorite')->isAvailModule($sModule);

        if ($bIsAvailModule !== false)
        {
            $sVersion = phpfox::getVersion();
            $fVersion = (float) $sVersion;
            if ($fVersion >= 3.3)
            {
                ?>
                <li class="favor_dot" style="display:none">
                    <span>&#183;</span>
                </li>
                <li class="favor_photo">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide();$.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="inlinePopup" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" style="display:none;">
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
                <li class="unfavor_photo">
                    <a  title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>" style="display:none;">
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>

                <script type="text/javascript" language="javascript">
                    $Behavior.onCreateFavoriteButton = function() {
                        //$(".yn_favor_photo_button").remove();
                        $bt_favor = $('.favor_photo');//.addClass("yn_favor_photo_button");
                        $bt_unfavor = $('.unfavor_photo');//.addClass("yn_favor_photo_button");
                        $favor_dot = $('.favor_dot');//.addClass("yn_favor_photo_button");
                        var item_id = <?php echo $iItemId; ?>;
                        var bIsAlreadyFavorite = <?php echo ($bIsAlreadyFavorite ? "true" : "false"); ?>;
                        
                        if($('#js_photo_view_comment_holder').find('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').find('.favor_dot').size()==0) {
                            $('#js_photo_view_comment_holder').find('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').append($favor_dot);
                        }
                        if($('#js_photo_view_comment_holder').find('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').find('.favor_photo').size()==0) {
                            $('#js_photo_view_comment_holder').find('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').append($bt_favor);
                        }
                        if($('#js_photo_view_comment_holder').find('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').find('.unfavor_photo').size()==0) {
                            $('#js_photo_view_comment_holder').find('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').append($bt_unfavor);
                        }
                        
                        if(!bIsAlreadyFavorite) //$('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').find($bt_favor).size() < 2 && 
                        {
                            $('.favor_dot:first').show();
                            $('#js_favorite_link_like_'+item_id+':first').show();
                        }
                        if(bIsAlreadyFavorite) //$('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').find($bt_unfavor).size() < 2 && 
                        {	
                            $('.favor_dot:first').show();
                            $('#js_favorite_link_unlike_'+item_id+':first').show();
                        }
                    };
                </script>
                <?php
            }
            else
            {
                ?>
                <style type="text/css">
                    .favor_photo, .unfavor_photo{
                        font-size:12px;
                        font-weight:bold;
                    }                    
                </style>

                <li class="favor_dot" style="display:none">
                    <span>&#183;</span>
                </li>
                <li class="favor_photo">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide();$.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="inlinePopup" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" style="display:none;">
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
                <li class="unfavor_photo">
                    <a  title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>" style="display:none;">
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>

                <script type="text/javascript" language="javascript">
                    $Behavior.onCreateFavoriteButton = function() {                        
                        $bt_favor = $('.favor_photo');//.addClass("yn_favor_photo_button");
                        $bt_unfavor = $('.unfavor_photo');//.addClass("yn_favor_photo_button");
                        $favor_dot = $('.favor_dot');//.addClass("yn_favor_photo_button");
                        var item_id = <?php echo $iItemId; ?>;
                        var bIsAlreadyFavorite = <?php echo ($bIsAlreadyFavorite ? "true" : "false"); ?>;
                        $('.photo_view_comment').find('.js_feed_comment_border').find('ul:first').append($favor_dot);
                        $('.photo_view_comment').find('.js_feed_comment_border').find('ul:first').append($bt_favor);
                        $('.photo_view_comment').find('.js_feed_comment_border').find('ul:first').append($bt_unfavor);
                        if($('.photo_view_comment').find('.js_feed_comment_border').find('ul:first').find($bt_favor).size() < 2 && !bIsAlreadyFavorite)
                        {
                            $('.favor_dot:first').show();
                            $('#js_favorite_link_like_'+item_id+':first').show();
                        }
                        if($('.photo_view_comment').find('.js_feed_comment_border').find('ul:first').find($bt_unfavor).size() < 2 && bIsAlreadyFavorite)
                        {	
                            $('.favor_dot:first').show();
                            $('#js_favorite_link_unlike_'+item_id+':first').show();
                        }
                    };
                </script>
                <?php
            }
        }
    }
} 
 ";s:41:"ecommerce.service_process_addfavorite_end";s:115:";

if(Phpfox::isModule($sType)){

	Phpfox::getService('foxfavorite.process')->add($sType, (int) $iItemId);
}

; 
 ";s:50:"contest.service_contest_process_publishcontest_end";s:922:"$iId = $iContestId;

$bIsNotified = Phpfox::getService('foxfavorite.log')->isNotifiedFollower('contest', $iId);

$aCheckItem = $this->database()->select('user_id, contest_status, is_approved, privacy')->from(Phpfox::getT('contest'))->where('contest_id = '.$iId)->execute('getSlaveRow');

if ($aCheckItem['contest_status'] == 4 && $aCheckItem['privacy'] == 0) // && $aCheckItem['is_approved'] == 1
{
    $aUsers = Phpfox::getService('foxfavorite')->getUserInfoToSendNotification($aCheckItem['user_id']);
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {

        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addcontest', $iId, $aUser['user_id'], $aCheckItem['user_id']);
        }
    }

    Phpfox::getService('foxfavorite.log.process')->setNotifiedFollower('contest', $iId);
} 
 ";s:28:"poll.service_process_add_end";s:442:"if ($aInsert['privacy'] == 0 && $aInsert['view_id'] == 0){    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();    foreach ($aUsers as $iKey => $aUser)    {        if (isset($aUser['user_notification']) && ($aUser['user_notification']))        {                    }        else        {            Phpfox::getService('notification.process')->add('foxfavorite_addpoll', $iId, $aUser['user_id']);        }    }} 
 ";s:38:"resume.service_process_addfavorite_end";s:71:"Phpfox::getService('foxfavorite.process')->add('resume', $iItemId); 
 ";s:52:"foxfeedspro.service_foxfeedspro_addfavoritednews_end";s:76:"Phpfox::getService('foxfavorite.process')->add('foxfeedspro', $iNewsId); 
 ";s:25:"blog.service_process__end";s:488:"if ($aVals['privacy'] == 0 && $aVals['post_status'] == 1 && $aInsert['is_approved'] == 1)
{
    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {
            
        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addblog', $iId, $aUser['user_id']);
        }
    }
} 
 ";s:36:"petition.service_process_approve_end";s:667:"$bIsNotified = Phpfox::getService('foxfavorite.log')->isNotifiedFollower('petition', $iId);

if ($aPetition['privacy'] == 0 && !$bIsNotified)
{
    $aUsers = Phpfox::getService('foxfavorite')->getUserInfoToSendNotification($aPetition['user_id']);
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {

        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addpetition', $iId, $aUser['user_id'], $aPetition['user_id']);
        }
    }

    Phpfox::getService('foxfavorite.log.process')->setNotifiedFollower('petition', $iId);
} 
 ";s:58:"musicsharing.template_default_controller_listen_extra_info";s:4290:"if (Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
    ?>
     
    <?php
    $sModule = 'musicsharing';
    $iItemId = (defined('PHPFOX_IS_USER_PROFILE')) ? Phpfox::getLib('request')->get('req1') : Phpfox::getLib('request')->get('req2');
	
 	try{
 		if (isset($this->_aVars['music_info']["song_id"]))
			{
				 $iItemId =$this->_aVars['music_info']["song_id"];
			}
 	}catch(Exception $e)
	{}
	
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);
	
	 
	
    if ($bIsViewItem && $bIsAvailModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
        ?>
        <div id="yn_section_menu"  style="display:none;">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) { ?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>                
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>"<?php if (!$bIsAlreadyFavorite) { ?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        <script type="text/javascript" language="javascript">
            $Behavior.onCreateFavoriteButton = function() {
                if ($('#page_musicsharing_listen').length){
            		
            		if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
	                {
	                    $bt_favor = '<div id="section_menu" style="position:static; margin-bottom: 10px; overflow:hidden" class="yn_sectionmenu">' + $('#yn_section_menu').first().html() + '</div>';
	                    $('#breadcrumb_holder').append($bt_favor); //default theme
	                    $('#Comment').prepend($bt_favor); //cosmic theme
	                    $('#section_menu').show();                    
	                }
	                else
	                {                                
	                    $bt_favor = $('.yn_page_favorite').first();
	                    $bt_unfavor = $('.yn_page_unfavorite').first();
	                    if($('#section_menu').find('ul').size() == 0)
	                    {                
	                        $('#section_menu').prepend("<ul></ul>");
	                    }
	                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_favor);                                    
	                    }
	                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_unfavor);                                    
	                    }                                
	                    $('#section_menu').show();                        
	                }   
	                $Behavior.inlinePopup();        
	            		
            		$('#yn_section_menu').html('');
				} //if ($('#page_blog_view').length){
            };
        </script>
        <?php
    }
} 
 ";s:36:"marketplace.service_process_add__end";s:454:"if ($aVals['privacy'] == 0 && $aSql['view_id'] == 0)
{
    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {
            
        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addlisting', $iId, $aUser['user_id']);
        }
    }
} 
 ";s:44:"directory.service_process_deletefavorite_end";s:138:";

if(Phpfox::isModule('directory')){
	Phpfox::getService('foxfavorite.process')->UnFavorite('directory', $aItem['business_id']);
}

; 
 ";s:30:"photo.service_process_add__end";s:573:"if (!$bIsUpdate){    if (isset($aVals['privacy']) && isset($aVals['view_id']) && $aVals['privacy'] == 0 && $aVals['view_id'] == 0)    {        $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();        foreach ($aUsers as $iKey => $aUser)        {            if (isset($aUser['user_notification']) && ($aUser['user_notification']))            {                            }            else            {                Phpfox::getService('notification.process')->add('foxfavorite_addphoto', $iId, $aUser['user_id']);            }        }    }} 
 ";s:38:"pages.component_controller_view_assign";s:5150:"if (Phpfox::isModule('foxfavorite') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
    $foxfavoriteModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();

    $iItemId = Phpfox::getService('foxfavorite')->getItemId($foxfavoriteModule);
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($foxfavoriteModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($foxfavoriteModule);
    $bIsFunctionedModule = Phpfox::getService('foxfavorite')->isFunctionedModule($foxfavoriteModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($foxfavoriteModule, $iItemId);

    if ($bIsViewItem && $bIsAvailModule   && !$bIsFunctionedModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
        $html ='<div id=\"yn_section_menu\"  style=\"display:none;\">';

        $html .='<a  class=\"favor\" href=\"#\" onclick=\"$(\'#js_favorite_link_unlike_'.$iItemId.'\').show(); $(\'#js_favorite_link_like_'.$iItemId.'\').hide(); $.ajaxCall(\'foxfavorite.addFavorite\', \'type='.$foxfavoriteModule.'&amp;id='.$iItemId.'\', \'GET\'); return false;\"  id=\"js_favorite_link_like_'. $iItemId.'\" title=\"'._p('foxfavorite.add_to_your_favorites').'\"';
        if ($bIsAlreadyFavorite) {
            $html .= ' style=\"display:none;\">';
        }
        else{
            $html .= '>';
        }
        $html .= _p('foxfavorite.favorite').'</a>';

        $html .= '<a class=\"unfavor\" title=\"'._p('foxfavorite.remove_from_your_favorite').'\" href=\"#\" onclick=\"$(\'#js_favorite_link_like_'.$iItemId.'\').show(); $(\'#js_favorite_link_unlike_'.$iItemId.'\').hide(); $.ajaxCall(\'foxfavorite.deleteFavorite\', \'type='. $foxfavoriteModule.'&amp;id='.$iItemId.'\', \'GET\'); return false;\" id=\"js_favorite_link_unlike_'. $iItemId.'\"';
        if (!$bIsAlreadyFavorite) {
            $html .= ' style=\"display:none;\">';
        }
        else{
            $html .='>';
        }
        $html.= _p('foxfavorite.unfavorite').'</a></div>';
        $this->template()->setHeader('<script type="text/javascript">

        	var gan_nut_unfavorite = true;
            $Behavior.onCreateFavoriteButton = function() {
                    if(!$(\'body\').find(\'#yn_section_menu\').length) { $(\'body\').append("'.$html.'"); }
            		if ($(\'#page_pages_view\').length && !$(\'#ynfavorite\').length){

            		if($(\'#section_menu\').size() == 0 && $(\'#yn_section_menu\').html() != null)
	                {
	                    $bt_favor = \'<div id="ynfavorite"   class="yn_sectionmenu">\' + $(\'#yn_section_menu\').first().html() + \'</div>\';
	                    $(\'.profile-actions .profile-action-block:first\').prepend($bt_favor); //cosmic theme
	                    $(\'#section_menu\').show();
	                }
	                else
	                {
	                    $bt_favor = $(\'.yn_page_favorite\').first();
	                    $bt_unfavor = $(\'.unfavor\');
	                    if (gan_nut_unfavorite){
	                    	$(\'#ynfavorite\').prepend($bt_unfavor);
	                    }
	                }
	                $Behavior.inlinePopup();

                    }

    	  			$(\'#yn_section_menu\').html(\'\');
            };
        </script>');
    }
} 
 $iPageId = (int)$this->request()->getInt('req2');

if ($iPageId>0 && Phpfox::isModule('suggestion')  && Phpfox::isUser() ){        
    /*get detail pages*/
    
    $aPages = Phpfox::getService('pages')->getPage($iPageId);
	$sTitle = base64_encode(urlencode($aPages['title']));
    
    $sSuggestToFriends = _p('suggestion.suggest_to_friends_2');
    $sCurrentUrl = Phpfox::getLib('url')->getFullUrl(); 
    $aRequest = Phpfox::getLib('request')->getRequests(); 
    $iUserId = Phpfox::getUserId();
    $html ='<a id=\"btnSuggestPage\" class=\"pages_like_join built\" onclick=\"suggestion_and_recommendation_tb_show(\'...\',$.ajaxBox(\'suggestion.friends\',\'iFriendId='.$iPageId.'&sSuggestionType=suggestion&sModule=suggestion_pages&sLinkCallback='.$sCurrentUrl.'&sTitle='.$sTitle.'&sPrefix=pages_\')); return false;\" href=\"#\">'.$sSuggestToFriends.'</a>';
    if (Phpfox::getUserParam('suggestion.enable_friend_suggestion')){
        if(!isset($aRequest['req3'])  || (isset($aRequest['req3']) && $aRequest['req3'] == "info" ) ) {
            $this->template()->setHeader('<script language="javascript">
            $Behavior.ynSuggestPage = function(){
                $().ready(function(){
                     if ($(\'._is_pages_view\').length)
                        {
                            var add = true
                            if (!$("#btnSuggestPage").length)
                            {
                                 $(\'.pages_header_name\').parent().append("'.$html.'");
                                 add = false;
                            }

                        }
                });
    }
    </script><style>
        #js_is_user_profile #js_is_page #section_menu{min-width: 0px;}
		#section_menu ul{float: right;}
    </style>');
        }
    }
} /*end check module*/ 
 ";s:29:"petition.service_process__end";s:1581:"if ($aInsert['privacy'] == 0 && $aInsert['is_approved'] == 1)
{
    $aUsers = Phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {

        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addpetition', $iId, $aUser['user_id']);
        }
    }

    Phpfox::getService('foxfavorite.log.process')->setNotifiedFollower('petition', $iId);
} 
 defined('PHPFOX') or exit('NO DICE!');

if (Phpfox::isModule('socialpublishers'))
{
    $iUserId = Phpfox::getService('socialpublishers')->getRealUser(Phpfox::getUserId());

    $sType = 'petition';
    $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iUserId);
    $aShareFeedInsert = array(
        'sType' => $sType,
        'iItemId' => $iId,
        'bIsCallback' => isset($aCallback),
        'aCallback' => $aCallback,
        'iPrivacy' => (int) $aVals['privacy'],
        'iPrivacyComment' => (int) (isset($aVals['privacy_comment']) ? (int) $aVals['privacy_comment'] : 0),
    );
    Phpfox::getLib('cache')->save($sIdCache, $aShareFeedInsert);

    $aData = array();
    $aData['url'] = Phpfox::getLib('url')->permalink('petition', $iId, $sTitle);
    $aData['text'] = $oFilter->clean($aVals['short_description']);
    $aData['content'] = $oFilter->clean($aVals['description']);
    $aData['title'] = $sTitle;
    
    Phpfox::getService('socialpublishers')->showPublisher($sType, $iUserId, $aData, 4);
} 
 ";s:37:"karaoke.service_song_process_add__end";s:329:"$aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();foreach ($aUsers as $iKey => $aUser){    if(isset($aUser['user_notification']) && ($aUser['user_notification']))    {    }    else    {    Phpfox::getService('notification.process')->add('foxfavorite_addkaraokesong', $iId, $aUser['user_id']);    }} 
 ";s:57:"advancedphoto.template_default_controller_view_extra_info";s:8176:"if (phpfox::getUserBy('view_id') != 7 && Phpfox::isUser())
{
    $sModule = 'advancedphoto';
    $favor_img = phpfox::getParam('core.path') . 'module/foxfavorite/static/image/favorite.png';
    $unfavor_img = phpfox::getParam('core.path') . 'module/foxfavorite/static/image/unfavorite.png';
    $iItemId = $this->_aVars['aForms']['photo_id'];
    $bIsAlreadyFavorite = phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);
    if (phpfox::getLib('request')->get('req1') !== 'advancedphoto')
    {
        $bIsAvailModule = phpfox::getService('foxfavorite')->isAvailModule($sModule);

        if ($bIsAvailModule !== false)
        {
            $sVersion = phpfox::getVersion();
            $fVersion = (float) $sVersion;
            if ($fVersion >= 3.3)
            {
                ?>
                <li class="favor_dot" style="display:none">
                    <span>&#183;</span>
                </li>
                <li class="favor_photo yn_page_favorite" style="list-style-type: none;">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="inlinePopup" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" style="display:none;">
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
                <li class="unfavor_photo yn_page_unfavorite" style="list-style-type: none;">
                    <a  title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>" style="display:none;">
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>

                <script type="text/javascript" language="javascript">
                    $Behavior.onCreateFavoriteButton = function() {
                        //$(".yn_favor_photo_button").remove();
                        $bt_favor = $('.favor_photo');//.addClass("yn_favor_photo_button");
                        $bt_unfavor = $('.unfavor_photo');//.addClass("yn_favor_photo_button");
                        $favor_dot = $('.favor_dot');//.addClass("yn_favor_photo_button");
                        var item_id = <?php echo $iItemId; ?>;
                        var bIsAlreadyFavorite = <?php echo ($bIsAlreadyFavorite ? "true" : "false"); ?>;
                        
                        if($('#js_photo_view_comment_holder').find('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').find('.favor_dot').size()==0) {
                            $('#js_photo_view_comment_holder').find('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').append($favor_dot);
                        }
                        if($('#js_photo_view_comment_holder').find('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').find('.favor_photo').size()==0) {
                            $('#js_photo_view_comment_holder').find('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').append($bt_favor);
                        }
                        if($('#js_photo_view_comment_holder').find('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').find('.unfavor_photo').size()==0) {
                            $('#js_photo_view_comment_holder').find('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').append($bt_unfavor);
                        }
                        
                        if(!bIsAlreadyFavorite) //$('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').find($bt_favor).size() < 2 && 
                        {
                            $('.favor_dot:first').show();
                            $('#js_favorite_link_like_'+item_id+':first').show();
                        }
                        if(bIsAlreadyFavorite) //$('.js_feed_comment_border').find('.comment_mini_link_like').find('ul:first').find($bt_unfavor).size() < 2 && 
                        {	
                            $('.favor_dot:first').show();
                            $('#js_favorite_link_unlike_'+item_id+':first').show();
                        }
                    };
                </script>
                <?php
            }
            else
            {
                ?>
                <style type="text/css">
                    .favor_photo, .unfavor_photo{
                        font-size:12px;
                        font-weight:bold;
                    }                    
                </style>

                <li class="favor_dot" style="display:none">
                    <span>&#183;</span>
                </li>
                <li class="favor_photo">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide();$.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="inlinePopup" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" style="display:none;">
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
                <li class="unfavor_photo">
                    <a  title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>" style="display:none;">
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>

                <script type="text/javascript" language="javascript">
                    $Behavior.onCreateFavoriteButton = function() {                        
                        $bt_favor = $('.favor_photo');//.addClass("yn_favor_photo_button");
                        $bt_unfavor = $('.unfavor_photo');//.addClass("yn_favor_photo_button");
                        $favor_dot = $('.favor_dot');//.addClass("yn_favor_photo_button");
                        var item_id = <?php echo $iItemId; ?>;
                        var bIsAlreadyFavorite = <?php echo ($bIsAlreadyFavorite ? "true" : "false"); ?>;
                        $('.photo_view_comment').find('.js_feed_comment_border').find('ul:first').append($favor_dot);
                        $('.photo_view_comment').find('.js_feed_comment_border').find('ul:first').append($bt_favor);
                        $('.photo_view_comment').find('.js_feed_comment_border').find('ul:first').append($bt_unfavor);
                        if($('.photo_view_comment').find('.js_feed_comment_border').find('ul:first').find($bt_favor).size() < 2 && !bIsAlreadyFavorite)
                        {
                            $('.favor_dot:first').show();
                            $('#js_favorite_link_like_'+item_id+':first').show();
                        }
                        if($('.photo_view_comment').find('.js_feed_comment_border').find('ul:first').find($bt_unfavor).size() < 2 && bIsAlreadyFavorite)
                        {	
                            $('.favor_dot:first').show();
                            $('#js_favorite_link_unlike_'+item_id+':first').show();
                        }
                    };
                </script>
                <?php
            }
        }
    }
} 
 ";s:38:"jobposting.service_job_process_add_end";s:572:"if ($aInsert['privacy'] == 0 && $aInsert['post_status'] == 1 && $aInsert['is_approved'] == 1)
{
    $aUsers = Phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {

        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addjob', $iId, $aUser['user_id']);
        }
    }

    Phpfox::getService('foxfavorite.log.process')->setNotifiedFollower('jobposting', $iId);
} 
 ";s:50:"contest.service_contest_process_approvecontest_end";s:921:"$iId = $iContestId;

$bIsNotified = Phpfox::getService('foxfavorite.log')->isNotifiedFollower('contest', $iId);

$aCheckItem = $this->database()->select('user_id, contest_status, is_published, privacy')->from(Phpfox::getT('contest'))->where('contest_id = '.$iId)->execute('getSlaveRow');

if ($aCheckItem['contest_status'] == 4 && $aCheckItem['is_published'] == 1 && $aCheckItem['privacy'] == 0)
{
    $aUsers = Phpfox::getService('foxfavorite')->getUserInfoToSendNotification($aCheckItem['user_id']);
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {

        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addcontest', $iId, $aUser['user_id'], $aCheckItem['user_id']);
        }
    }

    Phpfox::getService('foxfavorite.log.process')->setNotifiedFollower('contest', $iId);
} 
 ";s:38:"coupon.service_process_addfavorite_end";s:71:"Phpfox::getService('foxfavorite.process')->add('coupon', $iItemId); 
 ";s:40:"video.service_process_addsharevideo__end";s:452:"if ($aVals['privacy'] == 0 && $aSql['view_id'] == 0)
{
    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {
            
        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addvideo', $iId, $aUser['user_id']);
        }
    }
} 
 ";s:38:"advancedphoto.service_process_add__end";s:521:"if (!$bIsUpdate){    if (($aVals['privacy'] == 0) && ($aVals['view_id'] == 0))    {        $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();        foreach ($aUsers as $iKey => $aUser)        {            if (isset($aUser['user_notification']) && ($aUser['user_notification']))            {                            }            else            {                Phpfox::getService('notification.process')->add('foxfavorite_addphoto', $iId, $aUser['user_id']);            }        }    }} 
 ";s:40:"videochannel.component_ajax_favorite_end";s:78:"Phpfox::getService('foxfavorite.process')->add('videochannel', $iVideoId); 
 ";s:39:"contest.service_contest_process_add_end";s:825:"$iId = $iContestId;

$aCheckItem = $this->database()->select('contest_status, is_published, is_approved, privacy')->from(Phpfox::getT('contest'))->where('contest_id = '.$iId)->execute('getSlaveRow');

if ($aCheckItem['contest_status'] == 4 && $aCheckItem['is_published'] == 1 && $aCheckItem['privacy'] == 0) // && $aCheckItem['is_approved'] == 1
{
    $aUsers = Phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {

        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addcontest', $iId, $aUser['user_id']);
        }
    }

    Phpfox::getService('foxfavorite.log.process')->setNotifiedFollower('contest', $iId);
} 
 ";s:45:"directory.service_process_approvebusiness_end";s:494:";

if(Phpfox::isModule('directory')){
    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification($aItem['user_id']);
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {
            
        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addbusiness', $aItem['business_id'], $aUser['user_id'], $aItem['user_id']);
        }
    }
}

; 
 ";s:39:"jobposting.service_process_favorite_end";s:100:"if ($sType == 'job')
{
    Phpfox::getService('foxfavorite.process')->add('jobposting', $iId);
} 
 ";s:55:"marketplace.template_default_controller_view_extra_info";s:4675:"if (Phpfox::isModule('foxfavorite') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
	
    ?>
	
    <?php
    $sModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();
	
    $iItemId = Phpfox::getService('foxfavorite')->getItemId($sModule);
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsFunctionedModule = Phpfox::getService('foxfavorite')->isFunctionedModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);
    
    if ($bIsViewItem && $bIsAvailModule && $sModule != 'pages' && !$bIsFunctionedModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
    	
        ?>
          <div id="section_menu" style="position:static;margin-bottom:10px;overflow:hidden" class="yn_sectionmenu">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) {?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
            </ul>
            <ul>
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>"<?php if (!$bIsAlreadyFavorite){?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        
        <script type="text/javascript" language="javascript">                
            $Behavior.onCreateFavoriteButton = function() {
            	if ($('#page_marketplace_view').length){
            		
            		if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
	                {
	                    $bt_favor = '<div id="section_menu" class="yn_sectionmenu" style="position:static;overflow:hidden">' + $('#yn_section_menu').first().html() + '</div>';
	                    $('#breadcrumb_holder').append($bt_favor); //default theme
	                    $('.info_holder').append($bt_favor); //cosmic theme
	                    $('#section_menu').show();                    
	                }
	                else
	                {                                
	                    $bt_favor = $('.yn_page_favorite').first();
	                    $bt_unfavor = $('.yn_page_unfavorite').first();
	                    if($('#section_menu').find('ul').size() == 0)
	                    {                
	                        $('#section_menu').prepend("<ul></ul>");
	                    }
	                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_favor);                                    
	                    }
	                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_unfavor);                                    
	                    }                                
	                    $('#section_menu').show();                        
	                }   
	                $Behavior.inlinePopup();        
	            		
            		$('#yn_section_menu').html('');
				} //if ($('#page_blog_view').length){
                
                
                
                            
            };                                                                     
        </script>
        <?php
    }
}


?>
<script>
	$Behavior.testBehavior = function() {
		//console.log(oCore['core.section_module']);
	 };    	
</script>
<?php 
 ";s:65:"advancedmarketplace.template_default_controller_detail_extra_info";s:3694:"if (!Phpfox::getParam('core.site_wide_ajax_browsing') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
    ?>
 
    <?php
    $sModule = 'advancedmarketplace';
    $iItemId = (defined('PHPFOX_IS_USER_PROFILE')) ? Phpfox::getLib('request')->get('req2') : Phpfox::getLib('request')->getInt('req3');
    
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);

    if ($bIsViewItem && $bIsAvailModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
        ?>
        <div id="section_menu" style="position:static;margin-bottom:10px;overflow:hidden" class="yn_sectionmenu">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) { ?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>                
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>"<?php if (!$bIsAlreadyFavorite) { ?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        <script type="text/javascript" language="javascript">
            $Behavior.onCreateFavoriteButton = function() {
                if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
                {
                    $bt_favor = '<div id="section_menu">' + $('#yn_section_menu').first().html() + '</div>';
                    $('#breadcrumb_holder').append($bt_favor); //default theme
                    $('.item_info').append($bt_favor); //cosmic theme
                    $('#section_menu').show();
                }
                else
                {
                    $bt_favor = $('.yn_page_favorite').first();
                    $bt_unfavor = $('.yn_page_unfavorite').first();
                    if($('#section_menu').find('ul').size() == 0)
                    {
                        $('#section_menu').prepend("<ul></ul>");
                    }
                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
                    {
                        $('#section_menu').find('ul').prepend($bt_favor);
                    }
                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
                    {
                        $('#section_menu').find('ul').prepend($bt_unfavor);
                    }
                    $('#section_menu').show();
                }
                $Behavior.inlinePopup();
                $('#yn_section_menu').html('');
            };
        </script>
        <?php
    }
} 
 ";s:36:"feed.component_block_display_process";s:849:"// Prevent Like button on feeds from phpFox 3.7.0
/*
foreach ($aRows as $k => $aRow)
{
    if (strpos($aRow['like_type_id'], "foxfavorite_") !== false)
    {
        unset($aRows[$k]['like_type_id']);
    }
}
 * 
 */ 
 if(isset($iFeedPage) && (int)$iFeedPage == 0){
	if(!isset($aFeedCallback)
		|| !isset($aFeedCallback['module'])
		|| ( $aFeedCallback['module'] != 'event' && $aFeedCallback['module'] != 'fevent' && $aFeedCallback['module'] != 'directory' && $aFeedCallback['module'] != 'pages' && $aFeedCallback['module'] != 'groups' && $aFeedCallback['module'] != 'auction' && $aFeedCallback['module'] != 'ecommerce')
		){
		$aYnSaAds = Phpfox::getService('socialad.ad')->getToDisplayOnFeed();
		if($aYnSaAds) {
			$iYnPosition = Phpfox::getParam('socialad.position_of_feed_ad');
			array_splice($aRows, $iYnPosition, 0, $aYnSaAds);
		}
	}
} 
 ";s:42:"karaoke.service_process_deletefavorite_end";s:75:"Phpfox::getService('foxfavorite.process')->UnFavorite('karaoke', $iId); 
 ";s:36:"resume.service_basic_process_add_end";s:722:"$aResume = $this->database()->select('privacy, status, is_published')->from($this->_sTable)->where('resume_id = '.$iId)->execute('getSlaveRow');

if ($aResume['privacy'] == 0 && $aResume['status'] == 'approved' && $aResume['is_published'] == 1)
{
    $aUsers = Phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {

        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addresume', $iId, $aUser['user_id']);
        }
    }

    Phpfox::getService('foxfavorite.log.process')->setNotifiedFollower('resume', $iId);
} 
 ";s:42:"videochannel.component_ajax_unfavorite_end";s:85:"Phpfox::getService('foxfavorite.process')->UnFavorite('videochannel', $iVideoId); 
 ";s:55:"foxfeedspro.service_foxfeedspro_deletefavoritednews_end";s:83:"Phpfox::getService('foxfavorite.process')->UnFavorite('foxfeedspro', $iNewsId); 
 ";s:51:"advancedphoto.component_controller_view_process_end";s:4009:"if (Phpfox::isModule('foxfavorite') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
	
    ?>
  
    <?php
    $sModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();
	
    $iItemId = Phpfox::getService('foxfavorite')->getItemId($sModule);
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsFunctionedModule = Phpfox::getService('foxfavorite')->isFunctionedModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);
    
    if ($bIsViewItem && $bIsAvailModule && $sModule != 'pages' && !$bIsFunctionedModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
    	
        ?>
          <div id="yn_section_menu"  style="display:none;">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) {?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
            </ul>
            <ul>
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>"<?php if (!$bIsAlreadyFavorite){?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>

        <script type="text/javascript" language="javascript">
            $Behavior.onCreateFavoriteButton = function() {
                if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
                {
                    $bt_favor = '<div id="section_menu" style="position: static; margin-bottom: 10px; overflow:hidden">' + $('#yn_section_menu').first().html() + '</div>';
                    $('#breadcrumb_holder').append($bt_favor); //default theme
                    $('.js_parent_feed_entry').prepend($bt_favor); //cosmic theme //cosmic theme
                    $('#section_menu').show();
                }
                else
                {
                    $bt_favor = $('.yn_page_favorite').first();
                    $bt_unfavor = $('.yn_page_unfavorite').first();
                    if($('#section_menu').find('ul').size() == 0)
                    {
                        $('#section_menu').prepend("<ul></ul>");
                    }
                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
                    {
                        $('#section_menu').find('ul').prepend($bt_favor);
                    }
                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
                    {
                        $('#section_menu').find('ul').prepend($bt_unfavor);
                    }
                    $('#section_menu').show();
                }
                $Behavior.inlinePopup();
                $('#yn_section_menu').html('');
            };
        </script>
        <?php
    }
}


?>
<script>
	$Behavior.testBehavior = function() {
		//console.log(oCore['core.section_module']);
	 };    	
</script>
<?php 
 ";s:39:"karaoke.service_process_addfavorite_end";s:68:"Phpfox::getService('foxfavorite.process')->add('karaoke', $iId); 
 ";s:33:"document.service_process_add__end";s:458:"if ($aInsert['privacy'] == 0 && $aInsert['is_approved'] == 1){    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();    foreach ($aUsers as $iKey => $aUser)    {        if (isset($aUser['user_notification']) && ($aUser['user_notification']))        {                    }        else        {            Phpfox::getService('notification.process')->add('foxfavorite_adddocument', $iDocumentId, $aUser['user_id']);        }    }} 
 ";s:50:"fevent.template_default_controller_view_extra_info";s:3994:"if (!Phpfox::getParam('core.site_wide_ajax_browsing') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
    $sModule = 'fevent';
    $iItemId = (defined('PHPFOX_IS_USER_PROFILE')) ? Phpfox::getLib('request')->get('req1') : Phpfox::getLib('request')->getInt('req2');
    
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);

    if ($bIsViewItem && $bIsAvailModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
        ?>
        <div id="yn_section_menu"  style="display:none;">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="javascript:void(0);" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) { ?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>                
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="javascript:void(0);" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>"<?php if (!$bIsAlreadyFavorite) { ?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        <script type="text/javascript" language="javascript">
            $Behavior.onCreateFavoriteButton = function() {
                if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
                {
                    $bt_favor = '<div id="section_menu" style="position:static;margin-bottom:10px;overflow:hidden">' + $('#yn_section_menu').first().html() + '</div>';
                    $('#breadcrumb_holder').append($bt_favor); //default theme
                    $('.p-detail-feedcomment').prepend($bt_favor); //cosmic theme
                    $('#section_menu').show();
                }
                else
                {                                
                    $bt_favor = $('.yn_page_favorite').first();
                    $bt_unfavor = $('.yn_page_unfavorite').first();
                    if($('#section_menu').find('ul').size() == 0)
                    {                
                        $('#section_menu').prepend("<ul></ul>");
                    }
                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
                    {                                                      
                        $('#section_menu').find('ul').prepend($bt_favor);                                    
                    }
                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
                    {                                                      
                        $('#section_menu').find('ul').prepend($bt_unfavor);                                    
                    }                                
                    $('#section_menu').show();
                }                   		
                $Behavior.inlinePopup();
                $('#yn_section_menu').html('');
            };
        </script>
        <?php
    }
} 
 ";s:37:"videochannel.service_process_add__end";s:458:"if ($aSql['privacy'] == 0 && $aSql['view_id'] == 0)
{
    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {
            
        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addchannelvideo', $iId, $aUser['user_id']);
        }
    }
} 
 ";s:55:"videochannel.service_channel_process_addsharevideo__end";s:458:"if ($aSql['privacy'] == 0 && $aSql['view_id'] == 0)
{
    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {
            
        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addchannelvideo', $iId, $aUser['user_id']);
        }
    }
} 
 ";s:34:"resume.service_process_approve_end";s:688:"$bIsNotified = Phpfox::getService('foxfavorite.log')->isNotifiedFollower('resume', $iId);

if ($aResume['privacy'] == 0 && $aResume['is_published'] == 1 && !$bIsNotified)
{
    $aUsers = Phpfox::getService('foxfavorite')->getUserInfoToSendNotification($aResume['user_id']);
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {

        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addresume', $iId, $aUser['user_id'], $aResume['user_id']);
        }
    }

    Phpfox::getService('foxfavorite.log.process')->setNotifiedFollower('resume', $iId);
} 
 ";s:41:"directory.service_process_addfavorite_end";s:124:";

if(Phpfox::isModule('directory')){
	Phpfox::getService('foxfavorite.process')->add('directory', (int) $iItemId);
}

; 
 ";s:29:"quiz.service_process_add__end";s:600:"if ($aVals['privacy'] == 0 && $aVals['view_id'] == 0)
{
    $aUsers = phpfox::getService('foxfavorite')->getUserInfoToSendNotification();
    foreach ($aUsers as $iKey => $aUser)
    {
        if (isset($aUser['user_notification']) && ($aUser['user_notification']))
        {
            
        }
        else
        {
            Phpfox::getService('notification.process')->add('foxfavorite_addquiz', $iQuizId, $aUser['user_id']);
        }
    }
} 
 if (isset($iQuizId) && Phpfox::isModule('suggestion') && Phpfox::isUser()){
    $_SESSION['suggestion']['quiz']['quiz_id'] = $iQuizId;    
} 
 ";s:42:"poll.component_controller_view_process_end";s:4643:"if (Phpfox::isModule('foxfavorite') && Phpfox::isUser() && (Phpfox::getUserBy('view_id') == 0))
{
	
    ?>
   
    <?php
    $sModule = (defined('PHPFOX_IS_USER_PROFILE')) ? 'profile' : Phpfox::getLib('module')->getModuleName();
	
    $iItemId = Phpfox::getService('foxfavorite')->getItemId($sModule);
    $bIsViewItem = Phpfox::getService('foxfavorite')->isViewItem($sModule);
    $bIsAvailModule = Phpfox::getService('foxfavorite')->isAvailModule($sModule);
    $bIsFunctionedModule = Phpfox::getService('foxfavorite')->isFunctionedModule($sModule);
    $bIsAlreadyFavorite = Phpfox::getService('foxfavorite')->isAlreadyFavorite($sModule, $iItemId);
    
    if ($bIsViewItem && $bIsAvailModule && $sModule != 'pages' && !$bIsFunctionedModule && !Phpfox::isAdminPanel() && !defined('PHPFOX_IS_USER_PROFILE'))
    {
    	
        ?>
          <div id="yn_section_menu"  style="display:none;">
            <ul>
                <li  class="yn_page_favorite">
                    <a href="#" onclick="$('#js_favorite_link_unlike_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_like_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.addFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" class="favor" id="js_favorite_link_like_<?php echo $iItemId; ?>" title="<?php echo _p('foxfavorite.add_to_your_favorites'); ?>" <?php if ($bIsAlreadyFavorite) {?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.favorite'); ?>
                    </a>
                </li>
            </ul>
            <ul>
                <li  class="yn_page_unfavorite">
                    <a class="unfavor" title="<?php echo _p('foxfavorite.remove_from_your_favorite'); ?>" href="#" onclick="$('#js_favorite_link_like_<?php echo $iItemId; ?>').show(); $('#js_favorite_link_unlike_<?php echo $iItemId; ?>').hide(); $.ajaxCall('foxfavorite.deleteFavorite', 'type=<?php echo $sModule; ?>&amp;id=<?php echo $iItemId; ?>', 'GET'); return false;" id="js_favorite_link_unlike_<?php echo $iItemId; ?>"<?php if (!$bIsAlreadyFavorite){?> style="display:none;"<?php } ?>>
                        <?php echo _p('foxfavorite.unfavorite'); ?>
                    </a>
                </li>
            </ul>
        </div>
        
        <script type="text/javascript" language="javascript">                
            $Behavior.onCreateFavoriteButton = function() {
            	if ($('#page_poll_view').length){
            		
            		if($('#section_menu').size() == 0 && $('#yn_section_menu').html() != null)
	                {
	                    $bt_favor = '<div id="section_menu" style="position:static;margin-bottom:10px;overflow:hidden" class="yn_sectionmenu">' + $('#yn_section_menu').first().html() + '</div>';
	                    $('#breadcrumb_holder').append($bt_favor); //default theme
	                    $('.js_parent_feed_entry').prepend($bt_favor); //cosmic theme
	                    $('#section_menu').show();                    
	                }
	                else
	                {                                
	                    $bt_favor = $('.yn_page_favorite').first();
	                    $bt_unfavor = $('.yn_page_unfavorite').first();
	                    if($('#section_menu').find('ul').size() == 0)
	                    {                
	                        $('#section_menu').prepend("<ul></ul>");
	                    }
	                    if($('#section_menu').find('.yn_page_favorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_favor);                                    
	                    }
	                    if($('#section_menu').find('.yn_page_unfavorite').size() == 0)
	                    {                                                      
	                        $('#section_menu').find('ul').prepend($bt_unfavor);                                    
	                    }                                
	                    $('#section_menu').show();                        
	                }   
	                $Behavior.inlinePopup();        
	            		
            		$('#yn_section_menu').html('');
				} //if ($('#page_blog_view').length){
                
                
                
                            
            };                                                                     
        </script>
        <?php
    }
}


?>
<script>
	$Behavior.testBehavior = function() {
		//console.log(oCore['core.section_module']);
	 };    	
</script>
<?php 
 ";s:25:"check_url_is_array_return";s:571:"if(Phpfox::isModule('foxfeedspro')){
    $pos = strpos($sUrls, '/news/profileviewrss/go_profilemanagerssprovider/');
    if ($pos !== false) {
      $sUrls = str_replace("/news/profileviewrss/go_profilemanagerssprovider/", "/foxfeedspro/profileviewrss/go_profilemanagerssprovider/", $sUrls);
    }

    $pos = strpos($sUrls, '/' . Phpfox::getParam('admincp.admin_cp') . '/news/');
    if ($pos !== false) {
      $sUrls = str_replace('/' . Phpfox::getParam('admincp.admin_cp') . '/news/', '/' . Phpfox::getParam('admincp.admin_cp') . '/foxfeedspro/', $sUrls);
    }
} 
 ";s:44:"foxfeedspro.component_controller_index_clean";s:1505:"// Get Create Options
$menusButton = Phpfox::getLib('template')->getMenu('foxfeedspro');
$menusAddFeed = array_filter($menusButton, function($menu) {
   return ($menu['url'] == 'foxfeedspro.addfeed');
});

$activeMenuAddFeed = count($menusAddFeed)?true:false;

$bCanCreateFeed = Phpfox::getUserParam('foxfeedspro.can_add_rss_provider') && $activeMenuAddFeed;

$bCanCreateNews = Phpfox::getUserParam('foxfeedspro.can_add_news_items');

$sTextFeedCreate = _p('foxfeedspro.add_rss_provider');	
$sTextNewsCreate = _p('foxfeedspro.add_news');
$sCorePath = Phpfox::getParam('core.path');
?>
<script type="text/javascript">
	$Behavior.loadMenuFoxFeedsPro = function(){
		var bodyId = $('body').attr('id');
		var patt1 = /^page_foxfeedspro/g;
		if (!patt1.test(bodyId)) {
			return false;
		}
		$('.breadcrumbs_menu').eq(0).find('ul> li> a').each(function(index) {
			var href = $(this).attr('href');
			var patt2 = /addfeed$/g;
    		if (patt2.test(href)) {
    			$(this).remove();
    		}
		});
		
		menus = $('.breadcrumbs_menu ul li.foxfeedpro-menu-item');
		for( i =0 ; i<menus.length ; i++) {
			menus[i].remove();
		}	
	 }
 </script>
<?php
	if(!Phpfox::getParam('foxfeedspro.is_using_advanced_category'))
	{
?>
	<script type="text/javascript">
	 $Behavior.removeUselessMenuFoxFeedsPro = function(){
		$('.page_breadcrumbs_menu').find('a').each(function(index) {
			var href = $(this).attr('href');
    		if (href.match(/news\/add\//g)) {
    			$(this).remove();
    		}
		});

	 }
	</script>
<?php
	} 
 ";s:33:"validator.admincp_settings_friend";s:339:"$aValidation['friend_display_limit'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => 'Friend display limit must be greater than 0',
];
$aValidation['friend_suggestion_search_total'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => '"Friends Suggestion Friends Check Count" must be greater than 0',
]; 
 ";s:38:"validator.admincp_user_settings_friend";s:198:"$aValidation = [
    'total_folders' => [
        'def' => 'int:required',
        'min' => 0,
        'title' => _p('allowed_total_friend_folders_must_be_greater_than_or_equals_to_0'),
    ]
]; 
 ";s:33:"validator.admincp_settings_invite";s:196:"$aValidation = [
    'pendings_to_show_per_page'=>[
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('"How Many Pendings To Show" must be greater than 0'),
    ]
]; 
 ";s:39:"validator.admincp_settings_notification";s:353:"$aValidation['notify_ajax_refresh'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => _p('"Site Wide Notification AJAX Refresh" must be greater than 0'),
];
$aValidation['total_notification_title_length'] = [
    'def' => 'int:required',
    'min' => '11',
    'title' => _p('"Notification Title Length" must be greater than 10'),
]; 
 ";s:43:"user.template_controller_login_block__start";s:136:"if (Phpfox::isModule('opensocialconnect')) {
    echo Phpfox::getService('opensocialconnect.providers')->viewLoginHeaderVisitor();
} 
 ";s:30:"core_view_functions_breadcrumb";s:743:"defined('PHPFOX') or exit('NO DICE!');

if (Phpfox::isModule('opensocialconnect') && !Phpfox::isUser()) {
    // Providers
    Phpfox::getService('opensocialconnect.providers')->viewLoginHeader();
    echo '<script type="text/javascript">
      $Behavior.ynSocialConnectAddProviders = function() {
        if ($(\'.opensocialconnect_holder_header\').length < 2) {
          var guestActions = $(\'[data-component="guest-actions"]\');
          if (guestActions.length) {
            if ($(\'#opensocialconnect_holder_header\').length) {
              guestActions.prepend($(\'#opensocialconnect_holder_header\'));
            }
          }
        }
        $Behavior.ynSocialConnectAddProviders = function(){};
      };
    </script>';
}; 
 ";s:39:"user.component_controller_profile_clean";s:1348:"/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
$sModule = phpfox::getLib('module')->getModuleName();
$sController = Phpfox::getLib('module')->getFullControllerName();
$sReq = PHPFOX::getLib('request')->get('group');
if ($sReq && flavor()->active->id != 'material') {
    ?>
    <script>
        $Behavior.onCreateTab = function () {
            var oOject = $('#group_<?php echo $sReq;?>');
            var oCustum = $('.js_custom_group_<?php echo $sReq;?>');
            var sReg = <?php echo (int)$sReq; ?>;
            if (oOject.length <= 0) {
                var iCount = sReg;
                for (i = iCount + 1; i < 10; i++) {
                    oOject = $('#group_' + i);
                    oCustum = $('.js_custom_group_' + i);
                    if (oOject.length > 0) {
                        break;
                    }
                }
                if (oOject.length <= 0) {
                    oOject = $('#group_basic');
                    oCustum = $('.js_custom_group_basic');
                }
            }
            oOject.parents('ul:first').find('li').removeClass('active');
            oOject.parent().addClass('active');
            $('.js_custom_groups').hide();
            oCustum.show();
            return false;
        };
    </script>
    <?php
} 
 ";s:35:"validator.admincp_settings_socialad";s:1994:"$aValidation = [
    'number_ads_shown_per_view_on_feed' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Number of Ads Shown On Feed" must be greater than or equal to 0'),
    ],
    'number_user_view_to_display_ad' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Number of User Views Before Display Ads on Feed" must be greater than or equal to 0'),
    ],
    'position_of_feed_ad' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Position of Feed Ads on Feed List When It displays" must be greater than or equal to 0'),
    ],
    'maxium_number_of_html_ads' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Maximum number of HTML ads shown on block 3" must be greater than or equal to 0'),
    ],
    'maxium_number_of_banner_ads' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Maximum Number of Banner Ads on Each Block" must be greater than or equal to 0'),
    ],
    'html_ad_ajax_refresh_time' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"HTML Ad Refresh Time (Seconds)" must be greater than or equal to 0'),
    ],
    'number_user_view_to_display_html_ads' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Number of User Views Before Display HTML Ads" must be greater than or equal to 0'),
    ],
    'number_user_view_to_display_banner_ads' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Number of User Views Before Display Banner Ads" must be greater than or equal to 0'),
    ],
    'number_of_ad_updated_by_cron' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Number of Ad Updated by Cron" must be greater than or equal to 0'),
    ],
    'pay_later_request_expired_time' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('"Pay Later Request Expire Time (Days)" must be greater than 0'),
    ],
]; 
 ";s:27:"ynblog.service_process__end";s:949:"/**
 * Created by PhpStorm.
 * User: thanhnc
 * Date: 20/02/2017
 * Time: 09:22
 */

if(Phpfox::isModule('socialpublishers'))
{
    $sUrl = Phpfox::permalink('ynblog', $iId, $aVals['title']);
    $sType = 'ynblog';
    $iUserId = Phpfox::getUserId();
    $sMessage = $aVals['text'];
    $aVal['text'] = $aVals['text'];
    $aVal['url'] = $sUrl;
    $aVal['content'] = $sMessage;
    $aVal['title'] = $aVals['title'];
    $bIsFrame = 3;
    $aShareFeedInsert = array(
        'sType' => 'ynblog',
        'iItemId' => $iId,
        'bIsCallback' => 3,
        'aCallback' => null,
        'iPrivacy' => (int) (isset($aVals['privacy']) ? (int) $aVals['privacy'] : 0),
        'iPrivacyComment' => 0,
    );
    $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iUserId);
    Phpfox::getLib('cache')->save($sIdCache,$aShareFeedInsert);
    Phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVal,$bIsFrame);
} 
 ";s:26:"theme_template_body__start";s:1202:"defined('PHPFOX') or exit('NO DICE!');

if ('event' == Phpfox::getLib('request')->getInt('req1') && $iEventId = Phpfox::getLib('request')->getInt('req2'))
{
	if (Phpfox::isModule('socialpublishers'))
	{
        $iUserId = Phpfox::getService('socialpublishers')->getRealUser(Phpfox::getUserId());

		$sIdCache = Phpfox::getLib('cache') -> set("socialpublishers_feed_" . $iUserId);
		$aFeed = Phpfox::getLib('cache') -> get($sIdCache);

		if ($aFeed && isset($aFeed['params']) && $aFeed['params'])
        {
            $aExistSettings = Phpfox::getService('socialpublishers.modules')->getUserModuleSettings(Phpfox::getService('socialpublishers')->getRealUser(Phpfox::getUserId()), 'event');
            if (!isset($aExistSettings['no_ask']) || $aExistSettings['no_ask'] == 0)
            {
                if (!isset($aFeed['is_show']) || $aFeed['is_show'] == 0)
                {
                    echo "<script type=\"text/javascript\">
                        \$Behavior.loadThemePublisher = function(){
                            window.parent.\$Core.box('socialpublishers.share', 500);
                        };
                    </script>";
                }
            }
        }
	}
} 
 ";s:32:"suggestion.component_add_request";s:363:"$socialpublisher = phpfox::getLib('session')->get('socialpublisher');
if (count($socialpublisher))
{
    $aSharePublishers = $socialpublisher['aSharePublishers'];
    $iUserId = $socialpublisher['iUserId'];
    $aShareType = $socialpublisher['aShareType'];
    phpfox::getService('socialpublishers')->showPublisher($aShareType, $iUserId, $aSharePublishers);
} 
 ";s:34:"ynblog.service_process_update__end";s:949:"/**
 * Created by PhpStorm.
 * User: thanhnc
 * Date: 20/02/2017
 * Time: 10:55
 */

if(Phpfox::isModule('socialpublishers'))
{
    $sUrl = Phpfox::permalink('ynblog', $iId, $aVals['title']);
    $sType = 'ynblog';
    $iUserId = Phpfox::getUserId();
    $sMessage = $aVals['text'];
    $aVal['text'] = $aVals['text'];
    $aVal['url'] = $sUrl;
    $aVal['content'] = $sMessage;
    $aVal['title'] = $aVals['title'];
    $bIsFrame = 3;
    $aShareFeedInsert = array(
        'sType' => 'ynblog',
        'iItemId' => $iId,
        'bIsCallback' => 3,
        'aCallback' => null,
        'iPrivacy' => (int) (isset($aVals['privacy']) ? (int) $aVals['privacy'] : 0),
        'iPrivacyComment' => 0,
    );
    $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iUserId);
    Phpfox::getLib('cache')->save($sIdCache,$aShareFeedInsert);
    Phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVal,$bIsFrame);
} 
 ";s:41:"advancedphoto.component_ajax_process_done";s:1473:"if(phpfox::isModule('socialpublishers') && !Phpfox::getUserParam('photo.photo_must_be_approved'))
{
    $aFeed = Phpfox::getService('feed')->get(Phpfox::getUserId(), $iFeedId);
    $sUrl = Phpfox::permalink('advancedphoto', $aPhoto['photo_id'], $aPhoto['title']);
    $sType = 'advancedphoto';
    $iUserId = phpfox::getUserId();
    $sMessage = $aFeed[0]['feed_status'];
    $aVals['url'] = $sUrl;
    $aVals['content'] = $sMessage;
    $aVals['title'] = $aPhoto['title'];
    $bIsFrame = true;
    phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVals,$bIsFrame);    

} 
 if(Phpfox::getUserParam('suggestion.enable_friend_suggestion') && Phpfox::getUserParam('suggestion.enable_content_suggestion_popup') && Phpfox::getService('suggestion')->isAllowContentSuggestionPopup()) { 
	$iItemId = $aImages[0]['photo_id'];
	$aPhoto = Phpfox::getService("advancedphoto")->getCoverPhoto($iItemId);
	$sTitle = base64_encode(urlencode($aPhoto['title']));
	$sExpectUserId = Phpfox::getUserId();
	$sLinkCallback = Phpfox::getParam('core.path').'advancedphoto/'.$aPhoto['photo_id'];

	echo "window.parent.$(document).ready(function(){setTimeout(function(){window.parent.suggestion_and_recommendation_tb_show('...', window.parent.$.ajaxBox('suggestion.friends','iFriendId=".$iItemId."&sSuggestionType=suggestion&sModule=suggestion_advancedphoto&sLinkCallback=".$sLinkCallback."&sTitle=".$sTitle."&sPrefix=&sExpectUserId=".$sExpectUserId."'));}, 500);});";
 } 
 ";s:38:"user.component_ajax_addviastatusupdate";s:452:"if(phpfox::isModule('socialpublishers') && !Phpfox::getUserParam('poll.poll_requires_admin_moderation'))
{
    $sUrl = Phpfox::permalink('poll', $iPollId, $aPoll['question']);
    $sType = 'poll';
    $iUserId = phpfox::getUserId();
    $sMessage = $aPoll['question'];
    $aVals['url'] = $sUrl;
    $aVals['content'] = $sMessage;
    $aVals['title'] = $sMessage;
    phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVals);
} 
 ";s:38:"music.component_controller_upload_feed";s:508:"if(phpfox::isModule('socialpublishers') && !Phpfox::getUserParam('music.music_song_approval'))
{
    $sUrl = Phpfox::permalink('music', $aSong['song_id'], $aSong['title']);
    $sType = 'music';
    $iUserId = phpfox::getUserId();
    $sMessage = html_entity_decode($aVals['status_info']);
    $aVals['url'] = $sUrl;
    $aVals['content'] = $sMessage;
    $aVals['title'] = $aSong['title'];
	$bIsFrame = true;
    phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVals,$bIsFrame);
} 
 ";s:47:"ynsocialstore.service_process_approveStore__end";s:1626:"if(phpfox::isModule('socialpublishers') && Phpfox::getUserId() == $aItem['user_id'])
{
    if(isset($iPageId) && $iPageId)
    {
        $aCallBack = array(
			'module' => 'pages',
			'item_id' => $iPageId,
			'table_prefix' => 'pages_'
		);	
        $aFeed = Phpfox::getService('feed')->callback($aCallBack)->get(Phpfox::getUserId(), $iFeedId);    
    }
    else
    {
        $aFeed = Phpfox::getService('feed')->get(Phpfox::getUserId(), $iFeedId);    
    }
    if(count($aFeed))
    { 
        $sUrl = $aFeed[0]['feed_link'];
        $sType = 'ynsocialstore_store';
        $iUserId = Phpfox::getUserId();
        $sMessage = (isset($aFeed[0]['feed_status']) && !empty($aFeed[0]['feed_status'])) ? $aFeed[0]['feed_status'] : isset($aFeed[0]['feed_title']) ? $aFeed[0]['feed_title'] : "";        
        $aVal['text'] = (isset($aVals['description'])) ? $oFilter->clean($aVals['description']) : "";
        $aVal['url'] = $sUrl;
        $aVal['content'] = $sMessage;
        $aVal['title'] = $aVals['title'];
        $bIsFrame = 3;
        $aShareFeedInsert = array(
	         	'sType' => 'ynsocialstore_store',
	            'iItemId' => $iStoreId,
	            'bIsCallback' => 3,
	            'aCallback' => null,
	            'iPrivacy' => (int) (isset($aVals['privacy']) ? (int) $aVals['privacy'] : 0),
	            'iPrivacyComment' => 0,
        	);
        $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iUserId);
        Phpfox::getLib('cache')->save($sIdCache,$aShareFeedInsert);
        phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVal,$bIsFrame);
    }    
} 
 ";s:47:"ultimatevideo.service_playlist_process_add__end";s:1647:"if(phpfox::isModule('socialpublishers') && !user('ynuv_should_be_approve_before_display_playlist'))
{
    if(isset($iPageId) && $iPageId)
    {
        $aCallBack = array(
			'module' => 'pages',
			'item_id' => $iPageId,
			'table_prefix' => 'pages_'
		);	
        $aFeed = Phpfox::getService('feed')->callback($aCallBack)->get(Phpfox::getUserId(), $iFeedId);    
    }
    else
    {
        $aFeed = Phpfox::getService('feed')->get(Phpfox::getUserId(), $iFeedId);    
    }
    if(count($aFeed))
    { 
        $sUrl = $aFeed[0]['feed_link'];
        $sType = 'ultimatevideo_playlist';
        $iUserId = Phpfox::getUserId();
        $sMessage = (isset($aFeed[0]['feed_status']) && !empty($aFeed[0]['feed_status'])) ? $aFeed[0]['feed_status'] : isset($aFeed[0]['feed_title']) ? $aFeed[0]['feed_title'] : "";        
        $aVal['text'] = (isset($aVals['description'])) ? $oFilter->clean($aVals['description']) : "";
        $aVal['url'] = $sUrl;
        $aVal['content'] = $sMessage;
        $aVal['title'] = $aVals['title'];
        $bIsFrame = 3;
        $aShareFeedInsert = array(
	         	'sType' => 'ultimatevideo_playlist',
	            'iItemId' => $iVideoId,
	            'bIsCallback' => 3,
	            'aCallback' => null,
	            'iPrivacy' => (int) (isset($aVals['privacy']) ? (int) $aVals['privacy'] : 0),
	            'iPrivacyComment' => 0,
        	);
        $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iUserId);
        Phpfox::getLib('cache')->save($sIdCache,$aShareFeedInsert);
        phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVal,$bIsFrame);
    }    
} 
 ";s:34:"document.service_process_feed__end";s:1142:"if(phpfox::isModule('socialpublishers') && Phpfox::getUserParam('document.approve_document_before_display'))
{
	$aDocument = PHpfox::getLib("database")->select('*')
			->from(Phpfox::getT('document'))
			->where('document_id = '.$iDocumentId)
			->execute('getRow');
		$sUrl = Phpfox::permalink('document', $iDocumentId, $aDocument['title']);
		$sType = 'document';
		$iUserId = Phpfox::getUserId();
		$sMessage = $aDocument['title'];
		$aVals['url'] = $sUrl;
		$aVals['content'] = $sMessage;
		$aVals['text'] = $aDocument['title'];
		$aVals['title'] = $aDocument['title'];
		$aShareFeedInsert = array(
	         	'sType' => 'document',
	            'iItemId' => $aDocument['document_id'],
	            'bIsCallback' => false,
	            'aCallback' => null,
	            'iPrivacy' => 0,
	            'iPrivacyComment' => 0,
        	);
			$aShareFeedInsert['title'] = $aVals['title'];

			$sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . Phpfox::getUserId());
            Phpfox::getLib('cache')->save($sIdCache, $aShareFeedInsert);
		phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVals);
} 
 ";s:41:"petition.component_controller_add_process";s:720:"defined('PHPFOX') or exit('NO DICE!');
if ($iEditId)
{
	if (Phpfox::isModule('socialpublishers'))
	{
		$sIdCache = Phpfox::getLib('cache') -> set("socialpublishers_feed_" . Phpfox::getUserId());
		$aFeed = Phpfox::getLib('cache') -> get($sIdCache);
		if ($aFeed)
        {
            $aExistSettings = Phpfox::getService('socialpublishers.modules')->getUserModuleSettings(Phpfox::getService('socialpublishers')->getRealUser(Phpfox::getUserId()), 'petition');
            if (!isset($aExistSettings['no_ask']) || $aExistSettings['no_ask'] == 0)
            {
                if (!isset($aFeed['is_show']) || $aFeed['is_show'] == 0)
                {
                   
                }
            }
        }
	}
} 
 ";s:57:"ynsocialstore.service_product_process_approveProduct__end";s:1674:"//TODO implement product
if(phpfox::isModule('socialpublishers') && Phpfox::getUserParam('ynsocialstore.auto_approved_store'))
{
    if(isset($iPageId) && $iPageId)
    {
        $aCallBack = array(
			'module' => 'pages',
			'item_id' => $iPageId,
			'table_prefix' => 'pages_'
		);	
        $aFeed = Phpfox::getService('feed')->callback($aCallBack)->get(Phpfox::getUserId(), $iFeedId);    
    }
    else
    {
        $aFeed = Phpfox::getService('feed')->get(Phpfox::getUserId(), $iFeedId);    
    }
    if(count($aFeed))
    { 
        $sUrl = $aFeed[0]['feed_link'];
        $sType = 'ynsocialstore_product';
        $iUserId = Phpfox::getUserId();
        $sMessage = (isset($aFeed[0]['feed_status']) && !empty($aFeed[0]['feed_status'])) ? $aFeed[0]['feed_status'] : isset($aFeed[0]['feed_title']) ? $aFeed[0]['feed_title'] : "";        
        $aVal['text'] = (isset($aVals['description'])) ? $oFilter->clean($aVals['description']) : "";
        $aVal['url'] = $sUrl;
        $aVal['content'] = $sMessage;
        $aVal['title'] = $aVals['title'];
        $bIsFrame = 3;
        $aShareFeedInsert = array(
	         	'sType' => 'ynsocialstore_product',
	            'iItemId' => $iProductId,
	            'bIsCallback' => 3,
	            'aCallback' => null,
	            'iPrivacy' => (int) (isset($aVals['privacy']) ? (int) $aVals['privacy'] : 0),
	            'iPrivacyComment' => 0,
        	);
        $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iUserId);
        Phpfox::getLib('cache')->save($sIdCache,$aShareFeedInsert);
        phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVal,$bIsFrame);
    }    
} 
 ";s:29:"feed.service_process_add__end";s:3902:"defined('PHPFOX') or exit('NO DICE!');

if (Phpfox::isModule('socialpublishers'))
{
	
    if ((Phpfox::getUserId() || $iOwnerUserId > 0) && $sType != "event_comment" && strpos(strtolower($sType), 'liked') == false)
    {
        $aShareFeedInsert = array(
            'sType' => $sType,
            'iItemId' => $iItemId,
            'bIsCallback' => $this->_bIsCallback,
            'aCallback' => $this->_aCallback,
            'iPrivacy' => (int) $iPrivacy,
            'iPrivacyComment' => (int) $iPrivacyComment,
        );
		
		$aListModules = array('contest','coupon','jobposting_company','jobposting_job', 'fundraising','directory','ultimatevideo_video','ultimatevideo_playlist','ynsocialstore_store','ynsocialstore_product');
		if (in_array($sType, $aListModules) && $iOwnerUserId>0) {
			PHpfox::getService('user.auth')->setUserId($iOwnerUserId);
		}

        if ($aInsert['user_id'] == Phpfox::getUserId())
        {
            $iActualUserId = Phpfox::getService('socialpublishers')->getRealUser(Phpfox::getUserId());
            if ($sType == 'feed_comment')
            {
                $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iActualUserId);
                Phpfox::getLib('cache')->save($sIdCache, $aShareFeedInsert);
                $aShareType = $sType;
                $iUserId = $iParentUserId;
                $aSharePublishersFeed = Phpfox::getLib('database')->select("*")->from(Phpfox::getT('feed_comment'))->where('feed_comment_id = ' . (int) $iItemId)->execute('getRow');

                $aSharePublishers['url'] = isset($aSharePublishersFeed['feed_link']) ? $aSharePublishersFeed['feed_link'] : Phpfox::getLib('url')->makeUrl(Phpfox::getUserBy('user_name'));
                if ($iUserId != Phpfox::getUserId())
                {
                    $sProfileName = Phpfox::getLib('database')->select("user_name")->from(Phpfox::getT('user'))->where('user_id = ' . (int) $iUserId)->execute('getField');
                    $aSharePublishers['url'] = Phpfox::getLib('url')->makeUrl($sProfileName);
                }
                $aSharePublishers['text'] = isset($aSharePublishersFeed['content']) ? $aSharePublishersFeed['content'] : "";
                $aSharePublishers['content'] = isset($aSharePublishersFeed['content']) ? $aSharePublishersFeed['content'] : "";
                $aSharePublishers['title'] = isset($aSharePublishersFeed['content']) ? $aSharePublishersFeed['content'] : $sTitle;
                if (isset($aInsert['parent_feed_id']) && $aInsert['parent_feed_id'] > 0)
                {
                    Phpfox::getService('socialpublishers')->showPublisher($aShareType, Phpfox::getUserId(), $aSharePublishers, 2);
                }
                else
                {
                    Phpfox::getService('socialpublishers')->showPublisher($aShareType, Phpfox::getUserId(), $aSharePublishers);
                }
            }
            elseif ($sType != 'pages_comment' && $sType != 'event')
            {
                $aSupportedModule = Phpfox::getService('socialpublishers.modules')->getModule($sType);

                if (count($aSupportedModule) > 0 || $sType == "feed_comment" || $sType == "pages_comment" || $sType == "status" || $sType == "user_status")
                {
                    
                    $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iActualUserId);
                    Phpfox::getLib('cache')->save($sIdCache, $aShareFeedInsert);
                }
                if (strpos($sType, 'music') !== false && strpos($sType, 'comment') === false)
                {
                    
                    $sIdCache = Phpfox::getLib('cache')->set("socialpublishers_feed_" . $iActualUserId);
                   
                    Phpfox::getLib('cache')->save($sIdCache, $aShareFeedInsert);
                }
            }
        }
    }
} 
 //	not use 
 ";s:49:"socialbridge.component_controller_setting_process";s:567:"defined('PHPFOX') or exit('NO DICE!');

if (isset($aMenus))
{
    $aFacebook = phpfox::getService('socialbridge.providers')->getProvider('facebook');
    $aTwitter = phpfox::getService('socialbridge.providers')->getProvider('twitter');
    $aLinkedIn = phpfox::getService('socialbridge.providers')->getProvider('linkedin');

    if (($aFacebook && $aFacebook['is_active'] > 0) || ($aTwitter && $aTwitter['is_active'] > 0) || ($aLinkedIn && $aLinkedIn['is_active'] > 0))
    {
        $aMenus['socialpublishers'] = _p('socialpublishers.social_publishers');
    }
} 
 ";s:38:"blog.component_ajax_addviastatusupdate";s:395:"if(phpfox::isModule('socialpublishers') && !Phpfox::getUserParam('blog.approve_blogs'))
{
    $sUrl = Phpfox::permalink('blog', $iBlogId, $aVals['title']);
    $sType = 'blog';
    $iUserId = Phpfox::getUserId();
    $sMessage = $aVals['text'];
    $aVals['url'] = $sUrl;
    $aVals['content'] = $sMessage;
    phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVals);
} 
 ";s:54:"socialpublishers.component_controller_privacy_settings";s:1252:"if (isset($aRow['privacy']))
{
    switch ($aRow['privacy']) {
        case 0:
            $aPostParam['privacy'] = "{'value':'EVERYONE'}";
            break;
        case 1:
            $aPostParam['privacy'] = "{'value':'ALL_FRIENDS'}";
            break;
        case 2:
            $aPostParam['privacy'] = "{'value':'FRIENDS_OF_FRIENDS'}";
            break;
        case 3:
            $aPostParam['privacy'] = "{'value':'SELF'}";
            break;
        case 4:
            $sFql = 'SELECT flid FROM friendlist WHERE owner = me()';
            
            $aResult = Phpfox::getService('socialbridge.provider.facebook')->getApi()->api('/fql', 'GET', array('q' => $sFql));
            
            $aFriendListId = array();
            if (isset($aResult['data']) && isset($aResult['data'][0]))
            {
                $aFriendListId = $aResult['data'][0];
            }
            
            $sFriendListId = implode(',', $aFriendListId);
            
            $aPostParam['privacy'] = "{'value': 'CUSTOM', 'allow': '" . $sFriendListId . "'}";
            break;
        default:
            $aPostParam['privacy'] = "{'value':'SELF'}";
            break;
    }
}
else
{
    $aPostParam['privacy'] = "{'value':'EVERYONE'}";
} 
 ";s:40:"socialbridge.template_controller_setting";s:90:"defined('PHPFOX') or exit('NO DICE!');

Phpfox::getBlock('socialpublishers.settings'); 
 ";s:33:"video.component_ajax_convert_feed";s:1201:"$iPageId = Phpfox::getLib('session')->get('socialintegration_pageId');
if(phpfox::isModule('socialpublishers') && ($iPageId ? 1 : !Phpfox::getUserParam('video.approve_video_before_display')))
{
    if($iPageId)
    {
        $aCallBack = array(
			'module' => 'pages',
			'item_id' => $iPageId,
			'table_prefix' => 'pages_'
		);	
        $aFeed = Phpfox::getService('feed')->callback($aCallBack)->get(Phpfox::getUserId(), $iFeedId);    
    }
    else
    {
        $aFeed = Phpfox::getService('feed')->get(Phpfox::getUserId(), $iFeedId);    
    }
    if(count($aFeed))
    {
        $aVideo = Phpfox::getService('video')->getVideo($aFeed[0]['item_id'], true);
        $sUrl = $aFeed[0]['feed_link'];
        $sType = 'video';
        $iUserId = phpfox::getUserId();
        $sMessage = (isset($aFeed[0]['feed_status']) && !empty($aFeed[0]['feed_status'])) ? $aFeed[0]['feed_status'] : isset($aFeed[0]['title']) ? $aFeed[0]['title'] : "";        
        $aVals['url'] = $sUrl;
        $aVals['content'] = $sMessage;
        $aVals['title'] = $aVideo['title'];
        $bIsFrame = true;
        phpfox::getService('socialpublishers')->showPublisher($sType,$iUserId,$aVals,$bIsFrame);
    }    
} 
 ";s:37:"validator.admincp_settings_suggestion";s:672:"$aValidation = [
    'number_friend_suggestion_header_bar' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('"Number of item on Friend Suggestions block in Friend Request at header bar" must be greater than 0'),
    ],
    'number_people_may_you_know_header_bar' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('"Number of item on People You May Know in Friend Request at header bar" must be greater than 0'),
    ],
    'number_item_on_other_block' => [
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('"Number of item on other blocks" must be greater than 0'),
    ],
]; 
 ";s:35:"friend.component_block_accept_clean";s:11529:"//Phpfox::getBlock('suggestion.advanced-menu');
	//echo Phpfox::getLib('ajax')->getContent(false);

/*get all incomming suggestion friend*/
$aSuggestFriends1 = Phpfox::getService('suggestion')->getSuggestionFriendList(Phpfox::getUserId());

shuffle($aSuggestFriends1);

$limit = count($aSuggestFriends1) < Phpfox::getParam('suggestion.number_friend_suggestion_header_bar') ? count($aSuggestFriends1) : Phpfox::getParam('suggestion.number_friend_suggestion_header_bar');

$aSuggestFriends = array();

for ($i=0; $i < $limit; $i++) { 
       
      $aSuggestFriends[]= array_shift($aSuggestFriends1);
}
/*echo '<pre>';
print_r($aSuggestFriends);*/
$PhraseSuggestFriend = _p('suggestion.friend_suggestions');
$PhrasePeopleMayYouKnow = _p('suggestion.people_may_you_know');
$no_new_suggest_friend = _p('suggestion.no_new_suggest_friend');
$no_recommend_to_you = _p('suggestion.no_recommend_to_you');
$add = _p('suggestion.add_header_block');
$addfriend = _p('suggestion.add_friend_header_block');
$ignore = _p('suggestion.ignore');
$suggested_by =  _p('suggestion.suggested_by');
$findFriends =  _p('suggestion.find_friends');
$findFriendLink = Phpfox::getLib('url')->makeUrl('suggestion', array('view' => 'friendsfriend'));
if(count($aSuggestFriends) > 0 ) {

?>
<div class="holder_notify_drop_title"><?php echo $PhraseSuggestFriend; ?></div>
<div class="clear"></div> 
<div class="all_list_suggest_friend">
<ul class"suggestion_friend" id="js_new_friend_holder_drop_1" >
<?php foreach ($aSuggestFriends as $key_suggest => $aSuggestFriend) {
$paramImage = array();
$paramImage['user'] = $aSuggestFriend['info_suggestion_friend'];
$paramImage['path'] = 'core.url_user';
$paramImage['file'] = $aSuggestFriend['info_suggestion_friend']['user_image'];
$paramImage['suffix'] = '_50_square';
$paramImage['max_width'] = '50';
$paramImage['max_height'] = '50';
$imageHTML = Phpfox::getLib('phpfox.image.helper')->display($paramImage);
$sLinkFriendSuggestion = Phpfox::getLib('url')->makeUrl('profile', $paramImage['user']['user_name']);
$sLinkWhoSuggested = Phpfox::getLib('url')->makeUrl('profile', $aSuggestFriend['user_suggest']['user_name']);
if($aSuggestFriend['number_mutal_friend'] == 1) {
    $PhraseMutualFriends =  _p('suggestion.mutual_friend',array('total' => $aSuggestFriend['number_mutal_friend'] )); 
}
else
{
$PhraseMutualFriends =  _p('suggestion.mutual_friends',array('total' => $aSuggestFriend['number_mutal_friend'] )); 
}
 ?>
    <li style=" padding-top: 5px; padding-bottom: 16px;" id="js_new_friend_request_<?php echo $key_suggest;?>" class="holder_notify_drop_data with_padding <?php if($key_suggest = '0') { echo 'first'; } ?> js_friend_request_1">
            <div class="drop_data_image">
                <?php echo $imageHTML;?>          
            </div>
    <div class="drop_data_content">
           <div class="drop_data_user">
                    <div class="drop_data_action" style="position: relative; float: right; margin-left: 10px;">
                        <div class="js_drop_data_add" style="display:none; padding-right:5px;">
                            <img src="<?php echo Phpfox::getParam('core.path');?>theme/frontend/default/style/default/image/ajax/add.gif"  alt="" />                  
                        </div>                       
                        <div class="js_drop_data_button" id="drop_down_1">
                            <ul class="table_clear_button_suggest_friend">
                                <li style="float: left; padding-right:5px; margin-bottom: 5px;"><button type="button" name="" class="button btn-primary btn-sm" onclick="return $Core.addAsFriend('<?php echo $aSuggestFriend['info_suggestion_friend']['user_id'];?>'); "><?php echo $add;?></button></li>
                                <li style="float: left;"><button style="width: 100%;" type="button" name="" class="button button_off btn btn-default btn-sm" onclick="ignoreSuggestFriend(<?php echo $aSuggestFriend['suggest_id'];?>,<?php echo $aSuggestFriend['user_suggest']['user_id']?>,<?php echo $aSuggestFriend['info_suggestion_friend']['user_id'];?>);"><?php echo $ignore;?></button>
                                </li>
                            </ul>
                            <div class="clear"></div>
                        </div>
                    </div>
                    <div style="line-height: 1.6">
                        <span class="user_profile_link_span" id="js_user_name_link_<?php echo $aSuggestFriend['info_suggestion_friend']['user_name'];?>"><a href="<?php echo $sLinkFriendSuggestion;?>"><?php echo $aSuggestFriend['info_suggestion_friend']['full_name'];?></a></span>                        
                        <br /><span style='color: #4F4F4F;'><?php echo $PhraseMutualFriends; ?></span>
                        <br /><span style='color: #4F4F4F;'><?php echo $suggested_by;?></span> <span class="user_profile_link_span"><a href="<?php echo $sLinkWhoSuggested;?>"><?php echo $aSuggestFriend['user_suggest']['full_name']?></a></span>
                        
                    </div>                  
        </div>              
    </div>
    <div class="clear"></div>       
    </li>
<?php } ?>
</ul>
<?php
}
else{
?>
<div class="holder_notify_drop_title"><?php echo $PhraseSuggestFriend; ?></div>
<div class="clear"></div> 
<div class="holder_notify_drop_data"><div class="drop_data_empty">
<?php echo $no_new_suggest_friend;?></div>
<div class="clear"></div> 
</div>
 <?php
}
?>
</div>


<?php
/*get all people may you know*/
$aPeopleYouMayKnows = Phpfox::getService('suggestion')->getPeopleYouMayKnow(Phpfox::getUserId());

if(count($aPeopleYouMayKnows) > 0 ) {
?>
<div class="holder_notify_drop_title"><?php echo $PhrasePeopleMayYouKnow; ?></div>
<div class="clear"></div> 
<div class="all_list_people_you_may_know">
<?php foreach ($aPeopleYouMayKnows as $key_suggest => $aPeopleYouMayKnow) {
$paramImage = array();
$paramImage['user'] = $aPeopleYouMayKnow['info_suggestion_friend'];
$paramImage['path'] = 'core.url_user';
$paramImage['file'] = $aPeopleYouMayKnow['info_suggestion_friend']['user_image'];
$paramImage['suffix'] = '_50_square';
$paramImage['max_width'] = '50';
$paramImage['max_height'] = '50';
$imageHTML = Phpfox::getLib('phpfox.image.helper')->display($paramImage);
$sLink = Phpfox::getLib('url')->makeUrl('profile', $paramImage['user']['user_name']);

if($aPeopleYouMayKnow['number_mutal_friend'] == 1) {
    $PhraseMutualFriends =  _p('suggestion.mutual_friend',array('total' => $aPeopleYouMayKnow['number_mutal_friend'] )); 
}
else
{
    $PhraseMutualFriends =  _p('suggestion.mutual_friends',array('total' => $aPeopleYouMayKnow['number_mutal_friend'] )); 
}

?>
<ul class"people_you_may_know"  >
    <li style=" padding-top: 5px; padding-bottom: 16px;" id="js_new_friend_request__<?php echo $key_suggest;?>" class="holder_notify_drop_data with_padding <?php if($key_suggest = 0) echo 'first';?> js_friend_request_1">
            <div class="drop_data_image">
            <?php echo $imageHTML;?>
            </div>
    <div class="drop_data_content">
           <div class="drop_data_user">
                    <div class="drop_data_action">
                        <div class="js_drop_data_add" style="display:none; padding-right:5px;">
                            <img src="<?php echo Phpfox::getParam('core.path');?>theme/frontend/default/style/default/image/ajax/add.gif"  alt="" />                  
                        </div>                       
                        <div class="js_drop_data_button" id="drop_down_1">
                            <ul class="table_clear_button_suggest_friend">
                                <li><button type="button" name="" class="button btn btn-success btn-sm" onclick="return $Core.addAsFriend('<?php echo $aPeopleYouMayKnow['info_suggestion_friend']['user_id'];?>'); "><?php echo $addfriend;?></button></li>
                            </ul>
                            <div class="clear"></div>
                        </div>
                    </div>
                    <div style="width:120px;line-height: 1.6"">
                        <span class="user_profile_link_span" id="js_user_name_link_<?php echo $aPeopleYouMayKnow['info_suggestion_friend']['user_name'];?>"><a href="<?php echo $sLink;?>"><?php echo $aPeopleYouMayKnow['info_suggestion_friend']['full_name'];?></a></span><br>                        
                        <span class="user_profile_link_span" style='color: #4F4F4F;' > <?php echo $PhraseMutualFriends;?> </span>
                    </div>                  
        </div>              
    </div>
    <div class="clear"></div>       
    </li>
</ul>
<?php } 
}
else{
?>
<div class="holder_notify_drop_title"><?php echo $PhrasePeopleMayYouKnow; ?></div>
<div class="clear"></div> 
<div class="holder_notify_drop_data"><div class="drop_data_empty">
<?php echo $no_recommend_to_you;?></div>
<div class="clear"></div> 
</div>
 <?php
}
?>
</div>
<a href="<?php echo $findFriendLink;?>" class="holder_notify_drop_link"><?php echo $findFriends; ?></a>



<?php if (Phpfox::isModule('suggestion') && Phpfox::isUser()){?>

<script lang="javascript">

    function ignoreSuggestFriend(suggest_id,user_id,item_id) {
        $('#js_new_friend_holder_drop_'+suggest_id).slideUp(); 
       
         $.ajaxCall('suggestion.ignoreSuggestFriend','iUserId='+user_id+
                                                    '&iItemId='+item_id
                                                        ); 

        if($('.all_list_suggest_friend > ul:visible').length == 1){
            $('.all_list_suggest_friend').append('<div class="clear"></div><div class="holder_notify_drop_data"><div class="drop_data_empty"> <?php echo $no_new_suggest_friend;?></div><div class="clear"></div></div>');
                                                 
         }
    }

    var _iFriendId = "";  
    
    $('.table_clear_button').find('input').eq(0).click(function(e){            
        e.preventDefault();
        var _html = $(this).attr('onclick');
        _iFriendId = /user_id=[\d]+/i.exec(_html)+"";
        _iFriendId = _iFriendId.replace(/user_id=/g,"");

        $.ajaxCall('suggestion.approve','iItemId='+<?php  echo Phpfox::getUserId();?>+'&iApprove=1&sModule=suggestion_friend&iFriendId='+_iFriendId+'&bAddFriend=0');
        <?php if (Phpfox::getService('suggestion')->isAllowSuggestionPopup() && Phpfox::getUserParam('suggestion.enable_friend_suggestion') && Phpfox::getUserParam('suggestion.enable_friend_suggestion_popup')){?>
            if(_iFriendId!="null"){suggestion_and_recommendation_tb_show("...",$.ajaxBox('suggestion.friends','iFriendId='+_iFriendId+'&sSuggestionType=suggestion'+'&sModule=suggestion_friend'));}
        <?php }elseif(Phpfox::getService('suggestion')->isAllowRecommendationPopup() && Phpfox::getUserParam('suggestion.enable_friend_recommend')){?>
            suggestion_and_recommendation_tb_show("...",$.ajaxBox('suggestion.friends','iFriendId='+_iFriendId+'&sSuggestionType=recommendation'));
        <?php }?>
        return true;
    });
    
    $('.table_clear_button').find('input').eq(1).click(function(e){
        e.preventDefault();
        var _html = $(this).attr('onclick');
        _iFriendId = /user_id=[\d]+/i.exec(_html)+"";
        _iFriendId = _iFriendId.replace(/user_id=/g,"");
        $.ajaxCall('suggestion.approve','iItemId='+<?php  echo Phpfox::getUserId();?>+'&iApprove=2&sModule=suggestion_friend&iFriendId='+_iFriendId);
        return true;
    });    
</script>

<?php }/*end check module*/ 
 ";s:37:"user.component_controller_index_clean";s:2880:"$sSuggestion = _p('suggestion.suggestion_setting', array(), false, "Suggestion");
    $iPageId=1;
    if(!phpfox::getUserParam("suggestion.enable_friend_suggestion"))
        $iPageId=0;
    if(!phpfox::getUserParam("suggestion.enable_friend_recommend") && !phpfox::getUserParam("suggestion.enable_friend_suggestion_popup") && !phpfox::getUserParam("suggestion.enable_content_suggestion_popup"))
        $iPageId=0;
?>
<script type="text/javascript" language="javascript">

    $Behavior.onLoadPlugin_suggestion = function() 
    {
    	if ($('#page_user_privacy').length)
    	{
    		$(".page_section_menu").find("li").find("a").click(function(evt) {
        		$('#_privacy_holder_table').find("#js_privacy_block_suggestion2").hide();
        		$('#js_privacy_block_suggestion').hide();
    		});

            if ( ($("#content").find("ul").first().find("#suggestion_tab").length == 0)
                && ($("#content").find("ul").first().find("li:not(:last)").hasClass('active')))
		    {
		        <?php 
		            if ($iPageId)
		            {
		        ?>
                $('#_privacy_holder_table').find("form").append($("<div id=\"js_privacy_block_suggestion\" class=\"js_privacy_block page_section_menu_holder\" style=\"display: none;\">"));
                $("#content").find("ul").first().append("<li><a href=\"#suggestion_tab\" rel=\"js_privacy_block_suggestion2\" id=\"suggestion_tab\" onclick=\"showSuggestion(this);return false;\"><?php echo $sSuggestion;?></a></li>");


                <?php
                    if ($this->request()->get('tab') == 'suggestion_tab')
                    {
                ?>
                        $("#suggestion_tab").click();
                <?php
                    }
                }
                ?>
    		}

            <?php
                if ($this->request()->get('tab') == 'suggestion_tab')
                {
            ?>
                    $('#page_user_privacy #_privacy_holder_table').append("<div id='js_privacy_block_suggestion2'></div>");
                    $('#page_user_privacy #js_privacy_block_suggestion2').load($.ajaxBox('suggestion.config'));
            <?php
                } else { ?>
                    $('#page_user_privacy #_privacy_holder_table').append("<div style='display:none' id='js_privacy_block_suggestion2'></div>");
                    $('#page_user_privacy #js_privacy_block_suggestion2').load($.ajaxBox('suggestion.config'));
             <?php } ?>
    		
        }
    };
    function showSuggestion(obj){
    	$('.page_section_menu_holder').hide();
        $this = $(obj); 
    	$this.unbind();
        $('#_privacy_holder_table').find("#js_privacy_block_suggestion").show();

        $this.parents("ul").find(".active").removeClass("active");
        $this.parent().addClass("active");
        
        $('#js_privacy_block_suggestion2').show();
    }
    
</script> 
 ";s:36:"photo.component_ajax_ajax_process__1";s:360:"if (Phpfox::isModule('suggestion') && Phpfox::isUser())
{
    if (Phpfox::getService('suggestion')->isSupportModule('photo') && Phpfox::getUserParam('suggestion.enable_friend_suggestion'))
    {
        $_SESSION['suggestion']['ajax'] = true;
		Phpfox::setCookie("suggestion_ajax", '1');
		$ynsuggestion_ajax = Phpfox::getCookie('suggestion_ajax');
    }
} 
 ";s:41:"friend.component_controller_pending_clean";s:132:"if (Phpfox::isModule('suggestion') && Phpfox::isUser()){?>
<?php }/*end check module; does not have element id to get username*/ 
 ";s:40:"friend.component_controller_accept_clean";s:2684:"if (Phpfox::isModule('suggestion') && Phpfox::isUser()){
    
    /*
     * get current user 
     */
    
    $aUser = Phpfox::getService('suggestion')->getUserBy('user_name','admin');
    if (count($aUser)>0)
        $iAdminUserId = $aUser['user_id'];
    else
        $iAdminUserId = 1;
?>
<script lang="javascript">
    $Behavior.friendIncomingAcceptSuggestion = function(){
        
        $('.js_drop_data_button').each(function(){
            
            /*confirm button click*/
            $(this).find('li').eq(0).find('input').click(function(){
                var _html = $(this).attr('onclick');
                
                _iFriendId = /user_id=[\d]+/i.exec(_html)+"";
                _iFriendId = _iFriendId.replace(/user_id=/g,"");
                
                if (_iFriendId != ''){
                    /*approve accept*/  
                    $.ajaxCall('suggestion.approve','iItemId='+<?php  echo Phpfox::getUserId();?>+'&iApprove=1&sModule=suggestion_friend&iFriendId='+_iFriendId+'&bAddFriend=0');
                    <?php if (Phpfox::getService('suggestion')->isAllowSuggestionPopup() && Phpfox::getUserParam('suggestion.enable_friend_suggestion') && Phpfox::getUserParam('suggestion.enable_friend_suggestion_popup')){?>
                         if(_iFriendId!="null"){suggestion_and_recommendation_tb_show("...",$.ajaxBox('suggestion.friends','iFriendId='+_iFriendId+'&sSuggestionType=suggestion'+'&sModule=suggestion_friend'));}
                    <?php }elseif(Phpfox::getService('suggestion')->isAllowRecommendationPopup() && Phpfox::getUserParam('suggestion.enable_friend_recommend')){?>
                         suggestion_and_recommendation_tb_show("...",$.ajaxBox('suggestion.friends','iFriendId='+_iFriendId+'&sSuggestionType=recommendation'));
                    <?php }?>
                }
                return true;
            });
            
            /*deny button click*/      
            $(this).find('li').eq(1).find('input').click(function(e){
                var _html = $(this).attr('onclick');
                
                _iFriendId = /user_id=[\d]+/i.exec(_html)+"";
                _iFriendId = _iFriendId.replace(/user_id=/g,"");
                
                if (_iFriendId != ''){
                    
                    setTimeout(function(){
                        $.ajaxCall('suggestion.approve','iItemId='+<?php  echo Phpfox::getUserId();?>+'&iApprove=2&sModule=suggestion_friend&iFriendId='+_iFriendId+'&bAddFriend=0');
                    },100);
                    
                }
                return true;
            }); 
        });        
    }
</script>
<?php }/*end check module*/ 
 ";s:39:"notification.component_block_link_clean";s:1065:"if (Phpfox::isModule('suggestion') && Phpfox::isUser()){?>
<script lang="javascript">
	
   $('a[class^="main_link"]').each(function(){
       var _href = $(this).attr('href');
       
       if (_href.indexOf("#suggest") >= 0){
           _href = _href.split("_");
           
           iUserId = _href[1];      
           sUserName = _href[2];           
           $(this).click(function(e){
         _href = $(this).attr('href');
				_href = _href.split("_");
				iUserId = _href[1];      
				sUserName = _href[2];
               e.preventDefault();
               <?php  if (Phpfox::getUserParam('suggestion.enable_friend_suggestion') && Phpfox::getUserParam('suggestion.enable_friend_suggestion_popup') && Phpfox::getService('suggestion')->isAllowSuggestionPopup()) { ?>
                    suggestion_and_recommendation_tb_show("...",$.ajaxBox('suggestion.friends','iFriendId='+iUserId+'&sSuggestionType=friend_add&sModule=suggestion_friend'));
               <?php }?>
           });           
       }
   });   
</script>
<?php }/*end check module*/ 
 ";s:39:"suggestion.component_block_search_clean";s:597:"/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
?>
<script lang="javascript">   
//    $Behavior.initAppendAvatar = function(){        
    //$.ajaxCall('suggestion.appendSelected');
    
//    $('span[id^="js_friend_"]').each(function(){        
//        var _id = $(this).attr('id').split("_");
//        if (_id.length>0){
//            _iUserId = _id[2];            
//            $.ajaxCall('suggestion.append_user_image','iUserId='+_iUserId);            
//        }
//    })};           
//    $Behavior.initAppendAvatar();
</script> 
 ";s:45:"notification.component_controller_index_clean";s:1106:"if (Phpfox::isModule('suggestion') && Phpfox::isUser()){?>
<script lang="javascript">
$Behavior.txxxxxx = function(){
   $('a[class^="main_link"]').each(function(){
       var _href = $(this).attr('href');
       
       if (_href.indexOf("#suggest") >= 0){
           _href = _href.split("_");
          
           iUserId = _href[1];      
           sUserName = _href[2];           
           $(this).click(function(e){
				_href = $(this).attr('href');
				_href = _href.split("_");
				iUserId = _href[1];      
				sUserName = _href[2];
           	  
               e.preventDefault();
               <?php  if (Phpfox::getUserParam('suggestion.enable_friend_suggestion') && Phpfox::getUserParam('suggestion.enable_friend_suggestion_popup') && Phpfox::getService('suggestion')->isAllowSuggestionPopup()) { ?>
                    suggestion_and_recommendation_tb_show("...",$.ajaxBox('suggestion.friends','iFriendId='+iUserId+'&sSuggestionType=friend_add&sModule=suggestion_friend'));
               <?php }?>
           });           
       }
   });   
}
</script>
<?php }/*end check module*/ 
 ";s:39:"friend.component_controller_index_clean";s:1037:"if (Phpfox::isModule('suggestion') && Phpfox::isUser() && Phpfox::getUserParam('suggestion.enable_friend_suggestion')){?>
<script lang="javascript">
    $Behavior.append_suggestion_member_page = function(){
        var _iUserId = '';    
        $('.friend_row_holder').each(function(){
            var _id = $(this).find('input').eq(0).val();
            var _iCurrentId = '<?php  echo (int)Phpfox::getUserId();?>';
            if (_id != ''){
                if (_id != _iCurrentId && !isNaN(_id)){                
                    $(this).find('.user_profile_link_span').append('<span id="user_member_page_'+_id+'"></span>');
                    _iUserId += _id+",";         
                }  
            } 
        });  
        _iUserId = substr(_iUserId, 0, _iUserId.length-1)+'';   
        $.ajaxCall('suggestion.appendSuggest','sUserId='+_iUserId);        
    };
</script>
<?php }/*end check module*/?>

<style>
    #page_friend_index .user_rows{
        overflow: visible;
        margin-bottom: 60px;
    }
</style> 
 ";s:52:"photo.component_controller_frame_process_photos_done";s:269:"if (Phpfox::isModule('suggestion') && Phpfox::isUser())
{
    if (Phpfox::getService('suggestion')->isSupportModule('photo') && Phpfox::getUserParam('suggestion.enable_friend_suggestion'))
    {
        $_SESSION['suggestion']['photo']['method'] = 'simple';
    }
} 
 ";s:38:"profile.component_block_header_process";s:1791:"// in phpfox4 move to "profile.component_block_pic_clean.php" this plug in not work
if (Phpfox::isModule('suggestion') && Phpfox::isUser()){
    $sSuggestToFriends = _p('suggestion.suggest_to_friends_2');
    $sUserName = Phpfox::getUserBy('user_name');
    $sUserName = $this->request()->get('req1');
    $aUser = Phpfox::getService('suggestion')->getUserBy('user_name',$sUserName);
    
    if(is_array($aUser) && count($aUser)>0){
        $iFriendId = $aUser['user_id'];
        $bIsFriend = Phpfox::getService('suggestion')->isMyFriend($iFriendId);        
    }else{
        $iFriendId = Phpfox::getUserId();
        $bIsFriend = false;
    }
    if ($bIsFriend){
    ?> 
    <script language="javascript">
    $Behavior.loadProfileHeaderSuggestion = function(){
        if($('#suggestion_profile_btn').length <= 0){
            <?php if (Phpfox::getUserParam('suggestion.enable_friend_suggestion')){?>
                $('.profiles_action').find('ul').eq(0).prepend('<li id="suggestion_profile_btn"><a onclick="suggestion_and_recommendation_tb_show(\'...\',$.ajaxBox(\'suggestion.friends\',\'iFriendId=<?php  echo $iFriendId;?>&sSuggestionType=suggestion&sModule=suggestion_friend\')); return false;" href="#"><?php  echo $sSuggestToFriends?></a></li>');
            <?php }elseif(Phpfox::getUserParam('suggestion.enable_friend_recommend')){?>
                $('.profiles_action').find('ul').eq(0).prepend('<li id="suggestion_profile_btn"><a onclick="suggestion_and_recommendation_tb_show(\'...\',$.ajaxBox(\'suggestion.friends\',\'iFriendId=<?php  echo $iFriendId;?>&sSuggestionType=recommendation\')); return false;" href="#"><?php  echo $sSuggestToFriends?></a></li>');
            <?php }?>            
        }
    };
    </script>
    <?php }?>

<?php } /*end check module*/ 
 ";s:33:"profile.component_block_pic_clean";s:3591:"if (Phpfox::isModule('suggestion') && Phpfox::isUser()){
    

$sSuggestionLink = Phpfox::permalink('suggestion', null);
$sSuggestion = _p('suggestion.suggestion');
$iTotalSuggestion = (int)Phpfox::getService('suggestion')->getTotalIncomingSuggestion(Phpfox::getUserId());

$sUserName = $this->request()->get('req1');

if ($sUserName == Phpfox::getUserBy('user_name')){   

/*display total suggestion from 0*/
$sSuggestion .= '<span class="badge_number">'.$iTotalSuggestion.'</span>';

$sBg = Phpfox::getParam('core.path')."module/suggestion/static/image/suggestion.png";
?>
<script language="javascript">

    $Behavior.loadPluginSuggestionBlockPic = function(){
        $().ready(function(){
            if (!$Core.exists('#suggestion_leftbar')){
                $('#page_profile_index .profiles_menu > ul.container-fluid').find('li.dropdown > ul').eq(0).append('<li class="" id="suggestion_leftbar"><a href="<?php  echo $sSuggestionLink?>"><?php  echo $sSuggestion?></a></li>');
                $('#page_profile_index .timeline_main_menu').find('ul').eq(0).append('<li class="suggestion" id="suggestion_leftbar"><a href="<?php  echo $sSuggestionLink?>"><?php  echo $sSuggestion?></a></li>');
             }
        });    
    }
</script>
<style>
    .suggestion:hover{background-color:#EFF9FF}
</style>
<?php }?>

<?php } /*end check module*/?>


<?php 
// this code from  "profile.component_block_header_process.php"; 

if (Phpfox::isModule('suggestion') && Phpfox::isUser()){
    $sSuggestToFriends = _p('suggestion.suggest_to_friends_2');
    $sUserName = Phpfox::getUserBy('user_name');
    $sUserName = $this->request()->get('req1');
    $aUser = Phpfox::getService('suggestion')->getUserBy('user_name',$sUserName);
    
    if(is_array($aUser) && count($aUser)>0){
        $iFriendId = $aUser['user_id'];
        $bIsFriend = Phpfox::getService('suggestion')->isMyFriend($iFriendId);        
    }else{
        $iFriendId = Phpfox::getUserId();
        $bIsFriend = false;
    }
	
	if ($aUser['user_id'] == Phpfox::getUserId())
	{
		   $bIsFriend = false;
	}
	?>
	<script language="javascript">
	<?php
    if ($bIsFriend){
    ?> 
		var bIsFriend = true;
	<?php }else
		{?>
			var bIsFriend = false;
			<?php }
	?>
	</script>
	<?php
    if ($bIsFriend){
    ?> 
    <script language="javascript">
    
    $Behavior.loadProfileHeaderSuggestion = function(){
    	if (bIsFriend){
    		console.log(bIsFriend);
		        if($('#suggestion_profile_btn').length <= 0){
		            <?php if (Phpfox::getUserParam('suggestion.enable_friend_suggestion')){?>
		                $('.profiles_action').find('ul').eq(0).prepend('<li id="suggestion_profile_btn"><a onclick="suggestion_and_recommendation_tb_show(\'...\',$.ajaxBox(\'suggestion.friends\',\'iFriendId=<?php  echo $iFriendId;?>&sSuggestionType=suggestion&sModule=suggestion_friend\')); return false;" href="#"><i class="fa fa-users"></i><?php //  echo $sSuggestToFriends?></a></li>');
		            <?php }elseif(Phpfox::getUserParam('suggestion.enable_friend_recommend')){?>
		                $('.profiles_action').find('ul').eq(0).prepend('<li id="suggestion_profile_btn"><a onclick="suggestion_and_recommendation_tb_show(\'...\',$.ajaxBox(\'suggestion.friends\',\'iFriendId=<?php  echo $iFriendId;?>&sSuggestionType=recommendation\')); return false;" href="#"><i class="fa fa-users"></i><?php // echo $sSuggestToFriends?></a></li>');
		            <?php }?>            
		        }
    	}else
    	{
    		$('#suggestion_profile_btn').remove();
    	}
    	
    };
    </script>
    <?php }?>

<?php } /*end check module*/ 
 ";s:30:"validator.admincp_settings_tag";s:199:"defined('PHPFOX') or exit('NO DICE!');

$aValidation['tag_trend_total_display'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => 'Total tag to display must be greater than 0',
]; 
 ";s:36:"validator.admincp_user_settings_user";s:471:"defined('PHPFOX') or exit('NO DICE!');

$aValidation['total_times_can_change_user_name'] = [
    'def' => 'int',
    'min' => '0',
    'title' => '"How many times can this user group edit their user name" must be greater than or equal to 0',
];
$aValidation['total_times_can_change_own_full_name'] = [
    'def' => 'int',
    'min' => '0',
    'title' => '"How many times can members of this user group change their full name?" must be greater than or equal to 0',
]; 
 ";s:31:"validator.admincp_settings_user";s:1605:"defined('PHPFOX') or exit('NO DICE!');

$aValidation['date_of_birth_start'] = [
    'def' => 'int:required',
    'min' => '1900',
    'max' => '2017',
    'title' => '"Date of Birth (Start)" the range is accepted: 1900 -> 2017',
];
$aValidation['date_of_birth_end'] = [
    'def' => 'int:required',
    'min' => '1900',
    'max' => '2017',
    'requirements'=>[
        'min'=> '$date_of_birth_start',
    ],
    'title' => '"Date of Birth (End)" the range is accepted: 1900 -> 2017, and large than "Date of Birth (Start)"',
];
$aValidation['maximum_length_for_full_name'] = [
    'def' => 'int:required',
    'min' => '5',
    'requirements'=>[
        'min'=> '$min_length_for_username',
    ],
    'title' => '"Maximum Length for Full Name" must be greater than 4 and large than "Minimum Length for Username"',
];
$aValidation['min_length_for_username'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => '"Minimum Length for Username" must be greater than 0.',
];
$aValidation['max_length_for_username'] = [
    'def' => 'int:required',
    'min' => '1',
    'requirements'=>[
        'min'=> '$min_length_for_username',
    ],
    'title' => '"Maximum Length for Username" must be greater than "Minimum Length for Username"',
];

$aValidation['check_status_updates'] = [
    'def' => 'int',
    'min' => '0',
    'title' => _p('"Spam Check Status Updates" be greater than or equal to 0'),
];
$aValidation['resend_verification_email_delay_time'] = [
    'def' => 'int',
    'min' => '0',
    'title' => _p('resend_verification_email_delay_time_must_be_more_than_or_equal_to_0'),
]; 
 ";s:47:"user.component_controller_setting_process_check";s:838:";

    if(Phpfox::isUser() && Phpfox::isModule('ynadvancedpayment'))
    {
        if(isset($aVals['gateway_detail'])){
            if(isset($aVals['gateway_detail']['authorizenet']) && isset($aVals['gateway_detail']['authorizenet']['authorizenet_guideline'])){
                unset($aVals['gateway_detail']['authorizenet']['authorizenet_guideline']);
            }
            if(isset($aVals['gateway_detail']['ccbill']) && isset($aVals['gateway_detail']['ccbill']['ccbill_guideline'])){
                unset($aVals['gateway_detail']['ccbill']['ccbill_guideline']);
            }
            if(isset($aVals['gateway_detail']['itransact']) && isset($aVals['gateway_detail']['itransact']['itransact_guideline'])){
                unset($aVals['gateway_detail']['itransact']['itransact_guideline']);
            }
        }
    }

; 
 ";s:17:"request_is_mobile";s:424:";

if(Phpfox::isModule('ynchat')){
    $ynchatScriptUri = $this->getServer('SCRIPT_URI');
    if(empty($ynchatScriptUri) == false){
        $pos1 = strpos($ynchatScriptUri, 'ynchat' . PHPFOX_DS . 'js.php');
        $pos2 = strpos($ynchatScriptUri, 'ynchat' . PHPFOX_DS . 'css.php');
        if($pos1 === false && $pos2 === false){
        } else {
            $bRedirect = false;
        }
    }                    
}

; 
 ";s:33:"validator.admincp_settings_ynchat";s:747:"$aValidation['number_of_friend_list'] = [
    'def' => 'int:required',
    'min' => '0',
    'title' => '"Number of friend(s) in list" must be greater than or equal to 0',
];
$aValidation['number_of_old_message'] = [
    'def' => 'int:required',
    'min' => '0',
    'title' => 'Number of shown messages must be greater than or equal to 0',
];
$aValidation['placement_of_chat_frame'] = [
    'def' => 'int:required',
    'min' => '1',
    'max' => '2',
    'title' => 'Placement of chat frame must be 1 or 2',
];
$aValidation['number_of_friend_when_searching_friend_setting'] = [
    'def' => 'int:required',
    'min' => '0',
    'title' => '"Limit the number of friend when searching friend settings" must be greater than or equal to 0',
]; 
 ";s:29:"friend.service_process_add__1";s:94:";

if (Phpfox::isModule('ynchat'))
{
    Phpfox::getService('ynchat')->removeCache();
}

; 
 ";}s:1:"g";a:0:{}s:1:"e";O:8:"DateTime":3:{s:4:"date";s:26:"2020-06-05 09:06:32.000000";s:13:"timezone_type";i:3;s:8:"timezone";s:3:"GMT";}s:1:"m";N;s:1:"c";N;}